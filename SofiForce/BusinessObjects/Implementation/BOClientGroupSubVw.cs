/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOClientGroupSubVw.
	///</Summary>
	public partial class BOClientGroupSubVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _clientGroupSubId;
		protected Int32? _clientGroupId;
		protected string _clientGroupSubCode;
		protected string _clientGroupSubNameEn;
		protected string _clientGroupSubNameAr;
		protected bool? _isActive;
		protected bool? _canEdit;
		protected bool? _canDelete;
		protected string _icon;
		protected string _color;
		protected Int32? _displayOrder;
		protected string _clientGroupCode;
		protected string _clientGroupNameEn;
		protected string _clientGroupNameAr;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOClientGroupSubVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOClientGroupSubVw
		///</parameters>
		protected internal BOClientGroupSubVw(DAOClientGroupSubVw daoClientGroupSubVw)
		{
			try
			{
				_clientGroupSubId = daoClientGroupSubVw.ClientGroupSubId;
				_clientGroupId = daoClientGroupSubVw.ClientGroupId;
				_clientGroupSubCode = daoClientGroupSubVw.ClientGroupSubCode;
				_clientGroupSubNameEn = daoClientGroupSubVw.ClientGroupSubNameEn;
				_clientGroupSubNameAr = daoClientGroupSubVw.ClientGroupSubNameAr;
				_isActive = daoClientGroupSubVw.IsActive;
				_canEdit = daoClientGroupSubVw.CanEdit;
				_canDelete = daoClientGroupSubVw.CanDelete;
				_icon = daoClientGroupSubVw.Icon;
				_color = daoClientGroupSubVw.Color;
				_displayOrder = daoClientGroupSubVw.DisplayOrder;
				_clientGroupCode = daoClientGroupSubVw.ClientGroupCode;
				_clientGroupNameEn = daoClientGroupSubVw.ClientGroupNameEn;
				_clientGroupNameAr = daoClientGroupSubVw.ClientGroupNameAr;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ClientGroupSubVwCollection
		///This method returns the collection of BOClientGroupSubVw objects
		///</Summary>
		///<returns>
		///List[BOClientGroupSubVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOClientGroupSubVw> ClientGroupSubVwCollection()
		{
			try
			{
				IList<BOClientGroupSubVw> boClientGroupSubVwCollection = new List<BOClientGroupSubVw>();
				IList<DAOClientGroupSubVw> daoClientGroupSubVwCollection = DAOClientGroupSubVw.SelectAll();
			
				foreach(DAOClientGroupSubVw daoClientGroupSubVw in daoClientGroupSubVwCollection)
					boClientGroupSubVwCollection.Add(new BOClientGroupSubVw(daoClientGroupSubVw));
			
				return boClientGroupSubVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientGroupSubVwCollectionCount
		///This method returns the collection count of BOClientGroupSubVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ClientGroupSubVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOClientGroupSubVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOClientGroupSubVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOClientGroupSubVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientGroupSubVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOClientGroupSubVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boClientGroupSubVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOClientGroupSubVw> daoClientGroupSubVwCollection = DAOClientGroupSubVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOClientGroupSubVw resdaoClientGroupSubVw in daoClientGroupSubVwCollection)
					boClientGroupSubVwCollection.Add((T)(object)new BOClientGroupSubVw(resdaoClientGroupSubVw));
			
				return boClientGroupSubVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientGroupSubVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOClientGroupSubVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOClientGroupSubVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? ClientGroupSubId
		{
			get
			{
				 return _clientGroupSubId;
			}
			set
			{
				_clientGroupSubId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientGroupId
		{
			get
			{
				 return _clientGroupId;
			}
			set
			{
				_clientGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupSubCode
		{
			get
			{
				 return _clientGroupSubCode;
			}
			set
			{
				_clientGroupSubCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupSubNameEn
		{
			get
			{
				 return _clientGroupSubNameEn;
			}
			set
			{
				_clientGroupSubNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupSubNameAr
		{
			get
			{
				 return _clientGroupSubNameAr;
			}
			set
			{
				_clientGroupSubNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanEdit
		{
			get
			{
				 return _canEdit;
			}
			set
			{
				_canEdit = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanDelete
		{
			get
			{
				 return _canDelete;
			}
			set
			{
				_canDelete = value;
				_isDirty = true;
			}
		}
		
		public virtual string Icon
		{
			get
			{
				 return _icon;
			}
			set
			{
				_icon = value;
				_isDirty = true;
			}
		}
		
		public virtual string Color
		{
			get
			{
				 return _color;
			}
			set
			{
				_color = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? DisplayOrder
		{
			get
			{
				 return _displayOrder;
			}
			set
			{
				_displayOrder = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupCode
		{
			get
			{
				 return _clientGroupCode;
			}
			set
			{
				_clientGroupCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupNameEn
		{
			get
			{
				 return _clientGroupNameEn;
			}
			set
			{
				_clientGroupNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupNameAr
		{
			get
			{
				 return _clientGroupNameAr;
			}
			set
			{
				_clientGroupNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
