/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BODeal.
	///</Summary>
	public partial class BODeal : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _dealId;
		protected string _dealCode;
		protected string _dealNameEn;
		protected string _dealNameAr;
		protected decimal? _fromValue;
		protected decimal? _toValue;
		protected Int32? _growth1;
		protected Int32? _growth2;
		protected decimal? _growth1Discount;
		protected decimal? _growth2Discount;
		protected Int32? _growth1Days;
		protected Int32? _growth2Days;
		protected string _descAr;
		protected string _descEn;
		protected string _color;
		protected string _icon;
		protected Int32? _displayOrder;
		protected bool? _isActive;
		protected bool? _canEdit;
		protected bool? _canDelete;
		protected Int32? _cBy;
		protected DateTime? _cDate;
		protected Int32? _eBy;
		protected DateTime? _eDate;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BODeal()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 dealId
		///</parameters>
		public BODeal(Int32 dealId)
		{
			try
			{
				DAODeal daoDeal = DAODeal.SelectOne(dealId);
				_dealId = daoDeal.DealId;
				_dealCode = daoDeal.DealCode;
				_dealNameEn = daoDeal.DealNameEn;
				_dealNameAr = daoDeal.DealNameAr;
				_fromValue = daoDeal.FromValue;
				_toValue = daoDeal.ToValue;
				_growth1 = daoDeal.Growth1;
				_growth2 = daoDeal.Growth2;
				_growth1Discount = daoDeal.Growth1Discount;
				_growth2Discount = daoDeal.Growth2Discount;
				_growth1Days = daoDeal.Growth1Days;
				_growth2Days = daoDeal.Growth2Days;
				_descAr = daoDeal.DescAr;
				_descEn = daoDeal.DescEn;
				_color = daoDeal.Color;
				_icon = daoDeal.Icon;
				_displayOrder = daoDeal.DisplayOrder;
				_isActive = daoDeal.IsActive;
				_canEdit = daoDeal.CanEdit;
				_canDelete = daoDeal.CanDelete;
				_cBy = daoDeal.CBy;
				_cDate = daoDeal.CDate;
				_eBy = daoDeal.EBy;
				_eDate = daoDeal.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAODeal
		///</parameters>
		protected internal BODeal(DAODeal daoDeal)
		{
			try
			{
				_dealId = daoDeal.DealId;
				_dealCode = daoDeal.DealCode;
				_dealNameEn = daoDeal.DealNameEn;
				_dealNameAr = daoDeal.DealNameAr;
				_fromValue = daoDeal.FromValue;
				_toValue = daoDeal.ToValue;
				_growth1 = daoDeal.Growth1;
				_growth2 = daoDeal.Growth2;
				_growth1Discount = daoDeal.Growth1Discount;
				_growth2Discount = daoDeal.Growth2Discount;
				_growth1Days = daoDeal.Growth1Days;
				_growth2Days = daoDeal.Growth2Days;
				_descAr = daoDeal.DescAr;
				_descEn = daoDeal.DescEn;
				_color = daoDeal.Color;
				_icon = daoDeal.Icon;
				_displayOrder = daoDeal.DisplayOrder;
				_isActive = daoDeal.IsActive;
				_canEdit = daoDeal.CanEdit;
				_canDelete = daoDeal.CanDelete;
				_cBy = daoDeal.CBy;
				_cDate = daoDeal.CDate;
				_eBy = daoDeal.EBy;
				_eDate = daoDeal.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new Deal record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAODeal daoDeal = new DAODeal();
			RegisterDataObject(daoDeal);
			BeginTransaction("savenewBODeal");
			try
			{
				daoDeal.DealCode = _dealCode;
				daoDeal.DealNameEn = _dealNameEn;
				daoDeal.DealNameAr = _dealNameAr;
				daoDeal.FromValue = _fromValue;
				daoDeal.ToValue = _toValue;
				daoDeal.Growth1 = _growth1;
				daoDeal.Growth2 = _growth2;
				daoDeal.Growth1Discount = _growth1Discount;
				daoDeal.Growth2Discount = _growth2Discount;
				daoDeal.Growth1Days = _growth1Days;
				daoDeal.Growth2Days = _growth2Days;
				daoDeal.DescAr = _descAr;
				daoDeal.DescEn = _descEn;
				daoDeal.Color = _color;
				daoDeal.Icon = _icon;
				daoDeal.DisplayOrder = _displayOrder;
				daoDeal.IsActive = _isActive;
				daoDeal.CanEdit = _canEdit;
				daoDeal.CanDelete = _canDelete;
				daoDeal.CBy = _cBy;
				daoDeal.CDate = _cDate;
				daoDeal.EBy = _eBy;
				daoDeal.EDate = _eDate;
				daoDeal.Insert();
				CommitTransaction();
				
				_dealId = daoDeal.DealId;
				_dealCode = daoDeal.DealCode;
				_dealNameEn = daoDeal.DealNameEn;
				_dealNameAr = daoDeal.DealNameAr;
				_fromValue = daoDeal.FromValue;
				_toValue = daoDeal.ToValue;
				_growth1 = daoDeal.Growth1;
				_growth2 = daoDeal.Growth2;
				_growth1Discount = daoDeal.Growth1Discount;
				_growth2Discount = daoDeal.Growth2Discount;
				_growth1Days = daoDeal.Growth1Days;
				_growth2Days = daoDeal.Growth2Days;
				_descAr = daoDeal.DescAr;
				_descEn = daoDeal.DescEn;
				_color = daoDeal.Color;
				_icon = daoDeal.Icon;
				_displayOrder = daoDeal.DisplayOrder;
				_isActive = daoDeal.IsActive;
				_canEdit = daoDeal.CanEdit;
				_canDelete = daoDeal.CanDelete;
				_cBy = daoDeal.CBy;
				_cDate = daoDeal.CDate;
				_eBy = daoDeal.EBy;
				_eDate = daoDeal.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBODeal");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one Deal record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BODeal
		///</parameters>
		public virtual void Update()
		{
			DAODeal daoDeal = new DAODeal();
			RegisterDataObject(daoDeal);
			BeginTransaction("updateBODeal");
			try
			{
				daoDeal.DealId = _dealId;
				daoDeal.DealCode = _dealCode;
				daoDeal.DealNameEn = _dealNameEn;
				daoDeal.DealNameAr = _dealNameAr;
				daoDeal.FromValue = _fromValue;
				daoDeal.ToValue = _toValue;
				daoDeal.Growth1 = _growth1;
				daoDeal.Growth2 = _growth2;
				daoDeal.Growth1Discount = _growth1Discount;
				daoDeal.Growth2Discount = _growth2Discount;
				daoDeal.Growth1Days = _growth1Days;
				daoDeal.Growth2Days = _growth2Days;
				daoDeal.DescAr = _descAr;
				daoDeal.DescEn = _descEn;
				daoDeal.Color = _color;
				daoDeal.Icon = _icon;
				daoDeal.DisplayOrder = _displayOrder;
				daoDeal.IsActive = _isActive;
				daoDeal.CanEdit = _canEdit;
				daoDeal.CanDelete = _canDelete;
				daoDeal.CBy = _cBy;
				daoDeal.CDate = _cDate;
				daoDeal.EBy = _eBy;
				daoDeal.EDate = _eDate;
				daoDeal.Update();
				CommitTransaction();
				
				_dealId = daoDeal.DealId;
				_dealCode = daoDeal.DealCode;
				_dealNameEn = daoDeal.DealNameEn;
				_dealNameAr = daoDeal.DealNameAr;
				_fromValue = daoDeal.FromValue;
				_toValue = daoDeal.ToValue;
				_growth1 = daoDeal.Growth1;
				_growth2 = daoDeal.Growth2;
				_growth1Discount = daoDeal.Growth1Discount;
				_growth2Discount = daoDeal.Growth2Discount;
				_growth1Days = daoDeal.Growth1Days;
				_growth2Days = daoDeal.Growth2Days;
				_descAr = daoDeal.DescAr;
				_descEn = daoDeal.DescEn;
				_color = daoDeal.Color;
				_icon = daoDeal.Icon;
				_displayOrder = daoDeal.DisplayOrder;
				_isActive = daoDeal.IsActive;
				_canEdit = daoDeal.CanEdit;
				_canDelete = daoDeal.CanDelete;
				_cBy = daoDeal.CBy;
				_cDate = daoDeal.CDate;
				_eBy = daoDeal.EBy;
				_eDate = daoDeal.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBODeal");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one Deal record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAODeal daoDeal = new DAODeal();
			RegisterDataObject(daoDeal);
			BeginTransaction("deleteBODeal");
			try
			{
				daoDeal.DealId = _dealId;
				daoDeal.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBODeal");
				throw;
			}
		}
		
		///<Summary>
		///DealCollection
		///This method returns the collection of BODeal objects
		///</Summary>
		///<returns>
		///List[BODeal]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BODeal> DealCollection()
		{
			try
			{
				IList<BODeal> boDealCollection = new List<BODeal>();
				IList<DAODeal> daoDealCollection = DAODeal.SelectAll();
			
				foreach(DAODeal daoDeal in daoDealCollection)
					boDealCollection.Add(new BODeal(daoDeal));
			
				return boDealCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///DealCollectionCount
		///This method returns the collection count of BODeal objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 DealCollectionCount()
		{
			try
			{
				Int32 objCount = DAODeal.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BODeal>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAODeal.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///DealCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BODeal objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boDealCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAODeal> daoDealCollection = DAODeal.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAODeal resdaoDeal in daoDealCollection)
					boDealCollection.Add((T)(object)new BODeal(resdaoDeal));
			
				return boDealCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///DealCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BODeal objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAODeal.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? DealId
		{
			get
			{
				 return _dealId;
			}
			set
			{
				_dealId = value;
				_isDirty = true;
			}
		}
		
		public virtual string DealCode
		{
			get
			{
				 return _dealCode;
			}
			set
			{
				_dealCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string DealNameEn
		{
			get
			{
				 return _dealNameEn;
			}
			set
			{
				_dealNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string DealNameAr
		{
			get
			{
				 return _dealNameAr;
			}
			set
			{
				_dealNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? FromValue
		{
			get
			{
				 return _fromValue;
			}
			set
			{
				_fromValue = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? ToValue
		{
			get
			{
				 return _toValue;
			}
			set
			{
				_toValue = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Growth1
		{
			get
			{
				 return _growth1;
			}
			set
			{
				_growth1 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Growth2
		{
			get
			{
				 return _growth2;
			}
			set
			{
				_growth2 = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Growth1Discount
		{
			get
			{
				 return _growth1Discount;
			}
			set
			{
				_growth1Discount = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Growth2Discount
		{
			get
			{
				 return _growth2Discount;
			}
			set
			{
				_growth2Discount = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Growth1Days
		{
			get
			{
				 return _growth1Days;
			}
			set
			{
				_growth1Days = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Growth2Days
		{
			get
			{
				 return _growth2Days;
			}
			set
			{
				_growth2Days = value;
				_isDirty = true;
			}
		}
		
		public virtual string DescAr
		{
			get
			{
				 return _descAr;
			}
			set
			{
				_descAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string DescEn
		{
			get
			{
				 return _descEn;
			}
			set
			{
				_descEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string Color
		{
			get
			{
				 return _color;
			}
			set
			{
				_color = value;
				_isDirty = true;
			}
		}
		
		public virtual string Icon
		{
			get
			{
				 return _icon;
			}
			set
			{
				_icon = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? DisplayOrder
		{
			get
			{
				 return _displayOrder;
			}
			set
			{
				_displayOrder = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanEdit
		{
			get
			{
				 return _canEdit;
			}
			set
			{
				_canEdit = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanDelete
		{
			get
			{
				 return _canDelete;
			}
			set
			{
				_canDelete = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? CBy
		{
			get
			{
				 return _cBy;
			}
			set
			{
				_cBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CDate
		{
			get
			{
				 return _cDate;
			}
			set
			{
				_cDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? EBy
		{
			get
			{
				 return _eBy;
			}
			set
			{
				_eBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? EDate
		{
			get
			{
				 return _eDate;
			}
			set
			{
				_eDate = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
