/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOItemStoreVw.
	///</Summary>
	public partial class BOItemStoreVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _itemStoreId;
		protected Int32? _itemId;
		protected Int32? _branchId;
		protected Int32? _storeId;
		protected Int32? _quantity;
		protected Int32? _onHand;
		protected DateTime? _expireDate;
		protected string _batchNo;
		protected Int32? _acceptDays;
		protected string _itemCode;
		protected string _itemNameEn;
		protected string _itemNameAr;
		protected string _vendorNameEn;
		protected string _vendorNameAr;
		protected Int32? _vendorId;
		protected Int32? _available;
		protected string _storeNameEn;
		protected string _storeNameAr;
		protected string _storeCode;
		protected string _branchCode;
		protected string _branchNameEn;
		protected string _branchNameAr;
		protected bool? _isActive;
		protected bool? _hasPromotion;
		protected bool? _isNewAdded;
		protected bool? _isNewStocked;
		protected Int32? _unitId;
		protected bool? _isTaxable;
		protected decimal? _publicPrice;
		protected decimal? _clientPrice;
		protected decimal? _discount;
		protected Int32? _quota;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOItemStoreVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOItemStoreVw
		///</parameters>
		protected internal BOItemStoreVw(DAOItemStoreVw daoItemStoreVw)
		{
			try
			{
				_itemStoreId = daoItemStoreVw.ItemStoreId;
				_itemId = daoItemStoreVw.ItemId;
				_branchId = daoItemStoreVw.BranchId;
				_storeId = daoItemStoreVw.StoreId;
				_quantity = daoItemStoreVw.Quantity;
				_onHand = daoItemStoreVw.OnHand;
				_expireDate = daoItemStoreVw.ExpireDate;
				_batchNo = daoItemStoreVw.BatchNo;
				_acceptDays = daoItemStoreVw.AcceptDays;
				_itemCode = daoItemStoreVw.ItemCode;
				_itemNameEn = daoItemStoreVw.ItemNameEn;
				_itemNameAr = daoItemStoreVw.ItemNameAr;
				_vendorNameEn = daoItemStoreVw.VendorNameEn;
				_vendorNameAr = daoItemStoreVw.VendorNameAr;
				_vendorId = daoItemStoreVw.VendorId;
				_available = daoItemStoreVw.Available;
				_storeNameEn = daoItemStoreVw.StoreNameEn;
				_storeNameAr = daoItemStoreVw.StoreNameAr;
				_storeCode = daoItemStoreVw.StoreCode;
				_branchCode = daoItemStoreVw.BranchCode;
				_branchNameEn = daoItemStoreVw.BranchNameEn;
				_branchNameAr = daoItemStoreVw.BranchNameAr;
				_isActive = daoItemStoreVw.IsActive;
				_hasPromotion = daoItemStoreVw.HasPromotion;
				_isNewAdded = daoItemStoreVw.IsNewAdded;
				_isNewStocked = daoItemStoreVw.IsNewStocked;
				_unitId = daoItemStoreVw.UnitId;
				_isTaxable = daoItemStoreVw.IsTaxable;
				_publicPrice = daoItemStoreVw.PublicPrice;
				_clientPrice = daoItemStoreVw.ClientPrice;
				_discount = daoItemStoreVw.Discount;
				_quota = daoItemStoreVw.Quota;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ItemStoreVwCollection
		///This method returns the collection of BOItemStoreVw objects
		///</Summary>
		///<returns>
		///List[BOItemStoreVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOItemStoreVw> ItemStoreVwCollection()
		{
			try
			{
				IList<BOItemStoreVw> boItemStoreVwCollection = new List<BOItemStoreVw>();
				IList<DAOItemStoreVw> daoItemStoreVwCollection = DAOItemStoreVw.SelectAll();
			
				foreach(DAOItemStoreVw daoItemStoreVw in daoItemStoreVwCollection)
					boItemStoreVwCollection.Add(new BOItemStoreVw(daoItemStoreVw));
			
				return boItemStoreVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemStoreVwCollectionCount
		///This method returns the collection count of BOItemStoreVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ItemStoreVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOItemStoreVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOItemStoreVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOItemStoreVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemStoreVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOItemStoreVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boItemStoreVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOItemStoreVw> daoItemStoreVwCollection = DAOItemStoreVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOItemStoreVw resdaoItemStoreVw in daoItemStoreVwCollection)
					boItemStoreVwCollection.Add((T)(object)new BOItemStoreVw(resdaoItemStoreVw));
			
				return boItemStoreVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemStoreVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOItemStoreVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOItemStoreVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? ItemStoreId
		{
			get
			{
				 return _itemStoreId;
			}
			set
			{
				_itemStoreId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemId
		{
			get
			{
				 return _itemId;
			}
			set
			{
				_itemId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? StoreId
		{
			get
			{
				 return _storeId;
			}
			set
			{
				_storeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Quantity
		{
			get
			{
				 return _quantity;
			}
			set
			{
				_quantity = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? OnHand
		{
			get
			{
				 return _onHand;
			}
			set
			{
				_onHand = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? ExpireDate
		{
			get
			{
				 return _expireDate;
			}
			set
			{
				_expireDate = value;
				_isDirty = true;
			}
		}
		
		public virtual string BatchNo
		{
			get
			{
				 return _batchNo;
			}
			set
			{
				_batchNo = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? AcceptDays
		{
			get
			{
				 return _acceptDays;
			}
			set
			{
				_acceptDays = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemCode
		{
			get
			{
				 return _itemCode;
			}
			set
			{
				_itemCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameEn
		{
			get
			{
				 return _itemNameEn;
			}
			set
			{
				_itemNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameAr
		{
			get
			{
				 return _itemNameAr;
			}
			set
			{
				_itemNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorNameEn
		{
			get
			{
				 return _vendorNameEn;
			}
			set
			{
				_vendorNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorNameAr
		{
			get
			{
				 return _vendorNameAr;
			}
			set
			{
				_vendorNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? VendorId
		{
			get
			{
				 return _vendorId;
			}
			set
			{
				_vendorId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Available
		{
			get
			{
				 return _available;
			}
			set
			{
				_available = value;
				_isDirty = true;
			}
		}
		
		public virtual string StoreNameEn
		{
			get
			{
				 return _storeNameEn;
			}
			set
			{
				_storeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string StoreNameAr
		{
			get
			{
				 return _storeNameAr;
			}
			set
			{
				_storeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string StoreCode
		{
			get
			{
				 return _storeCode;
			}
			set
			{
				_storeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? HasPromotion
		{
			get
			{
				 return _hasPromotion;
			}
			set
			{
				_hasPromotion = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsNewAdded
		{
			get
			{
				 return _isNewAdded;
			}
			set
			{
				_isNewAdded = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsNewStocked
		{
			get
			{
				 return _isNewStocked;
			}
			set
			{
				_isNewStocked = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UnitId
		{
			get
			{
				 return _unitId;
			}
			set
			{
				_unitId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsTaxable
		{
			get
			{
				 return _isTaxable;
			}
			set
			{
				_isTaxable = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? PublicPrice
		{
			get
			{
				 return _publicPrice;
			}
			set
			{
				_publicPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? ClientPrice
		{
			get
			{
				 return _clientPrice;
			}
			set
			{
				_clientPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Discount
		{
			get
			{
				 return _discount;
			}
			set
			{
				_discount = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Quota
		{
			get
			{
				 return _quota;
			}
			set
			{
				_quota = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
