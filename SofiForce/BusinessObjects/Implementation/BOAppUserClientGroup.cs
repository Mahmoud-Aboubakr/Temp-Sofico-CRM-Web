/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:10:24 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAppUserClientGroup.
	///</Summary>
	public partial class BOAppUserClientGroup : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _appUserGroupId;
		protected Int32? _userId;
		protected Int32? _clientGroupId;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAppUserClientGroup()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 appUserGroupId
		///</parameters>
		public BOAppUserClientGroup(Int32 appUserGroupId)
		{
			try
			{
				DAOAppUserClientGroup daoAppUserClientGroup = DAOAppUserClientGroup.SelectOne(appUserGroupId);
				_appUserGroupId = daoAppUserClientGroup.AppUserGroupId;
				_userId = daoAppUserClientGroup.UserId;
				_clientGroupId = daoAppUserClientGroup.ClientGroupId;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAppUserClientGroup
		///</parameters>
		protected internal BOAppUserClientGroup(DAOAppUserClientGroup daoAppUserClientGroup)
		{
			try
			{
				_appUserGroupId = daoAppUserClientGroup.AppUserGroupId;
				_userId = daoAppUserClientGroup.UserId;
				_clientGroupId = daoAppUserClientGroup.ClientGroupId;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new AppUserClientGroup record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOAppUserClientGroup daoAppUserClientGroup = new DAOAppUserClientGroup();
			RegisterDataObject(daoAppUserClientGroup);
			BeginTransaction("savenewBOAppUserClientGroup");
			try
			{
				daoAppUserClientGroup.UserId = _userId;
				daoAppUserClientGroup.ClientGroupId = _clientGroupId;
				daoAppUserClientGroup.Insert();
				CommitTransaction();
				
				_appUserGroupId = daoAppUserClientGroup.AppUserGroupId;
				_userId = daoAppUserClientGroup.UserId;
				_clientGroupId = daoAppUserClientGroup.ClientGroupId;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOAppUserClientGroup");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one AppUserClientGroup record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOAppUserClientGroup
		///</parameters>
		public virtual void Update()
		{
			DAOAppUserClientGroup daoAppUserClientGroup = new DAOAppUserClientGroup();
			RegisterDataObject(daoAppUserClientGroup);
			BeginTransaction("updateBOAppUserClientGroup");
			try
			{
				daoAppUserClientGroup.AppUserGroupId = _appUserGroupId;
				daoAppUserClientGroup.UserId = _userId;
				daoAppUserClientGroup.ClientGroupId = _clientGroupId;
				daoAppUserClientGroup.Update();
				CommitTransaction();
				
				_appUserGroupId = daoAppUserClientGroup.AppUserGroupId;
				_userId = daoAppUserClientGroup.UserId;
				_clientGroupId = daoAppUserClientGroup.ClientGroupId;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOAppUserClientGroup");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one AppUserClientGroup record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOAppUserClientGroup daoAppUserClientGroup = new DAOAppUserClientGroup();
			RegisterDataObject(daoAppUserClientGroup);
			BeginTransaction("deleteBOAppUserClientGroup");
			try
			{
				daoAppUserClientGroup.AppUserGroupId = _appUserGroupId;
				daoAppUserClientGroup.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOAppUserClientGroup");
				throw;
			}
		}
		
		///<Summary>
		///AppUserClientGroupCollection
		///This method returns the collection of BOAppUserClientGroup objects
		///</Summary>
		///<returns>
		///List[BOAppUserClientGroup]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOAppUserClientGroup> AppUserClientGroupCollection()
		{
			try
			{
				IList<BOAppUserClientGroup> boAppUserClientGroupCollection = new List<BOAppUserClientGroup>();
				IList<DAOAppUserClientGroup> daoAppUserClientGroupCollection = DAOAppUserClientGroup.SelectAll();
			
				foreach(DAOAppUserClientGroup daoAppUserClientGroup in daoAppUserClientGroupCollection)
					boAppUserClientGroupCollection.Add(new BOAppUserClientGroup(daoAppUserClientGroup));
			
				return boAppUserClientGroupCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserClientGroupCollectionCount
		///This method returns the collection count of BOAppUserClientGroup objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AppUserClientGroupCollectionCount()
		{
			try
			{
				Int32 objCount = DAOAppUserClientGroup.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOAppUserClientGroup>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOAppUserClientGroup.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserClientGroupCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOAppUserClientGroup objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boAppUserClientGroupCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOAppUserClientGroup> daoAppUserClientGroupCollection = DAOAppUserClientGroup.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOAppUserClientGroup resdaoAppUserClientGroup in daoAppUserClientGroupCollection)
					boAppUserClientGroupCollection.Add((T)(object)new BOAppUserClientGroup(resdaoAppUserClientGroup));
			
				return boAppUserClientGroupCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserClientGroupCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOAppUserClientGroup objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOAppUserClientGroup.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? AppUserGroupId
		{
			get
			{
				 return _appUserGroupId;
			}
			set
			{
				_appUserGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UserId
		{
			get
			{
				 return _userId;
			}
			set
			{
				_userId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientGroupId
		{
			get
			{
				 return _clientGroupId;
			}
			set
			{
				_clientGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
