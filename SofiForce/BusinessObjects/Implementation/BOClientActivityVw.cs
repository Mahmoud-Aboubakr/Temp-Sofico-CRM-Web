/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOClientActivityVw.
	///</Summary>
	public partial class BOClientActivityVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int64? _activityId;
		protected Int32? _clientId;
		protected Int32? _activityTypeId;
		protected DateTime? _activityDate;
		protected DateTime? _activityTime;
		protected double? _latitude;
		protected double? _longitude;
		protected bool? _isPositive;
		protected string _clientCode;
		protected string _clientNameAr;
		protected string _clientNameEn;
		protected Int32? _representativeId;
		protected Int32? _duration;
		protected bool? _inJourney;
		protected decimal? _distance;
		protected Int64? _salesId;
		protected string _representativeCode;
		protected string _representativeNameAr;
		protected string _representativeNameEn;
		protected string _branchCode;
		protected string _branchNameAr;
		protected string _branchNameEn;
		protected Int32? _branchId;
		protected bool? _inZone;
		protected DateTime? _callAgain;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOClientActivityVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOClientActivityVw
		///</parameters>
		protected internal BOClientActivityVw(DAOClientActivityVw daoClientActivityVw)
		{
			try
			{
				_activityId = daoClientActivityVw.ActivityId;
				_clientId = daoClientActivityVw.ClientId;
				_activityTypeId = daoClientActivityVw.ActivityTypeId;
				_activityDate = daoClientActivityVw.ActivityDate;
				_activityTime = daoClientActivityVw.ActivityTime;
				_latitude = daoClientActivityVw.Latitude;
				_longitude = daoClientActivityVw.Longitude;
				_isPositive = daoClientActivityVw.IsPositive;
				_clientCode = daoClientActivityVw.ClientCode;
				_clientNameAr = daoClientActivityVw.ClientNameAr;
				_clientNameEn = daoClientActivityVw.ClientNameEn;
				_representativeId = daoClientActivityVw.RepresentativeId;
				_duration = daoClientActivityVw.Duration;
				_inJourney = daoClientActivityVw.InJourney;
				_distance = daoClientActivityVw.Distance;
				_salesId = daoClientActivityVw.SalesId;
				_representativeCode = daoClientActivityVw.RepresentativeCode;
				_representativeNameAr = daoClientActivityVw.RepresentativeNameAr;
				_representativeNameEn = daoClientActivityVw.RepresentativeNameEn;
				_branchCode = daoClientActivityVw.BranchCode;
				_branchNameAr = daoClientActivityVw.BranchNameAr;
				_branchNameEn = daoClientActivityVw.BranchNameEn;
				_branchId = daoClientActivityVw.BranchId;
				_inZone = daoClientActivityVw.InZone;
				_callAgain = daoClientActivityVw.CallAgain;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ClientActivityVwCollection
		///This method returns the collection of BOClientActivityVw objects
		///</Summary>
		///<returns>
		///List[BOClientActivityVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOClientActivityVw> ClientActivityVwCollection()
		{
			try
			{
				IList<BOClientActivityVw> boClientActivityVwCollection = new List<BOClientActivityVw>();
				IList<DAOClientActivityVw> daoClientActivityVwCollection = DAOClientActivityVw.SelectAll();
			
				foreach(DAOClientActivityVw daoClientActivityVw in daoClientActivityVwCollection)
					boClientActivityVwCollection.Add(new BOClientActivityVw(daoClientActivityVw));
			
				return boClientActivityVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientActivityVwCollectionCount
		///This method returns the collection count of BOClientActivityVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ClientActivityVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOClientActivityVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOClientActivityVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOClientActivityVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientActivityVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOClientActivityVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boClientActivityVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOClientActivityVw> daoClientActivityVwCollection = DAOClientActivityVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOClientActivityVw resdaoClientActivityVw in daoClientActivityVwCollection)
					boClientActivityVwCollection.Add((T)(object)new BOClientActivityVw(resdaoClientActivityVw));
			
				return boClientActivityVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientActivityVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOClientActivityVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOClientActivityVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int64? ActivityId
		{
			get
			{
				 return _activityId;
			}
			set
			{
				_activityId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientId
		{
			get
			{
				 return _clientId;
			}
			set
			{
				_clientId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ActivityTypeId
		{
			get
			{
				 return _activityTypeId;
			}
			set
			{
				_activityTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? ActivityDate
		{
			get
			{
				 return _activityDate;
			}
			set
			{
				_activityDate = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? ActivityTime
		{
			get
			{
				 return _activityTime;
			}
			set
			{
				_activityTime = value;
				_isDirty = true;
			}
		}
		
		public virtual double? Latitude
		{
			get
			{
				 return _latitude;
			}
			set
			{
				_latitude = value;
				_isDirty = true;
			}
		}
		
		public virtual double? Longitude
		{
			get
			{
				 return _longitude;
			}
			set
			{
				_longitude = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsPositive
		{
			get
			{
				 return _isPositive;
			}
			set
			{
				_isPositive = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientCode
		{
			get
			{
				 return _clientCode;
			}
			set
			{
				_clientCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameAr
		{
			get
			{
				 return _clientNameAr;
			}
			set
			{
				_clientNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameEn
		{
			get
			{
				 return _clientNameEn;
			}
			set
			{
				_clientNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RepresentativeId
		{
			get
			{
				 return _representativeId;
			}
			set
			{
				_representativeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Duration
		{
			get
			{
				 return _duration;
			}
			set
			{
				_duration = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? InJourney
		{
			get
			{
				 return _inJourney;
			}
			set
			{
				_inJourney = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Distance
		{
			get
			{
				 return _distance;
			}
			set
			{
				_distance = value;
				_isDirty = true;
			}
		}
		
		public virtual Int64? SalesId
		{
			get
			{
				 return _salesId;
			}
			set
			{
				_salesId = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeCode
		{
			get
			{
				 return _representativeCode;
			}
			set
			{
				_representativeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameAr
		{
			get
			{
				 return _representativeNameAr;
			}
			set
			{
				_representativeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameEn
		{
			get
			{
				 return _representativeNameEn;
			}
			set
			{
				_representativeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? InZone
		{
			get
			{
				 return _inZone;
			}
			set
			{
				_inZone = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CallAgain
		{
			get
			{
				 return _callAgain;
			}
			set
			{
				_callAgain = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
