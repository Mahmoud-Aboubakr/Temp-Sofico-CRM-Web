/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOClientComplainVw.
	///</Summary>
	public partial class BOClientComplainVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int64? _complainId;
		protected string _complainCode;
		protected Int32? _branchId;
		protected Int32? _representativeId;
		protected Int32? _clientId;
		protected DateTime? _complainDate;
		protected DateTime? _complainTime;
		protected Int32? _complainTypeId;
		protected Int32? _complainTypeDetailId;
		protected string _phone;
		protected string _phoneAlternative;
		protected Int32? _priorityId;
		protected Int32? _complainStatusId;
		protected bool? _isClosed;
		protected DateTime? _closeDate;
		protected Int32? _duration;
		protected double? _longitude;
		protected double? _latitude;
		protected Int32? _departmentId;
		protected string _branchNameAr;
		protected string _branchNameEn;
		protected string _representativeCode;
		protected string _representativeNameAr;
		protected string _representativeNameEn;
		protected string _complainTypeNameAr;
		protected string _complainTypeNameEn;
		protected string _complainStatusNameAr;
		protected string _complainStatusNameEn;
		protected string _departmentNameEn;
		protected string _departmentNameAr;
		protected string _priorityNameAr;
		protected string _priorityNameEn;
		protected string _clientCode;
		protected string _clientNameAr;
		protected string _clientNameEn;
		protected string _branchCode;
		protected string _priorityColor;
		protected bool? _inZone;
		protected double? _distance;
		protected string _complainTypeDetailNameEn;
		protected string _complainTypeDetailNameAr;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOClientComplainVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOClientComplainVw
		///</parameters>
		protected internal BOClientComplainVw(DAOClientComplainVw daoClientComplainVw)
		{
			try
			{
				_complainId = daoClientComplainVw.ComplainId;
				_complainCode = daoClientComplainVw.ComplainCode;
				_branchId = daoClientComplainVw.BranchId;
				_representativeId = daoClientComplainVw.RepresentativeId;
				_clientId = daoClientComplainVw.ClientId;
				_complainDate = daoClientComplainVw.ComplainDate;
				_complainTime = daoClientComplainVw.ComplainTime;
				_complainTypeId = daoClientComplainVw.ComplainTypeId;
				_complainTypeDetailId = daoClientComplainVw.ComplainTypeDetailId;
				_phone = daoClientComplainVw.Phone;
				_phoneAlternative = daoClientComplainVw.PhoneAlternative;
				_priorityId = daoClientComplainVw.PriorityId;
				_complainStatusId = daoClientComplainVw.ComplainStatusId;
				_isClosed = daoClientComplainVw.IsClosed;
				_closeDate = daoClientComplainVw.CloseDate;
				_duration = daoClientComplainVw.Duration;
				_longitude = daoClientComplainVw.Longitude;
				_latitude = daoClientComplainVw.Latitude;
				_departmentId = daoClientComplainVw.DepartmentId;
				_branchNameAr = daoClientComplainVw.BranchNameAr;
				_branchNameEn = daoClientComplainVw.BranchNameEn;
				_representativeCode = daoClientComplainVw.RepresentativeCode;
				_representativeNameAr = daoClientComplainVw.RepresentativeNameAr;
				_representativeNameEn = daoClientComplainVw.RepresentativeNameEn;
				_complainTypeNameAr = daoClientComplainVw.ComplainTypeNameAr;
				_complainTypeNameEn = daoClientComplainVw.ComplainTypeNameEn;
				_complainStatusNameAr = daoClientComplainVw.ComplainStatusNameAr;
				_complainStatusNameEn = daoClientComplainVw.ComplainStatusNameEn;
				_departmentNameEn = daoClientComplainVw.DepartmentNameEn;
				_departmentNameAr = daoClientComplainVw.DepartmentNameAr;
				_priorityNameAr = daoClientComplainVw.PriorityNameAr;
				_priorityNameEn = daoClientComplainVw.PriorityNameEn;
				_clientCode = daoClientComplainVw.ClientCode;
				_clientNameAr = daoClientComplainVw.ClientNameAr;
				_clientNameEn = daoClientComplainVw.ClientNameEn;
				_branchCode = daoClientComplainVw.BranchCode;
				_priorityColor = daoClientComplainVw.PriorityColor;
				_inZone = daoClientComplainVw.InZone;
				_distance = daoClientComplainVw.Distance;
				_complainTypeDetailNameEn = daoClientComplainVw.ComplainTypeDetailNameEn;
				_complainTypeDetailNameAr = daoClientComplainVw.ComplainTypeDetailNameAr;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ClientComplainVwCollection
		///This method returns the collection of BOClientComplainVw objects
		///</Summary>
		///<returns>
		///List[BOClientComplainVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOClientComplainVw> ClientComplainVwCollection()
		{
			try
			{
				IList<BOClientComplainVw> boClientComplainVwCollection = new List<BOClientComplainVw>();
				IList<DAOClientComplainVw> daoClientComplainVwCollection = DAOClientComplainVw.SelectAll();
			
				foreach(DAOClientComplainVw daoClientComplainVw in daoClientComplainVwCollection)
					boClientComplainVwCollection.Add(new BOClientComplainVw(daoClientComplainVw));
			
				return boClientComplainVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientComplainVwCollectionCount
		///This method returns the collection count of BOClientComplainVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ClientComplainVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOClientComplainVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOClientComplainVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOClientComplainVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientComplainVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOClientComplainVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boClientComplainVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOClientComplainVw> daoClientComplainVwCollection = DAOClientComplainVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOClientComplainVw resdaoClientComplainVw in daoClientComplainVwCollection)
					boClientComplainVwCollection.Add((T)(object)new BOClientComplainVw(resdaoClientComplainVw));
			
				return boClientComplainVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientComplainVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOClientComplainVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOClientComplainVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int64? ComplainId
		{
			get
			{
				 return _complainId;
			}
			set
			{
				_complainId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ComplainCode
		{
			get
			{
				 return _complainCode;
			}
			set
			{
				_complainCode = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RepresentativeId
		{
			get
			{
				 return _representativeId;
			}
			set
			{
				_representativeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientId
		{
			get
			{
				 return _clientId;
			}
			set
			{
				_clientId = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? ComplainDate
		{
			get
			{
				 return _complainDate;
			}
			set
			{
				_complainDate = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? ComplainTime
		{
			get
			{
				 return _complainTime;
			}
			set
			{
				_complainTime = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ComplainTypeId
		{
			get
			{
				 return _complainTypeId;
			}
			set
			{
				_complainTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ComplainTypeDetailId
		{
			get
			{
				 return _complainTypeDetailId;
			}
			set
			{
				_complainTypeDetailId = value;
				_isDirty = true;
			}
		}
		
		public virtual string Phone
		{
			get
			{
				 return _phone;
			}
			set
			{
				_phone = value;
				_isDirty = true;
			}
		}
		
		public virtual string PhoneAlternative
		{
			get
			{
				 return _phoneAlternative;
			}
			set
			{
				_phoneAlternative = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PriorityId
		{
			get
			{
				 return _priorityId;
			}
			set
			{
				_priorityId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ComplainStatusId
		{
			get
			{
				 return _complainStatusId;
			}
			set
			{
				_complainStatusId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsClosed
		{
			get
			{
				 return _isClosed;
			}
			set
			{
				_isClosed = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CloseDate
		{
			get
			{
				 return _closeDate;
			}
			set
			{
				_closeDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Duration
		{
			get
			{
				 return _duration;
			}
			set
			{
				_duration = value;
				_isDirty = true;
			}
		}
		
		public virtual double? Longitude
		{
			get
			{
				 return _longitude;
			}
			set
			{
				_longitude = value;
				_isDirty = true;
			}
		}
		
		public virtual double? Latitude
		{
			get
			{
				 return _latitude;
			}
			set
			{
				_latitude = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? DepartmentId
		{
			get
			{
				 return _departmentId;
			}
			set
			{
				_departmentId = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeCode
		{
			get
			{
				 return _representativeCode;
			}
			set
			{
				_representativeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameAr
		{
			get
			{
				 return _representativeNameAr;
			}
			set
			{
				_representativeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameEn
		{
			get
			{
				 return _representativeNameEn;
			}
			set
			{
				_representativeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ComplainTypeNameAr
		{
			get
			{
				 return _complainTypeNameAr;
			}
			set
			{
				_complainTypeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ComplainTypeNameEn
		{
			get
			{
				 return _complainTypeNameEn;
			}
			set
			{
				_complainTypeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ComplainStatusNameAr
		{
			get
			{
				 return _complainStatusNameAr;
			}
			set
			{
				_complainStatusNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ComplainStatusNameEn
		{
			get
			{
				 return _complainStatusNameEn;
			}
			set
			{
				_complainStatusNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string DepartmentNameEn
		{
			get
			{
				 return _departmentNameEn;
			}
			set
			{
				_departmentNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string DepartmentNameAr
		{
			get
			{
				 return _departmentNameAr;
			}
			set
			{
				_departmentNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string PriorityNameAr
		{
			get
			{
				 return _priorityNameAr;
			}
			set
			{
				_priorityNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string PriorityNameEn
		{
			get
			{
				 return _priorityNameEn;
			}
			set
			{
				_priorityNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientCode
		{
			get
			{
				 return _clientCode;
			}
			set
			{
				_clientCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameAr
		{
			get
			{
				 return _clientNameAr;
			}
			set
			{
				_clientNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameEn
		{
			get
			{
				 return _clientNameEn;
			}
			set
			{
				_clientNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string PriorityColor
		{
			get
			{
				 return _priorityColor;
			}
			set
			{
				_priorityColor = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? InZone
		{
			get
			{
				 return _inZone;
			}
			set
			{
				_inZone = value;
				_isDirty = true;
			}
		}
		
		public virtual double? Distance
		{
			get
			{
				 return _distance;
			}
			set
			{
				_distance = value;
				_isDirty = true;
			}
		}
		
		public virtual string ComplainTypeDetailNameEn
		{
			get
			{
				 return _complainTypeDetailNameEn;
			}
			set
			{
				_complainTypeDetailNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ComplainTypeDetailNameAr
		{
			get
			{
				 return _complainTypeDetailNameAr;
			}
			set
			{
				_complainTypeDetailNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
