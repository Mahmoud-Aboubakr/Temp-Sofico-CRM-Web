/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOItemBatchCheckerVw.
	///</Summary>
	public partial class BOItemBatchCheckerVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected string _batchNo;
		protected Int32? _itemId;
		protected Int32? _vendorId;
		protected bool? _isTaxable;
		protected string _itemCode;
		protected string _itemNameEn;
		protected string _itemNameAr;
		protected decimal? _publicPrice;
		protected decimal? _clientPrice;
		protected decimal? _returnPrice;
		protected decimal? _costPrice;
		protected decimal? _discount;
		protected bool? _isLocal;
		protected bool? _isActive;
		protected bool? _hasPromotion;
		protected bool? _isNewAdded;
		protected bool? _isNewStocked;
		protected DateTime? _cDate;
		protected DateTime? _eDate;
		protected string _vendorNameEn;
		protected string _vendorNameAr;
		protected string _vendorCode;
		protected Int32? _quota;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOItemBatchCheckerVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOItemBatchCheckerVw
		///</parameters>
		protected internal BOItemBatchCheckerVw(DAOItemBatchCheckerVw daoItemBatchCheckerVw)
		{
			try
			{
				_batchNo = daoItemBatchCheckerVw.BatchNo;
				_itemId = daoItemBatchCheckerVw.ItemId;
				_vendorId = daoItemBatchCheckerVw.VendorId;
				_isTaxable = daoItemBatchCheckerVw.IsTaxable;
				_itemCode = daoItemBatchCheckerVw.ItemCode;
				_itemNameEn = daoItemBatchCheckerVw.ItemNameEn;
				_itemNameAr = daoItemBatchCheckerVw.ItemNameAr;
				_publicPrice = daoItemBatchCheckerVw.PublicPrice;
				_clientPrice = daoItemBatchCheckerVw.ClientPrice;
				_returnPrice = daoItemBatchCheckerVw.ReturnPrice;
				_costPrice = daoItemBatchCheckerVw.CostPrice;
				_discount = daoItemBatchCheckerVw.Discount;
				_isLocal = daoItemBatchCheckerVw.IsLocal;
				_isActive = daoItemBatchCheckerVw.IsActive;
				_hasPromotion = daoItemBatchCheckerVw.HasPromotion;
				_isNewAdded = daoItemBatchCheckerVw.IsNewAdded;
				_isNewStocked = daoItemBatchCheckerVw.IsNewStocked;
				_cDate = daoItemBatchCheckerVw.CDate;
				_eDate = daoItemBatchCheckerVw.EDate;
				_vendorNameEn = daoItemBatchCheckerVw.VendorNameEn;
				_vendorNameAr = daoItemBatchCheckerVw.VendorNameAr;
				_vendorCode = daoItemBatchCheckerVw.VendorCode;
				_quota = daoItemBatchCheckerVw.Quota;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ItemBatchCheckerVwCollection
		///This method returns the collection of BOItemBatchCheckerVw objects
		///</Summary>
		///<returns>
		///List[BOItemBatchCheckerVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOItemBatchCheckerVw> ItemBatchCheckerVwCollection()
		{
			try
			{
				IList<BOItemBatchCheckerVw> boItemBatchCheckerVwCollection = new List<BOItemBatchCheckerVw>();
				IList<DAOItemBatchCheckerVw> daoItemBatchCheckerVwCollection = DAOItemBatchCheckerVw.SelectAll();
			
				foreach(DAOItemBatchCheckerVw daoItemBatchCheckerVw in daoItemBatchCheckerVwCollection)
					boItemBatchCheckerVwCollection.Add(new BOItemBatchCheckerVw(daoItemBatchCheckerVw));
			
				return boItemBatchCheckerVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemBatchCheckerVwCollectionCount
		///This method returns the collection count of BOItemBatchCheckerVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ItemBatchCheckerVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOItemBatchCheckerVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOItemBatchCheckerVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOItemBatchCheckerVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemBatchCheckerVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOItemBatchCheckerVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boItemBatchCheckerVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOItemBatchCheckerVw> daoItemBatchCheckerVwCollection = DAOItemBatchCheckerVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOItemBatchCheckerVw resdaoItemBatchCheckerVw in daoItemBatchCheckerVwCollection)
					boItemBatchCheckerVwCollection.Add((T)(object)new BOItemBatchCheckerVw(resdaoItemBatchCheckerVw));
			
				return boItemBatchCheckerVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemBatchCheckerVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOItemBatchCheckerVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOItemBatchCheckerVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual string BatchNo
		{
			get
			{
				 return _batchNo;
			}
			set
			{
				_batchNo = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemId
		{
			get
			{
				 return _itemId;
			}
			set
			{
				_itemId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? VendorId
		{
			get
			{
				 return _vendorId;
			}
			set
			{
				_vendorId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsTaxable
		{
			get
			{
				 return _isTaxable;
			}
			set
			{
				_isTaxable = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemCode
		{
			get
			{
				 return _itemCode;
			}
			set
			{
				_itemCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameEn
		{
			get
			{
				 return _itemNameEn;
			}
			set
			{
				_itemNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameAr
		{
			get
			{
				 return _itemNameAr;
			}
			set
			{
				_itemNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? PublicPrice
		{
			get
			{
				 return _publicPrice;
			}
			set
			{
				_publicPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? ClientPrice
		{
			get
			{
				 return _clientPrice;
			}
			set
			{
				_clientPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? ReturnPrice
		{
			get
			{
				 return _returnPrice;
			}
			set
			{
				_returnPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? CostPrice
		{
			get
			{
				 return _costPrice;
			}
			set
			{
				_costPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Discount
		{
			get
			{
				 return _discount;
			}
			set
			{
				_discount = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsLocal
		{
			get
			{
				 return _isLocal;
			}
			set
			{
				_isLocal = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? HasPromotion
		{
			get
			{
				 return _hasPromotion;
			}
			set
			{
				_hasPromotion = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsNewAdded
		{
			get
			{
				 return _isNewAdded;
			}
			set
			{
				_isNewAdded = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsNewStocked
		{
			get
			{
				 return _isNewStocked;
			}
			set
			{
				_isNewStocked = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CDate
		{
			get
			{
				 return _cDate;
			}
			set
			{
				_cDate = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? EDate
		{
			get
			{
				 return _eDate;
			}
			set
			{
				_eDate = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorNameEn
		{
			get
			{
				 return _vendorNameEn;
			}
			set
			{
				_vendorNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorNameAr
		{
			get
			{
				 return _vendorNameAr;
			}
			set
			{
				_vendorNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorCode
		{
			get
			{
				 return _vendorCode;
			}
			set
			{
				_vendorCode = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Quota
		{
			get
			{
				 return _quota;
			}
			set
			{
				_quota = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
