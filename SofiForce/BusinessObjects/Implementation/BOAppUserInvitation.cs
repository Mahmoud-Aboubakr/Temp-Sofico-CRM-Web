/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:10:24 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAppUserInvitation.
	///</Summary>
	public partial class BOAppUserInvitation : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int64? _invitationId;
		protected Int32? _userId;
		protected string _invitationLink;
		protected Int32? _downloads;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAppUserInvitation()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int64 invitationId
		///</parameters>
		public BOAppUserInvitation(Int64 invitationId)
		{
			try
			{
				DAOAppUserInvitation daoAppUserInvitation = DAOAppUserInvitation.SelectOne(invitationId);
				_invitationId = daoAppUserInvitation.InvitationId;
				_userId = daoAppUserInvitation.UserId;
				_invitationLink = daoAppUserInvitation.InvitationLink;
				_downloads = daoAppUserInvitation.Downloads;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAppUserInvitation
		///</parameters>
		protected internal BOAppUserInvitation(DAOAppUserInvitation daoAppUserInvitation)
		{
			try
			{
				_invitationId = daoAppUserInvitation.InvitationId;
				_userId = daoAppUserInvitation.UserId;
				_invitationLink = daoAppUserInvitation.InvitationLink;
				_downloads = daoAppUserInvitation.Downloads;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new AppUserInvitation record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOAppUserInvitation daoAppUserInvitation = new DAOAppUserInvitation();
			RegisterDataObject(daoAppUserInvitation);
			BeginTransaction("savenewBOAppUserInvitation");
			try
			{
				daoAppUserInvitation.UserId = _userId;
				daoAppUserInvitation.InvitationLink = _invitationLink;
				daoAppUserInvitation.Downloads = _downloads;
				daoAppUserInvitation.Insert();
				CommitTransaction();
				
				_invitationId = daoAppUserInvitation.InvitationId;
				_userId = daoAppUserInvitation.UserId;
				_invitationLink = daoAppUserInvitation.InvitationLink;
				_downloads = daoAppUserInvitation.Downloads;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOAppUserInvitation");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one AppUserInvitation record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOAppUserInvitation
		///</parameters>
		public virtual void Update()
		{
			DAOAppUserInvitation daoAppUserInvitation = new DAOAppUserInvitation();
			RegisterDataObject(daoAppUserInvitation);
			BeginTransaction("updateBOAppUserInvitation");
			try
			{
				daoAppUserInvitation.InvitationId = _invitationId;
				daoAppUserInvitation.UserId = _userId;
				daoAppUserInvitation.InvitationLink = _invitationLink;
				daoAppUserInvitation.Downloads = _downloads;
				daoAppUserInvitation.Update();
				CommitTransaction();
				
				_invitationId = daoAppUserInvitation.InvitationId;
				_userId = daoAppUserInvitation.UserId;
				_invitationLink = daoAppUserInvitation.InvitationLink;
				_downloads = daoAppUserInvitation.Downloads;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOAppUserInvitation");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one AppUserInvitation record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOAppUserInvitation daoAppUserInvitation = new DAOAppUserInvitation();
			RegisterDataObject(daoAppUserInvitation);
			BeginTransaction("deleteBOAppUserInvitation");
			try
			{
				daoAppUserInvitation.InvitationId = _invitationId;
				daoAppUserInvitation.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOAppUserInvitation");
				throw;
			}
		}
		
		///<Summary>
		///AppUserInvitationCollection
		///This method returns the collection of BOAppUserInvitation objects
		///</Summary>
		///<returns>
		///List[BOAppUserInvitation]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOAppUserInvitation> AppUserInvitationCollection()
		{
			try
			{
				IList<BOAppUserInvitation> boAppUserInvitationCollection = new List<BOAppUserInvitation>();
				IList<DAOAppUserInvitation> daoAppUserInvitationCollection = DAOAppUserInvitation.SelectAll();
			
				foreach(DAOAppUserInvitation daoAppUserInvitation in daoAppUserInvitationCollection)
					boAppUserInvitationCollection.Add(new BOAppUserInvitation(daoAppUserInvitation));
			
				return boAppUserInvitationCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserInvitationCollectionCount
		///This method returns the collection count of BOAppUserInvitation objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AppUserInvitationCollectionCount()
		{
			try
			{
				Int32 objCount = DAOAppUserInvitation.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOAppUserInvitation>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOAppUserInvitation.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserInvitationCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOAppUserInvitation objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boAppUserInvitationCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOAppUserInvitation> daoAppUserInvitationCollection = DAOAppUserInvitation.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOAppUserInvitation resdaoAppUserInvitation in daoAppUserInvitationCollection)
					boAppUserInvitationCollection.Add((T)(object)new BOAppUserInvitation(resdaoAppUserInvitation));
			
				return boAppUserInvitationCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserInvitationCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOAppUserInvitation objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOAppUserInvitation.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int64? InvitationId
		{
			get
			{
				 return _invitationId;
			}
			set
			{
				_invitationId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UserId
		{
			get
			{
				 return _userId;
			}
			set
			{
				_userId = value;
				_isDirty = true;
			}
		}
		
		public virtual string InvitationLink
		{
			get
			{
				 return _invitationLink;
			}
			set
			{
				_invitationLink = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Downloads
		{
			get
			{
				 return _downloads;
			}
			set
			{
				_downloads = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
