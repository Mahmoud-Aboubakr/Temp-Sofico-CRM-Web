/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BORepresentativeJourneyVw.
	///</Summary>
	public partial class BORepresentativeJourneyVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int64? _journeyId;
		protected Int32? _representativeId;
		protected string _kindNameEn;
		protected string _kindNameAr;
		protected string _representativeNameAr;
		protected string _representativeNameEn;
		protected string _representativeCode;
		protected Int32? _represtitiveUserId;
		protected Int32? _supervisorId;
		protected string _routeCode;
		protected string _routeNameEn;
		protected string _routeNameAr;
		protected Int32? _routeId;
		protected string _branchCode;
		protected string _branchNameAr;
		protected string _branchNameEn;
		protected Int32? _branchId;
		protected Int32? _kindId;
		protected string _phone;
		protected bool? _isTerminated;
		protected bool? _isActive;
		protected Int32? _routeTypeId;
		protected string _routeTypeNameAr;
		protected string _routeTypeNameEn;
		protected string _routeTypeCode;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BORepresentativeJourneyVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAORepresentativeJourneyVw
		///</parameters>
		protected internal BORepresentativeJourneyVw(DAORepresentativeJourneyVw daoRepresentativeJourneyVw)
		{
			try
			{
				_journeyId = daoRepresentativeJourneyVw.JourneyId;
				_representativeId = daoRepresentativeJourneyVw.RepresentativeId;
				_kindNameEn = daoRepresentativeJourneyVw.KindNameEn;
				_kindNameAr = daoRepresentativeJourneyVw.KindNameAr;
				_representativeNameAr = daoRepresentativeJourneyVw.RepresentativeNameAr;
				_representativeNameEn = daoRepresentativeJourneyVw.RepresentativeNameEn;
				_representativeCode = daoRepresentativeJourneyVw.RepresentativeCode;
				_represtitiveUserId = daoRepresentativeJourneyVw.ReprestitiveUserId;
				_supervisorId = daoRepresentativeJourneyVw.SupervisorId;
				_routeCode = daoRepresentativeJourneyVw.RouteCode;
				_routeNameEn = daoRepresentativeJourneyVw.RouteNameEn;
				_routeNameAr = daoRepresentativeJourneyVw.RouteNameAr;
				_routeId = daoRepresentativeJourneyVw.RouteId;
				_branchCode = daoRepresentativeJourneyVw.BranchCode;
				_branchNameAr = daoRepresentativeJourneyVw.BranchNameAr;
				_branchNameEn = daoRepresentativeJourneyVw.BranchNameEn;
				_branchId = daoRepresentativeJourneyVw.BranchId;
				_kindId = daoRepresentativeJourneyVw.KindId;
				_phone = daoRepresentativeJourneyVw.Phone;
				_isTerminated = daoRepresentativeJourneyVw.IsTerminated;
				_isActive = daoRepresentativeJourneyVw.IsActive;
				_routeTypeId = daoRepresentativeJourneyVw.RouteTypeId;
				_routeTypeNameAr = daoRepresentativeJourneyVw.RouteTypeNameAr;
				_routeTypeNameEn = daoRepresentativeJourneyVw.RouteTypeNameEn;
				_routeTypeCode = daoRepresentativeJourneyVw.RouteTypeCode;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///RepresentativeJourneyVwCollection
		///This method returns the collection of BORepresentativeJourneyVw objects
		///</Summary>
		///<returns>
		///List[BORepresentativeJourneyVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BORepresentativeJourneyVw> RepresentativeJourneyVwCollection()
		{
			try
			{
				IList<BORepresentativeJourneyVw> boRepresentativeJourneyVwCollection = new List<BORepresentativeJourneyVw>();
				IList<DAORepresentativeJourneyVw> daoRepresentativeJourneyVwCollection = DAORepresentativeJourneyVw.SelectAll();
			
				foreach(DAORepresentativeJourneyVw daoRepresentativeJourneyVw in daoRepresentativeJourneyVwCollection)
					boRepresentativeJourneyVwCollection.Add(new BORepresentativeJourneyVw(daoRepresentativeJourneyVw));
			
				return boRepresentativeJourneyVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///RepresentativeJourneyVwCollectionCount
		///This method returns the collection count of BORepresentativeJourneyVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 RepresentativeJourneyVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAORepresentativeJourneyVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BORepresentativeJourneyVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAORepresentativeJourneyVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///RepresentativeJourneyVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BORepresentativeJourneyVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boRepresentativeJourneyVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAORepresentativeJourneyVw> daoRepresentativeJourneyVwCollection = DAORepresentativeJourneyVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAORepresentativeJourneyVw resdaoRepresentativeJourneyVw in daoRepresentativeJourneyVwCollection)
					boRepresentativeJourneyVwCollection.Add((T)(object)new BORepresentativeJourneyVw(resdaoRepresentativeJourneyVw));
			
				return boRepresentativeJourneyVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///RepresentativeJourneyVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BORepresentativeJourneyVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAORepresentativeJourneyVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int64? JourneyId
		{
			get
			{
				 return _journeyId;
			}
			set
			{
				_journeyId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RepresentativeId
		{
			get
			{
				 return _representativeId;
			}
			set
			{
				_representativeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string KindNameEn
		{
			get
			{
				 return _kindNameEn;
			}
			set
			{
				_kindNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string KindNameAr
		{
			get
			{
				 return _kindNameAr;
			}
			set
			{
				_kindNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameAr
		{
			get
			{
				 return _representativeNameAr;
			}
			set
			{
				_representativeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameEn
		{
			get
			{
				 return _representativeNameEn;
			}
			set
			{
				_representativeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeCode
		{
			get
			{
				 return _representativeCode;
			}
			set
			{
				_representativeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ReprestitiveUserId
		{
			get
			{
				 return _represtitiveUserId;
			}
			set
			{
				_represtitiveUserId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? SupervisorId
		{
			get
			{
				 return _supervisorId;
			}
			set
			{
				_supervisorId = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteCode
		{
			get
			{
				 return _routeCode;
			}
			set
			{
				_routeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteNameEn
		{
			get
			{
				 return _routeNameEn;
			}
			set
			{
				_routeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteNameAr
		{
			get
			{
				 return _routeNameAr;
			}
			set
			{
				_routeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RouteId
		{
			get
			{
				 return _routeId;
			}
			set
			{
				_routeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? KindId
		{
			get
			{
				 return _kindId;
			}
			set
			{
				_kindId = value;
				_isDirty = true;
			}
		}
		
		public virtual string Phone
		{
			get
			{
				 return _phone;
			}
			set
			{
				_phone = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsTerminated
		{
			get
			{
				 return _isTerminated;
			}
			set
			{
				_isTerminated = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RouteTypeId
		{
			get
			{
				 return _routeTypeId;
			}
			set
			{
				_routeTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteTypeNameAr
		{
			get
			{
				 return _routeTypeNameAr;
			}
			set
			{
				_routeTypeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteTypeNameEn
		{
			get
			{
				 return _routeTypeNameEn;
			}
			set
			{
				_routeTypeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteTypeCode
		{
			get
			{
				 return _routeTypeCode;
			}
			set
			{
				_routeTypeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
