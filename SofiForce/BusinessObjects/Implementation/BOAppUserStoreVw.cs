/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAppUserStoreVw.
	///</Summary>
	public partial class BOAppUserStoreVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _appUserStoreId;
		protected Int32? _userId;
		protected Int32? _storeId;
		protected string _storeCode;
		protected string _storeNameAr;
		protected string _storeNameEn;
		protected string _storeTypeNameAr;
		protected string _storeTypeCode;
		protected string _storeTypeNameEn;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAppUserStoreVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAppUserStoreVw
		///</parameters>
		protected internal BOAppUserStoreVw(DAOAppUserStoreVw daoAppUserStoreVw)
		{
			try
			{
				_appUserStoreId = daoAppUserStoreVw.AppUserStoreId;
				_userId = daoAppUserStoreVw.UserId;
				_storeId = daoAppUserStoreVw.StoreId;
				_storeCode = daoAppUserStoreVw.StoreCode;
				_storeNameAr = daoAppUserStoreVw.StoreNameAr;
				_storeNameEn = daoAppUserStoreVw.StoreNameEn;
				_storeTypeNameAr = daoAppUserStoreVw.StoreTypeNameAr;
				_storeTypeCode = daoAppUserStoreVw.StoreTypeCode;
				_storeTypeNameEn = daoAppUserStoreVw.StoreTypeNameEn;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///AppUserStoreVwCollection
		///This method returns the collection of BOAppUserStoreVw objects
		///</Summary>
		///<returns>
		///List[BOAppUserStoreVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOAppUserStoreVw> AppUserStoreVwCollection()
		{
			try
			{
				IList<BOAppUserStoreVw> boAppUserStoreVwCollection = new List<BOAppUserStoreVw>();
				IList<DAOAppUserStoreVw> daoAppUserStoreVwCollection = DAOAppUserStoreVw.SelectAll();
			
				foreach(DAOAppUserStoreVw daoAppUserStoreVw in daoAppUserStoreVwCollection)
					boAppUserStoreVwCollection.Add(new BOAppUserStoreVw(daoAppUserStoreVw));
			
				return boAppUserStoreVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserStoreVwCollectionCount
		///This method returns the collection count of BOAppUserStoreVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AppUserStoreVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOAppUserStoreVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOAppUserStoreVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOAppUserStoreVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserStoreVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOAppUserStoreVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boAppUserStoreVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOAppUserStoreVw> daoAppUserStoreVwCollection = DAOAppUserStoreVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOAppUserStoreVw resdaoAppUserStoreVw in daoAppUserStoreVwCollection)
					boAppUserStoreVwCollection.Add((T)(object)new BOAppUserStoreVw(resdaoAppUserStoreVw));
			
				return boAppUserStoreVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserStoreVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOAppUserStoreVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOAppUserStoreVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? AppUserStoreId
		{
			get
			{
				 return _appUserStoreId;
			}
			set
			{
				_appUserStoreId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UserId
		{
			get
			{
				 return _userId;
			}
			set
			{
				_userId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? StoreId
		{
			get
			{
				 return _storeId;
			}
			set
			{
				_storeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string StoreCode
		{
			get
			{
				 return _storeCode;
			}
			set
			{
				_storeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string StoreNameAr
		{
			get
			{
				 return _storeNameAr;
			}
			set
			{
				_storeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string StoreNameEn
		{
			get
			{
				 return _storeNameEn;
			}
			set
			{
				_storeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string StoreTypeNameAr
		{
			get
			{
				 return _storeTypeNameAr;
			}
			set
			{
				_storeTypeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string StoreTypeCode
		{
			get
			{
				 return _storeTypeCode;
			}
			set
			{
				_storeTypeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string StoreTypeNameEn
		{
			get
			{
				 return _storeTypeNameEn;
			}
			set
			{
				_storeTypeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
