/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:10:24 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAppUserQuickOrderDetail.
	///</Summary>
	public partial class BOAppUserQuickOrderDetail : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int64? _detailId;
		protected Int64? _quickOrderId;
		protected string _messageType;
		protected string _message;
		protected Int32? _messageGroup;
		protected string _url;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAppUserQuickOrderDetail()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int64 detailId
		///</parameters>
		public BOAppUserQuickOrderDetail(Int64 detailId)
		{
			try
			{
				DAOAppUserQuickOrderDetail daoAppUserQuickOrderDetail = DAOAppUserQuickOrderDetail.SelectOne(detailId);
				_detailId = daoAppUserQuickOrderDetail.DetailId;
				_quickOrderId = daoAppUserQuickOrderDetail.QuickOrderId;
				_messageType = daoAppUserQuickOrderDetail.MessageType;
				_message = daoAppUserQuickOrderDetail.Message;
				_messageGroup = daoAppUserQuickOrderDetail.MessageGroup;
				_url = daoAppUserQuickOrderDetail.Url;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAppUserQuickOrderDetail
		///</parameters>
		protected internal BOAppUserQuickOrderDetail(DAOAppUserQuickOrderDetail daoAppUserQuickOrderDetail)
		{
			try
			{
				_detailId = daoAppUserQuickOrderDetail.DetailId;
				_quickOrderId = daoAppUserQuickOrderDetail.QuickOrderId;
				_messageType = daoAppUserQuickOrderDetail.MessageType;
				_message = daoAppUserQuickOrderDetail.Message;
				_messageGroup = daoAppUserQuickOrderDetail.MessageGroup;
				_url = daoAppUserQuickOrderDetail.Url;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new AppUserQuickOrderDetail record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOAppUserQuickOrderDetail daoAppUserQuickOrderDetail = new DAOAppUserQuickOrderDetail();
			RegisterDataObject(daoAppUserQuickOrderDetail);
			BeginTransaction("savenewBOAppUserQuickOrderDetail");
			try
			{
				daoAppUserQuickOrderDetail.QuickOrderId = _quickOrderId;
				daoAppUserQuickOrderDetail.MessageType = _messageType;
				daoAppUserQuickOrderDetail.Message = _message;
				daoAppUserQuickOrderDetail.MessageGroup = _messageGroup;
				daoAppUserQuickOrderDetail.Url = _url;
				daoAppUserQuickOrderDetail.Insert();
				CommitTransaction();
				
				_detailId = daoAppUserQuickOrderDetail.DetailId;
				_quickOrderId = daoAppUserQuickOrderDetail.QuickOrderId;
				_messageType = daoAppUserQuickOrderDetail.MessageType;
				_message = daoAppUserQuickOrderDetail.Message;
				_messageGroup = daoAppUserQuickOrderDetail.MessageGroup;
				_url = daoAppUserQuickOrderDetail.Url;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOAppUserQuickOrderDetail");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one AppUserQuickOrderDetail record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOAppUserQuickOrderDetail
		///</parameters>
		public virtual void Update()
		{
			DAOAppUserQuickOrderDetail daoAppUserQuickOrderDetail = new DAOAppUserQuickOrderDetail();
			RegisterDataObject(daoAppUserQuickOrderDetail);
			BeginTransaction("updateBOAppUserQuickOrderDetail");
			try
			{
				daoAppUserQuickOrderDetail.DetailId = _detailId;
				daoAppUserQuickOrderDetail.QuickOrderId = _quickOrderId;
				daoAppUserQuickOrderDetail.MessageType = _messageType;
				daoAppUserQuickOrderDetail.Message = _message;
				daoAppUserQuickOrderDetail.MessageGroup = _messageGroup;
				daoAppUserQuickOrderDetail.Url = _url;
				daoAppUserQuickOrderDetail.Update();
				CommitTransaction();
				
				_detailId = daoAppUserQuickOrderDetail.DetailId;
				_quickOrderId = daoAppUserQuickOrderDetail.QuickOrderId;
				_messageType = daoAppUserQuickOrderDetail.MessageType;
				_message = daoAppUserQuickOrderDetail.Message;
				_messageGroup = daoAppUserQuickOrderDetail.MessageGroup;
				_url = daoAppUserQuickOrderDetail.Url;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOAppUserQuickOrderDetail");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one AppUserQuickOrderDetail record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOAppUserQuickOrderDetail daoAppUserQuickOrderDetail = new DAOAppUserQuickOrderDetail();
			RegisterDataObject(daoAppUserQuickOrderDetail);
			BeginTransaction("deleteBOAppUserQuickOrderDetail");
			try
			{
				daoAppUserQuickOrderDetail.DetailId = _detailId;
				daoAppUserQuickOrderDetail.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOAppUserQuickOrderDetail");
				throw;
			}
		}
		
		///<Summary>
		///AppUserQuickOrderDetailCollection
		///This method returns the collection of BOAppUserQuickOrderDetail objects
		///</Summary>
		///<returns>
		///List[BOAppUserQuickOrderDetail]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOAppUserQuickOrderDetail> AppUserQuickOrderDetailCollection()
		{
			try
			{
				IList<BOAppUserQuickOrderDetail> boAppUserQuickOrderDetailCollection = new List<BOAppUserQuickOrderDetail>();
				IList<DAOAppUserQuickOrderDetail> daoAppUserQuickOrderDetailCollection = DAOAppUserQuickOrderDetail.SelectAll();
			
				foreach(DAOAppUserQuickOrderDetail daoAppUserQuickOrderDetail in daoAppUserQuickOrderDetailCollection)
					boAppUserQuickOrderDetailCollection.Add(new BOAppUserQuickOrderDetail(daoAppUserQuickOrderDetail));
			
				return boAppUserQuickOrderDetailCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserQuickOrderDetailCollectionCount
		///This method returns the collection count of BOAppUserQuickOrderDetail objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AppUserQuickOrderDetailCollectionCount()
		{
			try
			{
				Int32 objCount = DAOAppUserQuickOrderDetail.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOAppUserQuickOrderDetail>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOAppUserQuickOrderDetail.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserQuickOrderDetailCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOAppUserQuickOrderDetail objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boAppUserQuickOrderDetailCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOAppUserQuickOrderDetail> daoAppUserQuickOrderDetailCollection = DAOAppUserQuickOrderDetail.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOAppUserQuickOrderDetail resdaoAppUserQuickOrderDetail in daoAppUserQuickOrderDetailCollection)
					boAppUserQuickOrderDetailCollection.Add((T)(object)new BOAppUserQuickOrderDetail(resdaoAppUserQuickOrderDetail));
			
				return boAppUserQuickOrderDetailCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserQuickOrderDetailCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOAppUserQuickOrderDetail objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOAppUserQuickOrderDetail.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int64? DetailId
		{
			get
			{
				 return _detailId;
			}
			set
			{
				_detailId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int64? QuickOrderId
		{
			get
			{
				 return _quickOrderId;
			}
			set
			{
				_quickOrderId = value;
				_isDirty = true;
			}
		}
		
		public virtual string MessageType
		{
			get
			{
				 return _messageType;
			}
			set
			{
				_messageType = value;
				_isDirty = true;
			}
		}
		
		public virtual string Message
		{
			get
			{
				 return _message;
			}
			set
			{
				_message = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? MessageGroup
		{
			get
			{
				 return _messageGroup;
			}
			set
			{
				_messageGroup = value;
				_isDirty = true;
			}
		}
		
		public virtual string Url
		{
			get
			{
				 return _url;
			}
			set
			{
				_url = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
