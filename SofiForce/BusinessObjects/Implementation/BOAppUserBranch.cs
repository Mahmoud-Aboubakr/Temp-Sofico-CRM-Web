/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:10:24 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAppUserBranch.
	///</Summary>
	public partial class BOAppUserBranch : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _userBranchId;
		protected Int32? _branchId;
		protected Int32? _userId;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAppUserBranch()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 userBranchId
		///</parameters>
		public BOAppUserBranch(Int32 userBranchId)
		{
			try
			{
				DAOAppUserBranch daoAppUserBranch = DAOAppUserBranch.SelectOne(userBranchId);
				_userBranchId = daoAppUserBranch.UserBranchId;
				_branchId = daoAppUserBranch.BranchId;
				_userId = daoAppUserBranch.UserId;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAppUserBranch
		///</parameters>
		protected internal BOAppUserBranch(DAOAppUserBranch daoAppUserBranch)
		{
			try
			{
				_userBranchId = daoAppUserBranch.UserBranchId;
				_branchId = daoAppUserBranch.BranchId;
				_userId = daoAppUserBranch.UserId;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new AppUserBranch record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOAppUserBranch daoAppUserBranch = new DAOAppUserBranch();
			RegisterDataObject(daoAppUserBranch);
			BeginTransaction("savenewBOAppUserBranch");
			try
			{
				daoAppUserBranch.BranchId = _branchId;
				daoAppUserBranch.UserId = _userId;
				daoAppUserBranch.Insert();
				CommitTransaction();
				
				_userBranchId = daoAppUserBranch.UserBranchId;
				_branchId = daoAppUserBranch.BranchId;
				_userId = daoAppUserBranch.UserId;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOAppUserBranch");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one AppUserBranch record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOAppUserBranch
		///</parameters>
		public virtual void Update()
		{
			DAOAppUserBranch daoAppUserBranch = new DAOAppUserBranch();
			RegisterDataObject(daoAppUserBranch);
			BeginTransaction("updateBOAppUserBranch");
			try
			{
				daoAppUserBranch.UserBranchId = _userBranchId;
				daoAppUserBranch.BranchId = _branchId;
				daoAppUserBranch.UserId = _userId;
				daoAppUserBranch.Update();
				CommitTransaction();
				
				_userBranchId = daoAppUserBranch.UserBranchId;
				_branchId = daoAppUserBranch.BranchId;
				_userId = daoAppUserBranch.UserId;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOAppUserBranch");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one AppUserBranch record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOAppUserBranch daoAppUserBranch = new DAOAppUserBranch();
			RegisterDataObject(daoAppUserBranch);
			BeginTransaction("deleteBOAppUserBranch");
			try
			{
				daoAppUserBranch.UserBranchId = _userBranchId;
				daoAppUserBranch.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOAppUserBranch");
				throw;
			}
		}
		
		///<Summary>
		///AppUserBranchCollection
		///This method returns the collection of BOAppUserBranch objects
		///</Summary>
		///<returns>
		///List[BOAppUserBranch]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOAppUserBranch> AppUserBranchCollection()
		{
			try
			{
				IList<BOAppUserBranch> boAppUserBranchCollection = new List<BOAppUserBranch>();
				IList<DAOAppUserBranch> daoAppUserBranchCollection = DAOAppUserBranch.SelectAll();
			
				foreach(DAOAppUserBranch daoAppUserBranch in daoAppUserBranchCollection)
					boAppUserBranchCollection.Add(new BOAppUserBranch(daoAppUserBranch));
			
				return boAppUserBranchCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserBranchCollectionCount
		///This method returns the collection count of BOAppUserBranch objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AppUserBranchCollectionCount()
		{
			try
			{
				Int32 objCount = DAOAppUserBranch.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOAppUserBranch>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOAppUserBranch.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserBranchCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOAppUserBranch objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boAppUserBranchCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOAppUserBranch> daoAppUserBranchCollection = DAOAppUserBranch.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOAppUserBranch resdaoAppUserBranch in daoAppUserBranchCollection)
					boAppUserBranchCollection.Add((T)(object)new BOAppUserBranch(resdaoAppUserBranch));
			
				return boAppUserBranchCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserBranchCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOAppUserBranch objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOAppUserBranch.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? UserBranchId
		{
			get
			{
				 return _userBranchId;
			}
			set
			{
				_userBranchId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UserId
		{
			get
			{
				 return _userId;
			}
			set
			{
				_userId = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
