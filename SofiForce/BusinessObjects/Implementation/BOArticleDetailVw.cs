/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOArticleDetailVw.
	///</Summary>
	public partial class BOArticleDetailVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected DateTime? _articleTime;
		protected Int32? _articleId;
		protected string _articleContentAr;
		protected string _articleContentEn;
		protected string _articleTitleAr;
		protected string _articleTitleEn;
		protected string _articleImage;
		protected bool? _isActive;
		protected string _articleCategoryNameEn;
		protected string _articleCategoryNameAr;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOArticleDetailVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOArticleDetailVw
		///</parameters>
		protected internal BOArticleDetailVw(DAOArticleDetailVw daoArticleDetailVw)
		{
			try
			{
				_articleTime = daoArticleDetailVw.ArticleTime;
				_articleId = daoArticleDetailVw.ArticleId;
				_articleContentAr = daoArticleDetailVw.ArticleContentAr;
				_articleContentEn = daoArticleDetailVw.ArticleContentEn;
				_articleTitleAr = daoArticleDetailVw.ArticleTitleAr;
				_articleTitleEn = daoArticleDetailVw.ArticleTitleEn;
				_articleImage = daoArticleDetailVw.ArticleImage;
				_isActive = daoArticleDetailVw.IsActive;
				_articleCategoryNameEn = daoArticleDetailVw.ArticleCategoryNameEn;
				_articleCategoryNameAr = daoArticleDetailVw.ArticleCategoryNameAr;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ArticleDetailVwCollection
		///This method returns the collection of BOArticleDetailVw objects
		///</Summary>
		///<returns>
		///List[BOArticleDetailVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOArticleDetailVw> ArticleDetailVwCollection()
		{
			try
			{
				IList<BOArticleDetailVw> boArticleDetailVwCollection = new List<BOArticleDetailVw>();
				IList<DAOArticleDetailVw> daoArticleDetailVwCollection = DAOArticleDetailVw.SelectAll();
			
				foreach(DAOArticleDetailVw daoArticleDetailVw in daoArticleDetailVwCollection)
					boArticleDetailVwCollection.Add(new BOArticleDetailVw(daoArticleDetailVw));
			
				return boArticleDetailVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ArticleDetailVwCollectionCount
		///This method returns the collection count of BOArticleDetailVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ArticleDetailVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOArticleDetailVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOArticleDetailVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOArticleDetailVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ArticleDetailVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOArticleDetailVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boArticleDetailVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOArticleDetailVw> daoArticleDetailVwCollection = DAOArticleDetailVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOArticleDetailVw resdaoArticleDetailVw in daoArticleDetailVwCollection)
					boArticleDetailVwCollection.Add((T)(object)new BOArticleDetailVw(resdaoArticleDetailVw));
			
				return boArticleDetailVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ArticleDetailVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOArticleDetailVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOArticleDetailVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual DateTime? ArticleTime
		{
			get
			{
				 return _articleTime;
			}
			set
			{
				_articleTime = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ArticleId
		{
			get
			{
				 return _articleId;
			}
			set
			{
				_articleId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ArticleContentAr
		{
			get
			{
				 return _articleContentAr;
			}
			set
			{
				_articleContentAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ArticleContentEn
		{
			get
			{
				 return _articleContentEn;
			}
			set
			{
				_articleContentEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ArticleTitleAr
		{
			get
			{
				 return _articleTitleAr;
			}
			set
			{
				_articleTitleAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ArticleTitleEn
		{
			get
			{
				 return _articleTitleEn;
			}
			set
			{
				_articleTitleEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ArticleImage
		{
			get
			{
				 return _articleImage;
			}
			set
			{
				_articleImage = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual string ArticleCategoryNameEn
		{
			get
			{
				 return _articleCategoryNameEn;
			}
			set
			{
				_articleCategoryNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ArticleCategoryNameAr
		{
			get
			{
				 return _articleCategoryNameAr;
			}
			set
			{
				_articleCategoryNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
