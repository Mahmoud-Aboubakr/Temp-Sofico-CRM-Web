/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:10:24 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOPromotionOrderHistory.
	///</Summary>
	public partial class BOPromotionOrderHistory : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _historyId;
		protected Int32? _promotionId;
		protected Int32? _clientId;
		protected string _invoiceCode;
		protected DateTime? _invoiceDate;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOPromotionOrderHistory()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 historyId
		///</parameters>
		public BOPromotionOrderHistory(Int32 historyId)
		{
			try
			{
				DAOPromotionOrderHistory daoPromotionOrderHistory = DAOPromotionOrderHistory.SelectOne(historyId);
				_historyId = daoPromotionOrderHistory.HistoryId;
				_promotionId = daoPromotionOrderHistory.PromotionId;
				_clientId = daoPromotionOrderHistory.ClientId;
				_invoiceCode = daoPromotionOrderHistory.InvoiceCode;
				_invoiceDate = daoPromotionOrderHistory.InvoiceDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOPromotionOrderHistory
		///</parameters>
		protected internal BOPromotionOrderHistory(DAOPromotionOrderHistory daoPromotionOrderHistory)
		{
			try
			{
				_historyId = daoPromotionOrderHistory.HistoryId;
				_promotionId = daoPromotionOrderHistory.PromotionId;
				_clientId = daoPromotionOrderHistory.ClientId;
				_invoiceCode = daoPromotionOrderHistory.InvoiceCode;
				_invoiceDate = daoPromotionOrderHistory.InvoiceDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new PromotionOrderHistory record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOPromotionOrderHistory daoPromotionOrderHistory = new DAOPromotionOrderHistory();
			RegisterDataObject(daoPromotionOrderHistory);
			BeginTransaction("savenewBOPromotionOrderHistory");
			try
			{
				daoPromotionOrderHistory.PromotionId = _promotionId;
				daoPromotionOrderHistory.ClientId = _clientId;
				daoPromotionOrderHistory.InvoiceCode = _invoiceCode;
				daoPromotionOrderHistory.InvoiceDate = _invoiceDate;
				daoPromotionOrderHistory.Insert();
				CommitTransaction();
				
				_historyId = daoPromotionOrderHistory.HistoryId;
				_promotionId = daoPromotionOrderHistory.PromotionId;
				_clientId = daoPromotionOrderHistory.ClientId;
				_invoiceCode = daoPromotionOrderHistory.InvoiceCode;
				_invoiceDate = daoPromotionOrderHistory.InvoiceDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOPromotionOrderHistory");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one PromotionOrderHistory record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOPromotionOrderHistory
		///</parameters>
		public virtual void Update()
		{
			DAOPromotionOrderHistory daoPromotionOrderHistory = new DAOPromotionOrderHistory();
			RegisterDataObject(daoPromotionOrderHistory);
			BeginTransaction("updateBOPromotionOrderHistory");
			try
			{
				daoPromotionOrderHistory.HistoryId = _historyId;
				daoPromotionOrderHistory.PromotionId = _promotionId;
				daoPromotionOrderHistory.ClientId = _clientId;
				daoPromotionOrderHistory.InvoiceCode = _invoiceCode;
				daoPromotionOrderHistory.InvoiceDate = _invoiceDate;
				daoPromotionOrderHistory.Update();
				CommitTransaction();
				
				_historyId = daoPromotionOrderHistory.HistoryId;
				_promotionId = daoPromotionOrderHistory.PromotionId;
				_clientId = daoPromotionOrderHistory.ClientId;
				_invoiceCode = daoPromotionOrderHistory.InvoiceCode;
				_invoiceDate = daoPromotionOrderHistory.InvoiceDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOPromotionOrderHistory");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one PromotionOrderHistory record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOPromotionOrderHistory daoPromotionOrderHistory = new DAOPromotionOrderHistory();
			RegisterDataObject(daoPromotionOrderHistory);
			BeginTransaction("deleteBOPromotionOrderHistory");
			try
			{
				daoPromotionOrderHistory.HistoryId = _historyId;
				daoPromotionOrderHistory.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOPromotionOrderHistory");
				throw;
			}
		}
		
		///<Summary>
		///PromotionOrderHistoryCollection
		///This method returns the collection of BOPromotionOrderHistory objects
		///</Summary>
		///<returns>
		///List[BOPromotionOrderHistory]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOPromotionOrderHistory> PromotionOrderHistoryCollection()
		{
			try
			{
				IList<BOPromotionOrderHistory> boPromotionOrderHistoryCollection = new List<BOPromotionOrderHistory>();
				IList<DAOPromotionOrderHistory> daoPromotionOrderHistoryCollection = DAOPromotionOrderHistory.SelectAll();
			
				foreach(DAOPromotionOrderHistory daoPromotionOrderHistory in daoPromotionOrderHistoryCollection)
					boPromotionOrderHistoryCollection.Add(new BOPromotionOrderHistory(daoPromotionOrderHistory));
			
				return boPromotionOrderHistoryCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromotionOrderHistoryCollectionCount
		///This method returns the collection count of BOPromotionOrderHistory objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 PromotionOrderHistoryCollectionCount()
		{
			try
			{
				Int32 objCount = DAOPromotionOrderHistory.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOPromotionOrderHistory>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOPromotionOrderHistory.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromotionOrderHistoryCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOPromotionOrderHistory objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boPromotionOrderHistoryCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOPromotionOrderHistory> daoPromotionOrderHistoryCollection = DAOPromotionOrderHistory.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOPromotionOrderHistory resdaoPromotionOrderHistory in daoPromotionOrderHistoryCollection)
					boPromotionOrderHistoryCollection.Add((T)(object)new BOPromotionOrderHistory(resdaoPromotionOrderHistory));
			
				return boPromotionOrderHistoryCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromotionOrderHistoryCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOPromotionOrderHistory objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOPromotionOrderHistory.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? HistoryId
		{
			get
			{
				 return _historyId;
			}
			set
			{
				_historyId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PromotionId
		{
			get
			{
				 return _promotionId;
			}
			set
			{
				_promotionId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientId
		{
			get
			{
				 return _clientId;
			}
			set
			{
				_clientId = value;
				_isDirty = true;
			}
		}
		
		public virtual string InvoiceCode
		{
			get
			{
				 return _invoiceCode;
			}
			set
			{
				_invoiceCode = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? InvoiceDate
		{
			get
			{
				 return _invoiceDate;
			}
			set
			{
				_invoiceDate = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
