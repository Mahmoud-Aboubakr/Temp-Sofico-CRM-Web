/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:10:24 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOSalesOrderLinePromotion.
	///</Summary>
	public partial class BOSalesOrderLinePromotion : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int64? _lineId;
		protected Int64? _salesId;
		protected Int32? _itemId;
		protected Int32? _promotionId;
		protected decimal? _outcome;
		protected Int32? _itemStoreId;
		protected Int32? _outcomeType;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOSalesOrderLinePromotion()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int64 lineId
		///</parameters>
		public BOSalesOrderLinePromotion(Int64 lineId)
		{
			try
			{
				DAOSalesOrderLinePromotion daoSalesOrderLinePromotion = DAOSalesOrderLinePromotion.SelectOne(lineId);
				_lineId = daoSalesOrderLinePromotion.LineId;
				_salesId = daoSalesOrderLinePromotion.SalesId;
				_itemId = daoSalesOrderLinePromotion.ItemId;
				_promotionId = daoSalesOrderLinePromotion.PromotionId;
				_outcome = daoSalesOrderLinePromotion.Outcome;
				_itemStoreId = daoSalesOrderLinePromotion.ItemStoreId;
				_outcomeType = daoSalesOrderLinePromotion.OutcomeType;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOSalesOrderLinePromotion
		///</parameters>
		protected internal BOSalesOrderLinePromotion(DAOSalesOrderLinePromotion daoSalesOrderLinePromotion)
		{
			try
			{
				_lineId = daoSalesOrderLinePromotion.LineId;
				_salesId = daoSalesOrderLinePromotion.SalesId;
				_itemId = daoSalesOrderLinePromotion.ItemId;
				_promotionId = daoSalesOrderLinePromotion.PromotionId;
				_outcome = daoSalesOrderLinePromotion.Outcome;
				_itemStoreId = daoSalesOrderLinePromotion.ItemStoreId;
				_outcomeType = daoSalesOrderLinePromotion.OutcomeType;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new SalesOrderLinePromotion record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOSalesOrderLinePromotion daoSalesOrderLinePromotion = new DAOSalesOrderLinePromotion();
			RegisterDataObject(daoSalesOrderLinePromotion);
			BeginTransaction("savenewBOSalesOrderLinePromotion");
			try
			{
				daoSalesOrderLinePromotion.SalesId = _salesId;
				daoSalesOrderLinePromotion.ItemId = _itemId;
				daoSalesOrderLinePromotion.PromotionId = _promotionId;
				daoSalesOrderLinePromotion.Outcome = _outcome;
				daoSalesOrderLinePromotion.ItemStoreId = _itemStoreId;
				daoSalesOrderLinePromotion.OutcomeType = _outcomeType;
				daoSalesOrderLinePromotion.Insert();
				CommitTransaction();
				
				_lineId = daoSalesOrderLinePromotion.LineId;
				_salesId = daoSalesOrderLinePromotion.SalesId;
				_itemId = daoSalesOrderLinePromotion.ItemId;
				_promotionId = daoSalesOrderLinePromotion.PromotionId;
				_outcome = daoSalesOrderLinePromotion.Outcome;
				_itemStoreId = daoSalesOrderLinePromotion.ItemStoreId;
				_outcomeType = daoSalesOrderLinePromotion.OutcomeType;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOSalesOrderLinePromotion");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one SalesOrderLinePromotion record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOSalesOrderLinePromotion
		///</parameters>
		public virtual void Update()
		{
			DAOSalesOrderLinePromotion daoSalesOrderLinePromotion = new DAOSalesOrderLinePromotion();
			RegisterDataObject(daoSalesOrderLinePromotion);
			BeginTransaction("updateBOSalesOrderLinePromotion");
			try
			{
				daoSalesOrderLinePromotion.LineId = _lineId;
				daoSalesOrderLinePromotion.SalesId = _salesId;
				daoSalesOrderLinePromotion.ItemId = _itemId;
				daoSalesOrderLinePromotion.PromotionId = _promotionId;
				daoSalesOrderLinePromotion.Outcome = _outcome;
				daoSalesOrderLinePromotion.ItemStoreId = _itemStoreId;
				daoSalesOrderLinePromotion.OutcomeType = _outcomeType;
				daoSalesOrderLinePromotion.Update();
				CommitTransaction();
				
				_lineId = daoSalesOrderLinePromotion.LineId;
				_salesId = daoSalesOrderLinePromotion.SalesId;
				_itemId = daoSalesOrderLinePromotion.ItemId;
				_promotionId = daoSalesOrderLinePromotion.PromotionId;
				_outcome = daoSalesOrderLinePromotion.Outcome;
				_itemStoreId = daoSalesOrderLinePromotion.ItemStoreId;
				_outcomeType = daoSalesOrderLinePromotion.OutcomeType;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOSalesOrderLinePromotion");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one SalesOrderLinePromotion record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOSalesOrderLinePromotion daoSalesOrderLinePromotion = new DAOSalesOrderLinePromotion();
			RegisterDataObject(daoSalesOrderLinePromotion);
			BeginTransaction("deleteBOSalesOrderLinePromotion");
			try
			{
				daoSalesOrderLinePromotion.LineId = _lineId;
				daoSalesOrderLinePromotion.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOSalesOrderLinePromotion");
				throw;
			}
		}
		
		///<Summary>
		///SalesOrderLinePromotionCollection
		///This method returns the collection of BOSalesOrderLinePromotion objects
		///</Summary>
		///<returns>
		///List[BOSalesOrderLinePromotion]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOSalesOrderLinePromotion> SalesOrderLinePromotionCollection()
		{
			try
			{
				IList<BOSalesOrderLinePromotion> boSalesOrderLinePromotionCollection = new List<BOSalesOrderLinePromotion>();
				IList<DAOSalesOrderLinePromotion> daoSalesOrderLinePromotionCollection = DAOSalesOrderLinePromotion.SelectAll();
			
				foreach(DAOSalesOrderLinePromotion daoSalesOrderLinePromotion in daoSalesOrderLinePromotionCollection)
					boSalesOrderLinePromotionCollection.Add(new BOSalesOrderLinePromotion(daoSalesOrderLinePromotion));
			
				return boSalesOrderLinePromotionCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SalesOrderLinePromotionCollectionCount
		///This method returns the collection count of BOSalesOrderLinePromotion objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 SalesOrderLinePromotionCollectionCount()
		{
			try
			{
				Int32 objCount = DAOSalesOrderLinePromotion.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOSalesOrderLinePromotion>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOSalesOrderLinePromotion.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SalesOrderLinePromotionCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOSalesOrderLinePromotion objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boSalesOrderLinePromotionCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOSalesOrderLinePromotion> daoSalesOrderLinePromotionCollection = DAOSalesOrderLinePromotion.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOSalesOrderLinePromotion resdaoSalesOrderLinePromotion in daoSalesOrderLinePromotionCollection)
					boSalesOrderLinePromotionCollection.Add((T)(object)new BOSalesOrderLinePromotion(resdaoSalesOrderLinePromotion));
			
				return boSalesOrderLinePromotionCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SalesOrderLinePromotionCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOSalesOrderLinePromotion objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOSalesOrderLinePromotion.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int64? LineId
		{
			get
			{
				 return _lineId;
			}
			set
			{
				_lineId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int64? SalesId
		{
			get
			{
				 return _salesId;
			}
			set
			{
				_salesId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemId
		{
			get
			{
				 return _itemId;
			}
			set
			{
				_itemId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PromotionId
		{
			get
			{
				 return _promotionId;
			}
			set
			{
				_promotionId = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Outcome
		{
			get
			{
				 return _outcome;
			}
			set
			{
				_outcome = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemStoreId
		{
			get
			{
				 return _itemStoreId;
			}
			set
			{
				_itemStoreId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? OutcomeType
		{
			get
			{
				 return _outcomeType;
			}
			set
			{
				_outcomeType = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
