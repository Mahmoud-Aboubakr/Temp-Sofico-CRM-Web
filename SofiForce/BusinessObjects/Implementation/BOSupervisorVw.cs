/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:40 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOSupervisorVw.
	///</Summary>
	public partial class BOSupervisorVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _supervisorId;
		protected string _supervisorCode;
		protected string _supervisorNameEn;
		protected string _supervisorNameAr;
		protected Int32? _userId;
		protected Int32? _branchId;
		protected bool? _isActive;
		protected string _color;
		protected Int32? _displayOrder;
		protected string _icon;
		protected bool? _canEdit;
		protected bool? _canDelete;
		protected string _branchCode;
		protected string _branchNameAr;
		protected string _branchNameEn;
		protected Int32? _representatives;
		protected DateTime? _joinDate;
		protected Int32? _supervisorTypeId;
		protected string _supervisorTypeNameEn;
		protected string _supervisorTypeNameAr;
		protected string _companyCode;
		protected string _phoneAlternative;
		protected string _phone;
		protected bool? _isTerminated;
		protected DateTime? _terminationDate;
		protected Int32? _terminationReasonId;
		protected string _notes;
		protected Int32? _businessUnitId;
		protected string _businessUnitCode;
		protected string _businessUnitNameEn;
		protected string _businessUnitNameAr;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOSupervisorVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOSupervisorVw
		///</parameters>
		protected internal BOSupervisorVw(DAOSupervisorVw daoSupervisorVw)
		{
			try
			{
				_supervisorId = daoSupervisorVw.SupervisorId;
				_supervisorCode = daoSupervisorVw.SupervisorCode;
				_supervisorNameEn = daoSupervisorVw.SupervisorNameEn;
				_supervisorNameAr = daoSupervisorVw.SupervisorNameAr;
				_userId = daoSupervisorVw.UserId;
				_branchId = daoSupervisorVw.BranchId;
				_isActive = daoSupervisorVw.IsActive;
				_color = daoSupervisorVw.Color;
				_displayOrder = daoSupervisorVw.DisplayOrder;
				_icon = daoSupervisorVw.Icon;
				_canEdit = daoSupervisorVw.CanEdit;
				_canDelete = daoSupervisorVw.CanDelete;
				_branchCode = daoSupervisorVw.BranchCode;
				_branchNameAr = daoSupervisorVw.BranchNameAr;
				_branchNameEn = daoSupervisorVw.BranchNameEn;
				_representatives = daoSupervisorVw.Representatives;
				_joinDate = daoSupervisorVw.JoinDate;
				_supervisorTypeId = daoSupervisorVw.SupervisorTypeId;
				_supervisorTypeNameEn = daoSupervisorVw.SupervisorTypeNameEn;
				_supervisorTypeNameAr = daoSupervisorVw.SupervisorTypeNameAr;
				_companyCode = daoSupervisorVw.CompanyCode;
				_phoneAlternative = daoSupervisorVw.PhoneAlternative;
				_phone = daoSupervisorVw.Phone;
				_isTerminated = daoSupervisorVw.IsTerminated;
				_terminationDate = daoSupervisorVw.TerminationDate;
				_terminationReasonId = daoSupervisorVw.TerminationReasonId;
				_notes = daoSupervisorVw.Notes;
				_businessUnitId = daoSupervisorVw.BusinessUnitId;
				_businessUnitCode = daoSupervisorVw.BusinessUnitCode;
				_businessUnitNameEn = daoSupervisorVw.BusinessUnitNameEn;
				_businessUnitNameAr = daoSupervisorVw.BusinessUnitNameAr;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///SupervisorVwCollection
		///This method returns the collection of BOSupervisorVw objects
		///</Summary>
		///<returns>
		///List[BOSupervisorVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOSupervisorVw> SupervisorVwCollection()
		{
			try
			{
				IList<BOSupervisorVw> boSupervisorVwCollection = new List<BOSupervisorVw>();
				IList<DAOSupervisorVw> daoSupervisorVwCollection = DAOSupervisorVw.SelectAll();
			
				foreach(DAOSupervisorVw daoSupervisorVw in daoSupervisorVwCollection)
					boSupervisorVwCollection.Add(new BOSupervisorVw(daoSupervisorVw));
			
				return boSupervisorVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SupervisorVwCollectionCount
		///This method returns the collection count of BOSupervisorVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 SupervisorVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOSupervisorVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOSupervisorVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOSupervisorVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SupervisorVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOSupervisorVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boSupervisorVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOSupervisorVw> daoSupervisorVwCollection = DAOSupervisorVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOSupervisorVw resdaoSupervisorVw in daoSupervisorVwCollection)
					boSupervisorVwCollection.Add((T)(object)new BOSupervisorVw(resdaoSupervisorVw));
			
				return boSupervisorVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SupervisorVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOSupervisorVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOSupervisorVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? SupervisorId
		{
			get
			{
				 return _supervisorId;
			}
			set
			{
				_supervisorId = value;
				_isDirty = true;
			}
		}
		
		public virtual string SupervisorCode
		{
			get
			{
				 return _supervisorCode;
			}
			set
			{
				_supervisorCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string SupervisorNameEn
		{
			get
			{
				 return _supervisorNameEn;
			}
			set
			{
				_supervisorNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string SupervisorNameAr
		{
			get
			{
				 return _supervisorNameAr;
			}
			set
			{
				_supervisorNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UserId
		{
			get
			{
				 return _userId;
			}
			set
			{
				_userId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual string Color
		{
			get
			{
				 return _color;
			}
			set
			{
				_color = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? DisplayOrder
		{
			get
			{
				 return _displayOrder;
			}
			set
			{
				_displayOrder = value;
				_isDirty = true;
			}
		}
		
		public virtual string Icon
		{
			get
			{
				 return _icon;
			}
			set
			{
				_icon = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanEdit
		{
			get
			{
				 return _canEdit;
			}
			set
			{
				_canEdit = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanDelete
		{
			get
			{
				 return _canDelete;
			}
			set
			{
				_canDelete = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Representatives
		{
			get
			{
				 return _representatives;
			}
			set
			{
				_representatives = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? JoinDate
		{
			get
			{
				 return _joinDate;
			}
			set
			{
				_joinDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? SupervisorTypeId
		{
			get
			{
				 return _supervisorTypeId;
			}
			set
			{
				_supervisorTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string SupervisorTypeNameEn
		{
			get
			{
				 return _supervisorTypeNameEn;
			}
			set
			{
				_supervisorTypeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string SupervisorTypeNameAr
		{
			get
			{
				 return _supervisorTypeNameAr;
			}
			set
			{
				_supervisorTypeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string CompanyCode
		{
			get
			{
				 return _companyCode;
			}
			set
			{
				_companyCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string PhoneAlternative
		{
			get
			{
				 return _phoneAlternative;
			}
			set
			{
				_phoneAlternative = value;
				_isDirty = true;
			}
		}
		
		public virtual string Phone
		{
			get
			{
				 return _phone;
			}
			set
			{
				_phone = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsTerminated
		{
			get
			{
				 return _isTerminated;
			}
			set
			{
				_isTerminated = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? TerminationDate
		{
			get
			{
				 return _terminationDate;
			}
			set
			{
				_terminationDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? TerminationReasonId
		{
			get
			{
				 return _terminationReasonId;
			}
			set
			{
				_terminationReasonId = value;
				_isDirty = true;
			}
		}
		
		public virtual string Notes
		{
			get
			{
				 return _notes;
			}
			set
			{
				_notes = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BusinessUnitId
		{
			get
			{
				 return _businessUnitId;
			}
			set
			{
				_businessUnitId = value;
				_isDirty = true;
			}
		}
		
		public virtual string BusinessUnitCode
		{
			get
			{
				 return _businessUnitCode;
			}
			set
			{
				_businessUnitCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string BusinessUnitNameEn
		{
			get
			{
				 return _businessUnitNameEn;
			}
			set
			{
				_businessUnitNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string BusinessUnitNameAr
		{
			get
			{
				 return _businessUnitNameAr;
			}
			set
			{
				_businessUnitNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
