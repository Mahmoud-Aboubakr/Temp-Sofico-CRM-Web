/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOClientPlanVw.
	///</Summary>
	public partial class BOClientPlanVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _clientId;
		protected string _clientCode;
		protected string _clientNameAr;
		protected string _clientNameEn;
		protected Int32? _branchId;
		protected string _branchNameEn;
		protected string _branchNameAr;
		protected string _branchCode;
		protected Int32? _clientTypeId;
		protected decimal? _creditLimit;
		protected decimal? _creditBalance;
		protected Int64? _planId;
		protected decimal? _targetValue;
		protected Int32? _targetVisit;
		protected Int32? _targetCall;
		protected DateTime? _targetDate;
		protected string _clientGroupCode;
		protected string _clientGroupNameEn;
		protected string _clientGroupNameAr;
		protected Int32? _businessUnitId;
		protected Int32? _clientGroupId;
		protected Int32? _clientGroupSubId;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOClientPlanVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOClientPlanVw
		///</parameters>
		protected internal BOClientPlanVw(DAOClientPlanVw daoClientPlanVw)
		{
			try
			{
				_clientId = daoClientPlanVw.ClientId;
				_clientCode = daoClientPlanVw.ClientCode;
				_clientNameAr = daoClientPlanVw.ClientNameAr;
				_clientNameEn = daoClientPlanVw.ClientNameEn;
				_branchId = daoClientPlanVw.BranchId;
				_branchNameEn = daoClientPlanVw.BranchNameEn;
				_branchNameAr = daoClientPlanVw.BranchNameAr;
				_branchCode = daoClientPlanVw.BranchCode;
				_clientTypeId = daoClientPlanVw.ClientTypeId;
				_creditLimit = daoClientPlanVw.CreditLimit;
				_creditBalance = daoClientPlanVw.CreditBalance;
				_planId = daoClientPlanVw.PlanId;
				_targetValue = daoClientPlanVw.TargetValue;
				_targetVisit = daoClientPlanVw.TargetVisit;
				_targetCall = daoClientPlanVw.TargetCall;
				_targetDate = daoClientPlanVw.TargetDate;
				_clientGroupCode = daoClientPlanVw.ClientGroupCode;
				_clientGroupNameEn = daoClientPlanVw.ClientGroupNameEn;
				_clientGroupNameAr = daoClientPlanVw.ClientGroupNameAr;
				_businessUnitId = daoClientPlanVw.BusinessUnitId;
				_clientGroupId = daoClientPlanVw.ClientGroupId;
				_clientGroupSubId = daoClientPlanVw.ClientGroupSubId;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ClientPlanVwCollection
		///This method returns the collection of BOClientPlanVw objects
		///</Summary>
		///<returns>
		///List[BOClientPlanVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOClientPlanVw> ClientPlanVwCollection()
		{
			try
			{
				IList<BOClientPlanVw> boClientPlanVwCollection = new List<BOClientPlanVw>();
				IList<DAOClientPlanVw> daoClientPlanVwCollection = DAOClientPlanVw.SelectAll();
			
				foreach(DAOClientPlanVw daoClientPlanVw in daoClientPlanVwCollection)
					boClientPlanVwCollection.Add(new BOClientPlanVw(daoClientPlanVw));
			
				return boClientPlanVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientPlanVwCollectionCount
		///This method returns the collection count of BOClientPlanVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ClientPlanVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOClientPlanVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOClientPlanVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOClientPlanVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientPlanVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOClientPlanVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boClientPlanVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOClientPlanVw> daoClientPlanVwCollection = DAOClientPlanVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOClientPlanVw resdaoClientPlanVw in daoClientPlanVwCollection)
					boClientPlanVwCollection.Add((T)(object)new BOClientPlanVw(resdaoClientPlanVw));
			
				return boClientPlanVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientPlanVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOClientPlanVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOClientPlanVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? ClientId
		{
			get
			{
				 return _clientId;
			}
			set
			{
				_clientId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientCode
		{
			get
			{
				 return _clientCode;
			}
			set
			{
				_clientCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameAr
		{
			get
			{
				 return _clientNameAr;
			}
			set
			{
				_clientNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameEn
		{
			get
			{
				 return _clientNameEn;
			}
			set
			{
				_clientNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientTypeId
		{
			get
			{
				 return _clientTypeId;
			}
			set
			{
				_clientTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? CreditLimit
		{
			get
			{
				 return _creditLimit;
			}
			set
			{
				_creditLimit = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? CreditBalance
		{
			get
			{
				 return _creditBalance;
			}
			set
			{
				_creditBalance = value;
				_isDirty = true;
			}
		}
		
		public virtual Int64? PlanId
		{
			get
			{
				 return _planId;
			}
			set
			{
				_planId = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? TargetValue
		{
			get
			{
				 return _targetValue;
			}
			set
			{
				_targetValue = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? TargetVisit
		{
			get
			{
				 return _targetVisit;
			}
			set
			{
				_targetVisit = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? TargetCall
		{
			get
			{
				 return _targetCall;
			}
			set
			{
				_targetCall = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? TargetDate
		{
			get
			{
				 return _targetDate;
			}
			set
			{
				_targetDate = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupCode
		{
			get
			{
				 return _clientGroupCode;
			}
			set
			{
				_clientGroupCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupNameEn
		{
			get
			{
				 return _clientGroupNameEn;
			}
			set
			{
				_clientGroupNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupNameAr
		{
			get
			{
				 return _clientGroupNameAr;
			}
			set
			{
				_clientGroupNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BusinessUnitId
		{
			get
			{
				 return _businessUnitId;
			}
			set
			{
				_businessUnitId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientGroupId
		{
			get
			{
				 return _clientGroupId;
			}
			set
			{
				_clientGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientGroupSubId
		{
			get
			{
				 return _clientGroupSubId;
			}
			set
			{
				_clientGroupSubId = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
