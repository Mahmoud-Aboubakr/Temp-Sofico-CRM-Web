/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:10:24 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOOperationRequestDetailPreferredTime.
	///</Summary>
	public partial class BOOperationRequestDetailPreferredTime : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int64? _preferredId;
		protected Int64? _detailId;
		protected Int32? _preferredOperationId;
		protected Int32? _weekDayId;
		protected TimeSpan? _fromTime;
		protected TimeSpan? _toTime;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOOperationRequestDetailPreferredTime()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int64 preferredId
		///</parameters>
		public BOOperationRequestDetailPreferredTime(Int64 preferredId)
		{
			try
			{
				DAOOperationRequestDetailPreferredTime daoOperationRequestDetailPreferredTime = DAOOperationRequestDetailPreferredTime.SelectOne(preferredId);
				_preferredId = daoOperationRequestDetailPreferredTime.PreferredId;
				_detailId = daoOperationRequestDetailPreferredTime.DetailId;
				_preferredOperationId = daoOperationRequestDetailPreferredTime.PreferredOperationId;
				_weekDayId = daoOperationRequestDetailPreferredTime.WeekDayId;
				_fromTime = daoOperationRequestDetailPreferredTime.FromTime;
				_toTime = daoOperationRequestDetailPreferredTime.ToTime;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOOperationRequestDetailPreferredTime
		///</parameters>
		protected internal BOOperationRequestDetailPreferredTime(DAOOperationRequestDetailPreferredTime daoOperationRequestDetailPreferredTime)
		{
			try
			{
				_preferredId = daoOperationRequestDetailPreferredTime.PreferredId;
				_detailId = daoOperationRequestDetailPreferredTime.DetailId;
				_preferredOperationId = daoOperationRequestDetailPreferredTime.PreferredOperationId;
				_weekDayId = daoOperationRequestDetailPreferredTime.WeekDayId;
				_fromTime = daoOperationRequestDetailPreferredTime.FromTime;
				_toTime = daoOperationRequestDetailPreferredTime.ToTime;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new OperationRequestDetailPreferredTime record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOOperationRequestDetailPreferredTime daoOperationRequestDetailPreferredTime = new DAOOperationRequestDetailPreferredTime();
			RegisterDataObject(daoOperationRequestDetailPreferredTime);
			BeginTransaction("savenewBOOperationRequestDet8698");
			try
			{
				daoOperationRequestDetailPreferredTime.DetailId = _detailId;
				daoOperationRequestDetailPreferredTime.PreferredOperationId = _preferredOperationId;
				daoOperationRequestDetailPreferredTime.WeekDayId = _weekDayId;
				daoOperationRequestDetailPreferredTime.FromTime = _fromTime;
				daoOperationRequestDetailPreferredTime.ToTime = _toTime;
				daoOperationRequestDetailPreferredTime.Insert();
				CommitTransaction();
				
				_preferredId = daoOperationRequestDetailPreferredTime.PreferredId;
				_detailId = daoOperationRequestDetailPreferredTime.DetailId;
				_preferredOperationId = daoOperationRequestDetailPreferredTime.PreferredOperationId;
				_weekDayId = daoOperationRequestDetailPreferredTime.WeekDayId;
				_fromTime = daoOperationRequestDetailPreferredTime.FromTime;
				_toTime = daoOperationRequestDetailPreferredTime.ToTime;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOOperationRequestDet8698");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one OperationRequestDetailPreferredTime record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOOperationRequestDetailPreferredTime
		///</parameters>
		public virtual void Update()
		{
			DAOOperationRequestDetailPreferredTime daoOperationRequestDetailPreferredTime = new DAOOperationRequestDetailPreferredTime();
			RegisterDataObject(daoOperationRequestDetailPreferredTime);
			BeginTransaction("updateBOOperationRequestDeta8698");
			try
			{
				daoOperationRequestDetailPreferredTime.PreferredId = _preferredId;
				daoOperationRequestDetailPreferredTime.DetailId = _detailId;
				daoOperationRequestDetailPreferredTime.PreferredOperationId = _preferredOperationId;
				daoOperationRequestDetailPreferredTime.WeekDayId = _weekDayId;
				daoOperationRequestDetailPreferredTime.FromTime = _fromTime;
				daoOperationRequestDetailPreferredTime.ToTime = _toTime;
				daoOperationRequestDetailPreferredTime.Update();
				CommitTransaction();
				
				_preferredId = daoOperationRequestDetailPreferredTime.PreferredId;
				_detailId = daoOperationRequestDetailPreferredTime.DetailId;
				_preferredOperationId = daoOperationRequestDetailPreferredTime.PreferredOperationId;
				_weekDayId = daoOperationRequestDetailPreferredTime.WeekDayId;
				_fromTime = daoOperationRequestDetailPreferredTime.FromTime;
				_toTime = daoOperationRequestDetailPreferredTime.ToTime;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOOperationRequestDeta8698");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one OperationRequestDetailPreferredTime record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOOperationRequestDetailPreferredTime daoOperationRequestDetailPreferredTime = new DAOOperationRequestDetailPreferredTime();
			RegisterDataObject(daoOperationRequestDetailPreferredTime);
			BeginTransaction("deleteBOOperationRequestDeta8698");
			try
			{
				daoOperationRequestDetailPreferredTime.PreferredId = _preferredId;
				daoOperationRequestDetailPreferredTime.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOOperationRequestDeta8698");
				throw;
			}
		}
		
		///<Summary>
		///OperationRequestDetailPreferredTimeCollection
		///This method returns the collection of BOOperationRequestDetailPreferredTime objects
		///</Summary>
		///<returns>
		///List[BOOperationRequestDetailPreferredTime]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOOperationRequestDetailPreferredTime> OperationRequestDetailPreferredTimeCollection()
		{
			try
			{
				IList<BOOperationRequestDetailPreferredTime> boOperationRequestDetailPreferredTimeCollection = new List<BOOperationRequestDetailPreferredTime>();
				IList<DAOOperationRequestDetailPreferredTime> daoOperationRequestDetailPreferredTimeCollection = DAOOperationRequestDetailPreferredTime.SelectAll();
			
				foreach(DAOOperationRequestDetailPreferredTime daoOperationRequestDetailPreferredTime in daoOperationRequestDetailPreferredTimeCollection)
					boOperationRequestDetailPreferredTimeCollection.Add(new BOOperationRequestDetailPreferredTime(daoOperationRequestDetailPreferredTime));
			
				return boOperationRequestDetailPreferredTimeCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///OperationRequestDetailPreferredTimeCollectionCount
		///This method returns the collection count of BOOperationRequestDetailPreferredTime objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 OperationRequestDetailPreferredTimeCollectionCount()
		{
			try
			{
				Int32 objCount = DAOOperationRequestDetailPreferredTime.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOOperationRequestDetailPreferredTime>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOOperationRequestDetailPreferredTime.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///OperationRequestDetailPreferredTimeCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOOperationRequestDetailPreferredTime objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boOperationRequestDetailPreferredTimeCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOOperationRequestDetailPreferredTime> daoOperationRequestDetailPreferredTimeCollection = DAOOperationRequestDetailPreferredTime.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOOperationRequestDetailPreferredTime resdaoOperationRequestDetailPreferredTime in daoOperationRequestDetailPreferredTimeCollection)
					boOperationRequestDetailPreferredTimeCollection.Add((T)(object)new BOOperationRequestDetailPreferredTime(resdaoOperationRequestDetailPreferredTime));
			
				return boOperationRequestDetailPreferredTimeCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///OperationRequestDetailPreferredTimeCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOOperationRequestDetailPreferredTime objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOOperationRequestDetailPreferredTime.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int64? PreferredId
		{
			get
			{
				 return _preferredId;
			}
			set
			{
				_preferredId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int64? DetailId
		{
			get
			{
				 return _detailId;
			}
			set
			{
				_detailId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PreferredOperationId
		{
			get
			{
				 return _preferredOperationId;
			}
			set
			{
				_preferredOperationId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? WeekDayId
		{
			get
			{
				 return _weekDayId;
			}
			set
			{
				_weekDayId = value;
				_isDirty = true;
			}
		}
		
		public virtual TimeSpan? FromTime
		{
			get
			{
				 return _fromTime;
			}
			set
			{
				_fromTime = value;
				_isDirty = true;
			}
		}
		
		public virtual TimeSpan? ToTime
		{
			get
			{
				 return _toTime;
			}
			set
			{
				_toTime = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
