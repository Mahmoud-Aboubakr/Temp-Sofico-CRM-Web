/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAppUserNotificationVw.
	///</Summary>
	public partial class BOAppUserNotificationVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _userNotificationId;
		protected Int32? _notificationId;
		protected Int32? _userId;
		protected DateTime? _readDate;
		protected bool? _isReaded;
		protected string _message;
		protected string _priorityNameAr;
		protected string _priorityNameEn;
		protected string _notificationTypeNameAr;
		protected string _notificationTypeNameEn;
		protected Int32? _notificationTypeId;
		protected Int32? _priorityId;
		protected DateTime? _notificationDateTime;
		protected DateTime? _scheduleTime;
		protected DateTime? _notificationDate;
		protected string _signalrId;
		protected string _firebaseId;
		protected Int32? _userGroupId;
		protected string _priorityColor;
		protected string _userGroupNameEn;
		protected string _userGroupNameAr;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAppUserNotificationVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAppUserNotificationVw
		///</parameters>
		protected internal BOAppUserNotificationVw(DAOAppUserNotificationVw daoAppUserNotificationVw)
		{
			try
			{
				_userNotificationId = daoAppUserNotificationVw.UserNotificationId;
				_notificationId = daoAppUserNotificationVw.NotificationId;
				_userId = daoAppUserNotificationVw.UserId;
				_readDate = daoAppUserNotificationVw.ReadDate;
				_isReaded = daoAppUserNotificationVw.IsReaded;
				_message = daoAppUserNotificationVw.Message;
				_priorityNameAr = daoAppUserNotificationVw.PriorityNameAr;
				_priorityNameEn = daoAppUserNotificationVw.PriorityNameEn;
				_notificationTypeNameAr = daoAppUserNotificationVw.NotificationTypeNameAr;
				_notificationTypeNameEn = daoAppUserNotificationVw.NotificationTypeNameEn;
				_notificationTypeId = daoAppUserNotificationVw.NotificationTypeId;
				_priorityId = daoAppUserNotificationVw.PriorityId;
				_notificationDateTime = daoAppUserNotificationVw.NotificationDateTime;
				_scheduleTime = daoAppUserNotificationVw.ScheduleTime;
				_notificationDate = daoAppUserNotificationVw.NotificationDate;
				_signalrId = daoAppUserNotificationVw.SignalrId;
				_firebaseId = daoAppUserNotificationVw.FirebaseId;
				_userGroupId = daoAppUserNotificationVw.UserGroupId;
				_priorityColor = daoAppUserNotificationVw.PriorityColor;
				_userGroupNameEn = daoAppUserNotificationVw.UserGroupNameEn;
				_userGroupNameAr = daoAppUserNotificationVw.UserGroupNameAr;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///AppUserNotificationVwCollection
		///This method returns the collection of BOAppUserNotificationVw objects
		///</Summary>
		///<returns>
		///List[BOAppUserNotificationVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOAppUserNotificationVw> AppUserNotificationVwCollection()
		{
			try
			{
				IList<BOAppUserNotificationVw> boAppUserNotificationVwCollection = new List<BOAppUserNotificationVw>();
				IList<DAOAppUserNotificationVw> daoAppUserNotificationVwCollection = DAOAppUserNotificationVw.SelectAll();
			
				foreach(DAOAppUserNotificationVw daoAppUserNotificationVw in daoAppUserNotificationVwCollection)
					boAppUserNotificationVwCollection.Add(new BOAppUserNotificationVw(daoAppUserNotificationVw));
			
				return boAppUserNotificationVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserNotificationVwCollectionCount
		///This method returns the collection count of BOAppUserNotificationVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AppUserNotificationVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOAppUserNotificationVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOAppUserNotificationVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOAppUserNotificationVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserNotificationVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOAppUserNotificationVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boAppUserNotificationVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOAppUserNotificationVw> daoAppUserNotificationVwCollection = DAOAppUserNotificationVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOAppUserNotificationVw resdaoAppUserNotificationVw in daoAppUserNotificationVwCollection)
					boAppUserNotificationVwCollection.Add((T)(object)new BOAppUserNotificationVw(resdaoAppUserNotificationVw));
			
				return boAppUserNotificationVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserNotificationVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOAppUserNotificationVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOAppUserNotificationVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? UserNotificationId
		{
			get
			{
				 return _userNotificationId;
			}
			set
			{
				_userNotificationId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? NotificationId
		{
			get
			{
				 return _notificationId;
			}
			set
			{
				_notificationId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UserId
		{
			get
			{
				 return _userId;
			}
			set
			{
				_userId = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? ReadDate
		{
			get
			{
				 return _readDate;
			}
			set
			{
				_readDate = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsReaded
		{
			get
			{
				 return _isReaded;
			}
			set
			{
				_isReaded = value;
				_isDirty = true;
			}
		}
		
		public virtual string Message
		{
			get
			{
				 return _message;
			}
			set
			{
				_message = value;
				_isDirty = true;
			}
		}
		
		public virtual string PriorityNameAr
		{
			get
			{
				 return _priorityNameAr;
			}
			set
			{
				_priorityNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string PriorityNameEn
		{
			get
			{
				 return _priorityNameEn;
			}
			set
			{
				_priorityNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string NotificationTypeNameAr
		{
			get
			{
				 return _notificationTypeNameAr;
			}
			set
			{
				_notificationTypeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string NotificationTypeNameEn
		{
			get
			{
				 return _notificationTypeNameEn;
			}
			set
			{
				_notificationTypeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? NotificationTypeId
		{
			get
			{
				 return _notificationTypeId;
			}
			set
			{
				_notificationTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PriorityId
		{
			get
			{
				 return _priorityId;
			}
			set
			{
				_priorityId = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? NotificationDateTime
		{
			get
			{
				 return _notificationDateTime;
			}
			set
			{
				_notificationDateTime = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? ScheduleTime
		{
			get
			{
				 return _scheduleTime;
			}
			set
			{
				_scheduleTime = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? NotificationDate
		{
			get
			{
				 return _notificationDate;
			}
			set
			{
				_notificationDate = value;
				_isDirty = true;
			}
		}
		
		public virtual string SignalrId
		{
			get
			{
				 return _signalrId;
			}
			set
			{
				_signalrId = value;
				_isDirty = true;
			}
		}
		
		public virtual string FirebaseId
		{
			get
			{
				 return _firebaseId;
			}
			set
			{
				_firebaseId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UserGroupId
		{
			get
			{
				 return _userGroupId;
			}
			set
			{
				_userGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual string PriorityColor
		{
			get
			{
				 return _priorityColor;
			}
			set
			{
				_priorityColor = value;
				_isDirty = true;
			}
		}
		
		public virtual string UserGroupNameEn
		{
			get
			{
				 return _userGroupNameEn;
			}
			set
			{
				_userGroupNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string UserGroupNameAr
		{
			get
			{
				 return _userGroupNameAr;
			}
			set
			{
				_userGroupNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
