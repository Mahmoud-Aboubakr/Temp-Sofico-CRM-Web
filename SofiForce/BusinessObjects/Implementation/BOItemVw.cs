/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOItemVw.
	///</Summary>
	public partial class BOItemVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _itemId;
		protected Int32? _vendorId;
		protected Int32? _acceptDays;
		protected bool? _isTaxable;
		protected string _itemCode;
		protected string _itemNameEn;
		protected string _itemNameAr;
		protected decimal? _publicPrice;
		protected decimal? _clientPrice;
		protected decimal? _discount;
		protected bool? _isLocal;
		protected bool? _isActive;
		protected Int32? _displayOrder;
		protected string _color;
		protected string _icon;
		protected bool? _isNewAdded;
		protected bool? _hasPromotion;
		protected bool? _canEdit;
		protected bool? _canDelete;
		protected bool? _isNewStocked;
		protected Int32? _vendorGroupId;
		protected string _vendorNameEn;
		protected Int32? _itemGroupId;
		protected string _itemGroupNameAr;
		protected string _itemGroupNameEn;
		protected string _vendorNameAr;
		protected string _itemGroupCode;
		protected string _vendorCode;
		protected Int32? _unitId;
		protected Int32? _quota;
		protected string _productImage;
		protected DateTime? _cDate;
		protected Int32? _itemCategoryId;
		protected Int32? _itemSourceId;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOItemVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOItemVw
		///</parameters>
		protected internal BOItemVw(DAOItemVw daoItemVw)
		{
			try
			{
				_itemId = daoItemVw.ItemId;
				_vendorId = daoItemVw.VendorId;
				_acceptDays = daoItemVw.AcceptDays;
				_isTaxable = daoItemVw.IsTaxable;
				_itemCode = daoItemVw.ItemCode;
				_itemNameEn = daoItemVw.ItemNameEn;
				_itemNameAr = daoItemVw.ItemNameAr;
				_publicPrice = daoItemVw.PublicPrice;
				_clientPrice = daoItemVw.ClientPrice;
				_discount = daoItemVw.Discount;
				_isLocal = daoItemVw.IsLocal;
				_isActive = daoItemVw.IsActive;
				_displayOrder = daoItemVw.DisplayOrder;
				_color = daoItemVw.Color;
				_icon = daoItemVw.Icon;
				_isNewAdded = daoItemVw.IsNewAdded;
				_hasPromotion = daoItemVw.HasPromotion;
				_canEdit = daoItemVw.CanEdit;
				_canDelete = daoItemVw.CanDelete;
				_isNewStocked = daoItemVw.IsNewStocked;
				_vendorGroupId = daoItemVw.VendorGroupId;
				_vendorNameEn = daoItemVw.VendorNameEn;
				_itemGroupId = daoItemVw.ItemGroupId;
				_itemGroupNameAr = daoItemVw.ItemGroupNameAr;
				_itemGroupNameEn = daoItemVw.ItemGroupNameEn;
				_vendorNameAr = daoItemVw.VendorNameAr;
				_itemGroupCode = daoItemVw.ItemGroupCode;
				_vendorCode = daoItemVw.VendorCode;
				_unitId = daoItemVw.UnitId;
				_quota = daoItemVw.Quota;
				_productImage = daoItemVw.ProductImage;
				_cDate = daoItemVw.CDate;
				_itemCategoryId = daoItemVw.ItemCategoryId;
				_itemSourceId = daoItemVw.ItemSourceId;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ItemVwCollection
		///This method returns the collection of BOItemVw objects
		///</Summary>
		///<returns>
		///List[BOItemVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOItemVw> ItemVwCollection()
		{
			try
			{
				IList<BOItemVw> boItemVwCollection = new List<BOItemVw>();
				IList<DAOItemVw> daoItemVwCollection = DAOItemVw.SelectAll();
			
				foreach(DAOItemVw daoItemVw in daoItemVwCollection)
					boItemVwCollection.Add(new BOItemVw(daoItemVw));
			
				return boItemVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemVwCollectionCount
		///This method returns the collection count of BOItemVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ItemVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOItemVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOItemVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOItemVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOItemVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boItemVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOItemVw> daoItemVwCollection = DAOItemVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOItemVw resdaoItemVw in daoItemVwCollection)
					boItemVwCollection.Add((T)(object)new BOItemVw(resdaoItemVw));
			
				return boItemVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOItemVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOItemVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? ItemId
		{
			get
			{
				 return _itemId;
			}
			set
			{
				_itemId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? VendorId
		{
			get
			{
				 return _vendorId;
			}
			set
			{
				_vendorId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? AcceptDays
		{
			get
			{
				 return _acceptDays;
			}
			set
			{
				_acceptDays = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsTaxable
		{
			get
			{
				 return _isTaxable;
			}
			set
			{
				_isTaxable = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemCode
		{
			get
			{
				 return _itemCode;
			}
			set
			{
				_itemCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameEn
		{
			get
			{
				 return _itemNameEn;
			}
			set
			{
				_itemNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameAr
		{
			get
			{
				 return _itemNameAr;
			}
			set
			{
				_itemNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? PublicPrice
		{
			get
			{
				 return _publicPrice;
			}
			set
			{
				_publicPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? ClientPrice
		{
			get
			{
				 return _clientPrice;
			}
			set
			{
				_clientPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Discount
		{
			get
			{
				 return _discount;
			}
			set
			{
				_discount = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsLocal
		{
			get
			{
				 return _isLocal;
			}
			set
			{
				_isLocal = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? DisplayOrder
		{
			get
			{
				 return _displayOrder;
			}
			set
			{
				_displayOrder = value;
				_isDirty = true;
			}
		}
		
		public virtual string Color
		{
			get
			{
				 return _color;
			}
			set
			{
				_color = value;
				_isDirty = true;
			}
		}
		
		public virtual string Icon
		{
			get
			{
				 return _icon;
			}
			set
			{
				_icon = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsNewAdded
		{
			get
			{
				 return _isNewAdded;
			}
			set
			{
				_isNewAdded = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? HasPromotion
		{
			get
			{
				 return _hasPromotion;
			}
			set
			{
				_hasPromotion = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanEdit
		{
			get
			{
				 return _canEdit;
			}
			set
			{
				_canEdit = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanDelete
		{
			get
			{
				 return _canDelete;
			}
			set
			{
				_canDelete = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsNewStocked
		{
			get
			{
				 return _isNewStocked;
			}
			set
			{
				_isNewStocked = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? VendorGroupId
		{
			get
			{
				 return _vendorGroupId;
			}
			set
			{
				_vendorGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorNameEn
		{
			get
			{
				 return _vendorNameEn;
			}
			set
			{
				_vendorNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemGroupId
		{
			get
			{
				 return _itemGroupId;
			}
			set
			{
				_itemGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemGroupNameAr
		{
			get
			{
				 return _itemGroupNameAr;
			}
			set
			{
				_itemGroupNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemGroupNameEn
		{
			get
			{
				 return _itemGroupNameEn;
			}
			set
			{
				_itemGroupNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorNameAr
		{
			get
			{
				 return _vendorNameAr;
			}
			set
			{
				_vendorNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemGroupCode
		{
			get
			{
				 return _itemGroupCode;
			}
			set
			{
				_itemGroupCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorCode
		{
			get
			{
				 return _vendorCode;
			}
			set
			{
				_vendorCode = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UnitId
		{
			get
			{
				 return _unitId;
			}
			set
			{
				_unitId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Quota
		{
			get
			{
				 return _quota;
			}
			set
			{
				_quota = value;
				_isDirty = true;
			}
		}
		
		public virtual string ProductImage
		{
			get
			{
				 return _productImage;
			}
			set
			{
				_productImage = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CDate
		{
			get
			{
				 return _cDate;
			}
			set
			{
				_cDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemCategoryId
		{
			get
			{
				 return _itemCategoryId;
			}
			set
			{
				_itemCategoryId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemSourceId
		{
			get
			{
				 return _itemSourceId;
			}
			set
			{
				_itemSourceId = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
