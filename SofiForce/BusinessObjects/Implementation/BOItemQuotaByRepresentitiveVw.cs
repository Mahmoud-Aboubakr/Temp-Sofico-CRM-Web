/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:14:06 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOItemQuotaByRepresentitiveVw.
	///</Summary>
	public partial class BOItemQuotaByRepresentitiveVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _representativeId;
		protected Int32? _itemId;
		protected Int32? _quantity;
		protected DateTime? _salesDate;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOItemQuotaByRepresentitiveVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOItemQuotaByRepresentitiveVw
		///</parameters>
		protected internal BOItemQuotaByRepresentitiveVw(DAOItemQuotaByRepresentitiveVw daoItemQuotaByRepresentitiveVw)
		{
			try
			{
				_representativeId = daoItemQuotaByRepresentitiveVw.RepresentativeId;
				_itemId = daoItemQuotaByRepresentitiveVw.ItemId;
				_quantity = daoItemQuotaByRepresentitiveVw.Quantity;
				_salesDate = daoItemQuotaByRepresentitiveVw.SalesDate;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ItemQuotaByRepresentitiveVwCollection
		///This method returns the collection of BOItemQuotaByRepresentitiveVw objects
		///</Summary>
		///<returns>
		///List[BOItemQuotaByRepresentitiveVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOItemQuotaByRepresentitiveVw> ItemQuotaByRepresentitiveVwCollection()
		{
			try
			{
				IList<BOItemQuotaByRepresentitiveVw> boItemQuotaByRepresentitiveVwCollection = new List<BOItemQuotaByRepresentitiveVw>();
				IList<DAOItemQuotaByRepresentitiveVw> daoItemQuotaByRepresentitiveVwCollection = DAOItemQuotaByRepresentitiveVw.SelectAll();
			
				foreach(DAOItemQuotaByRepresentitiveVw daoItemQuotaByRepresentitiveVw in daoItemQuotaByRepresentitiveVwCollection)
					boItemQuotaByRepresentitiveVwCollection.Add(new BOItemQuotaByRepresentitiveVw(daoItemQuotaByRepresentitiveVw));
			
				return boItemQuotaByRepresentitiveVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemQuotaByRepresentitiveVwCollectionCount
		///This method returns the collection count of BOItemQuotaByRepresentitiveVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ItemQuotaByRepresentitiveVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOItemQuotaByRepresentitiveVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOItemQuotaByRepresentitiveVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOItemQuotaByRepresentitiveVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemQuotaByRepresentitiveVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOItemQuotaByRepresentitiveVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boItemQuotaByRepresentitiveVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOItemQuotaByRepresentitiveVw> daoItemQuotaByRepresentitiveVwCollection = DAOItemQuotaByRepresentitiveVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOItemQuotaByRepresentitiveVw resdaoItemQuotaByRepresentitiveVw in daoItemQuotaByRepresentitiveVwCollection)
					boItemQuotaByRepresentitiveVwCollection.Add((T)(object)new BOItemQuotaByRepresentitiveVw(resdaoItemQuotaByRepresentitiveVw));
			
				return boItemQuotaByRepresentitiveVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemQuotaByRepresentitiveVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOItemQuotaByRepresentitiveVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOItemQuotaByRepresentitiveVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? RepresentativeId
		{
			get
			{
				 return _representativeId;
			}
			set
			{
				_representativeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemId
		{
			get
			{
				 return _itemId;
			}
			set
			{
				_itemId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Quantity
		{
			get
			{
				 return _quantity;
			}
			set
			{
				_quantity = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? SalesDate
		{
			get
			{
				 return _salesDate;
			}
			set
			{
				_salesDate = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
