/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAppUserClientGroupVw.
	///</Summary>
	public partial class BOAppUserClientGroupVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _appUserGroupId;
		protected Int32? _userId;
		protected Int32? _clientGroupId;
		protected string _clientGroupCode;
		protected string _clientGroupNameEn;
		protected string _clientGroupNameAr;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAppUserClientGroupVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAppUserClientGroupVw
		///</parameters>
		protected internal BOAppUserClientGroupVw(DAOAppUserClientGroupVw daoAppUserClientGroupVw)
		{
			try
			{
				_appUserGroupId = daoAppUserClientGroupVw.AppUserGroupId;
				_userId = daoAppUserClientGroupVw.UserId;
				_clientGroupId = daoAppUserClientGroupVw.ClientGroupId;
				_clientGroupCode = daoAppUserClientGroupVw.ClientGroupCode;
				_clientGroupNameEn = daoAppUserClientGroupVw.ClientGroupNameEn;
				_clientGroupNameAr = daoAppUserClientGroupVw.ClientGroupNameAr;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///AppUserClientGroupVwCollection
		///This method returns the collection of BOAppUserClientGroupVw objects
		///</Summary>
		///<returns>
		///List[BOAppUserClientGroupVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOAppUserClientGroupVw> AppUserClientGroupVwCollection()
		{
			try
			{
				IList<BOAppUserClientGroupVw> boAppUserClientGroupVwCollection = new List<BOAppUserClientGroupVw>();
				IList<DAOAppUserClientGroupVw> daoAppUserClientGroupVwCollection = DAOAppUserClientGroupVw.SelectAll();
			
				foreach(DAOAppUserClientGroupVw daoAppUserClientGroupVw in daoAppUserClientGroupVwCollection)
					boAppUserClientGroupVwCollection.Add(new BOAppUserClientGroupVw(daoAppUserClientGroupVw));
			
				return boAppUserClientGroupVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserClientGroupVwCollectionCount
		///This method returns the collection count of BOAppUserClientGroupVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AppUserClientGroupVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOAppUserClientGroupVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOAppUserClientGroupVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOAppUserClientGroupVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserClientGroupVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOAppUserClientGroupVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boAppUserClientGroupVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOAppUserClientGroupVw> daoAppUserClientGroupVwCollection = DAOAppUserClientGroupVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOAppUserClientGroupVw resdaoAppUserClientGroupVw in daoAppUserClientGroupVwCollection)
					boAppUserClientGroupVwCollection.Add((T)(object)new BOAppUserClientGroupVw(resdaoAppUserClientGroupVw));
			
				return boAppUserClientGroupVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserClientGroupVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOAppUserClientGroupVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOAppUserClientGroupVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? AppUserGroupId
		{
			get
			{
				 return _appUserGroupId;
			}
			set
			{
				_appUserGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UserId
		{
			get
			{
				 return _userId;
			}
			set
			{
				_userId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientGroupId
		{
			get
			{
				 return _clientGroupId;
			}
			set
			{
				_clientGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupCode
		{
			get
			{
				 return _clientGroupCode;
			}
			set
			{
				_clientGroupCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupNameEn
		{
			get
			{
				 return _clientGroupNameEn;
			}
			set
			{
				_clientGroupNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientGroupNameAr
		{
			get
			{
				 return _clientGroupNameAr;
			}
			set
			{
				_clientGroupNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
