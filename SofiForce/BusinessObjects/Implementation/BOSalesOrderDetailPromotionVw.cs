/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 6/24/2023 12:17:49 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOSalesOrderDetailPromotionVw.
	///</Summary>
	public partial class BOSalesOrderDetailPromotionVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected DateTime? _salesDate;
		protected Int32? _clientId;
		protected string _promotionCode;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOSalesOrderDetailPromotionVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOSalesOrderDetailPromotionVw
		///</parameters>
		protected internal BOSalesOrderDetailPromotionVw(DAOSalesOrderDetailPromotionVw daoSalesOrderDetailPromotionVw)
		{
			try
			{
				_salesDate = daoSalesOrderDetailPromotionVw.SalesDate;
				_clientId = daoSalesOrderDetailPromotionVw.ClientId;
				_promotionCode = daoSalesOrderDetailPromotionVw.PromotionCode;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///SalesOrderDetailPromotionVwCollection
		///This method returns the collection of BOSalesOrderDetailPromotionVw objects
		///</Summary>
		///<returns>
		///List[BOSalesOrderDetailPromotionVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOSalesOrderDetailPromotionVw> SalesOrderDetailPromotionVwCollection()
		{
			try
			{
				IList<BOSalesOrderDetailPromotionVw> boSalesOrderDetailPromotionVwCollection = new List<BOSalesOrderDetailPromotionVw>();
				IList<DAOSalesOrderDetailPromotionVw> daoSalesOrderDetailPromotionVwCollection = DAOSalesOrderDetailPromotionVw.SelectAll();
			
				foreach(DAOSalesOrderDetailPromotionVw daoSalesOrderDetailPromotionVw in daoSalesOrderDetailPromotionVwCollection)
					boSalesOrderDetailPromotionVwCollection.Add(new BOSalesOrderDetailPromotionVw(daoSalesOrderDetailPromotionVw));
			
				return boSalesOrderDetailPromotionVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SalesOrderDetailPromotionVwCollectionCount
		///This method returns the collection count of BOSalesOrderDetailPromotionVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 SalesOrderDetailPromotionVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOSalesOrderDetailPromotionVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOSalesOrderDetailPromotionVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOSalesOrderDetailPromotionVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SalesOrderDetailPromotionVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOSalesOrderDetailPromotionVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boSalesOrderDetailPromotionVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOSalesOrderDetailPromotionVw> daoSalesOrderDetailPromotionVwCollection = DAOSalesOrderDetailPromotionVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOSalesOrderDetailPromotionVw resdaoSalesOrderDetailPromotionVw in daoSalesOrderDetailPromotionVwCollection)
					boSalesOrderDetailPromotionVwCollection.Add((T)(object)new BOSalesOrderDetailPromotionVw(resdaoSalesOrderDetailPromotionVw));
			
				return boSalesOrderDetailPromotionVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///SalesOrderDetailPromotionVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOSalesOrderDetailPromotionVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOSalesOrderDetailPromotionVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual DateTime? SalesDate
		{
			get
			{
				 return _salesDate;
			}
			set
			{
				_salesDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientId
		{
			get
			{
				 return _clientId;
			}
			set
			{
				_clientId = value;
				_isDirty = true;
			}
		}
		
		public virtual string PromotionCode
		{
			get
			{
				 return _promotionCode;
			}
			set
			{
				_promotionCode = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
