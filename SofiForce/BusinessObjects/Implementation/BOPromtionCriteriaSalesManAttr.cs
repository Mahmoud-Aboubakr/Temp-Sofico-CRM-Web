/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOPromtionCriteriaSalesManAttr.
	///</Summary>
	public partial class BOPromtionCriteriaSalesManAttr : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _salesManAttributeId;
		protected string _salesManAttributeCode;
		protected string _salesManAttributeNameAr;
		protected string _salesManAttributeNameEn;
		protected string _salesManAttributeDesc;
		protected bool? _isCustom;
		protected bool? _isActive;
		protected bool? _canEdit;
		protected bool? _canDelete;
		protected Int32? _displayOrder;
		protected Int32? _cBy;
		protected DateTime? _cDate;
		protected Int32? _eBy;
		protected DateTime? _eDate;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOPromtionCriteriaSalesManAttr()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 salesManAttributeId
		///</parameters>
		public BOPromtionCriteriaSalesManAttr(Int32 salesManAttributeId)
		{
			try
			{
				DAOPromtionCriteriaSalesManAttr daoPromtionCriteriaSalesManAttr = DAOPromtionCriteriaSalesManAttr.SelectOne(salesManAttributeId);
				_salesManAttributeId = daoPromtionCriteriaSalesManAttr.SalesManAttributeId;
				_salesManAttributeCode = daoPromtionCriteriaSalesManAttr.SalesManAttributeCode;
				_salesManAttributeNameAr = daoPromtionCriteriaSalesManAttr.SalesManAttributeNameAr;
				_salesManAttributeNameEn = daoPromtionCriteriaSalesManAttr.SalesManAttributeNameEn;
				_salesManAttributeDesc = daoPromtionCriteriaSalesManAttr.SalesManAttributeDesc;
				_isCustom = daoPromtionCriteriaSalesManAttr.IsCustom;
				_isActive = daoPromtionCriteriaSalesManAttr.IsActive;
				_canEdit = daoPromtionCriteriaSalesManAttr.CanEdit;
				_canDelete = daoPromtionCriteriaSalesManAttr.CanDelete;
				_displayOrder = daoPromtionCriteriaSalesManAttr.DisplayOrder;
				_cBy = daoPromtionCriteriaSalesManAttr.CBy;
				_cDate = daoPromtionCriteriaSalesManAttr.CDate;
				_eBy = daoPromtionCriteriaSalesManAttr.EBy;
				_eDate = daoPromtionCriteriaSalesManAttr.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOPromtionCriteriaSalesManAttr
		///</parameters>
		protected internal BOPromtionCriteriaSalesManAttr(DAOPromtionCriteriaSalesManAttr daoPromtionCriteriaSalesManAttr)
		{
			try
			{
				_salesManAttributeId = daoPromtionCriteriaSalesManAttr.SalesManAttributeId;
				_salesManAttributeCode = daoPromtionCriteriaSalesManAttr.SalesManAttributeCode;
				_salesManAttributeNameAr = daoPromtionCriteriaSalesManAttr.SalesManAttributeNameAr;
				_salesManAttributeNameEn = daoPromtionCriteriaSalesManAttr.SalesManAttributeNameEn;
				_salesManAttributeDesc = daoPromtionCriteriaSalesManAttr.SalesManAttributeDesc;
				_isCustom = daoPromtionCriteriaSalesManAttr.IsCustom;
				_isActive = daoPromtionCriteriaSalesManAttr.IsActive;
				_canEdit = daoPromtionCriteriaSalesManAttr.CanEdit;
				_canDelete = daoPromtionCriteriaSalesManAttr.CanDelete;
				_displayOrder = daoPromtionCriteriaSalesManAttr.DisplayOrder;
				_cBy = daoPromtionCriteriaSalesManAttr.CBy;
				_cDate = daoPromtionCriteriaSalesManAttr.CDate;
				_eBy = daoPromtionCriteriaSalesManAttr.EBy;
				_eDate = daoPromtionCriteriaSalesManAttr.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new PromtionCriteriaSalesManAttr record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOPromtionCriteriaSalesManAttr daoPromtionCriteriaSalesManAttr = new DAOPromtionCriteriaSalesManAttr();
			RegisterDataObject(daoPromtionCriteriaSalesManAttr);
			BeginTransaction("savenewBOPromtionCriteriaSal8491");
			try
			{
				daoPromtionCriteriaSalesManAttr.SalesManAttributeCode = _salesManAttributeCode;
				daoPromtionCriteriaSalesManAttr.SalesManAttributeNameAr = _salesManAttributeNameAr;
				daoPromtionCriteriaSalesManAttr.SalesManAttributeNameEn = _salesManAttributeNameEn;
				daoPromtionCriteriaSalesManAttr.SalesManAttributeDesc = _salesManAttributeDesc;
				daoPromtionCriteriaSalesManAttr.IsCustom = _isCustom;
				daoPromtionCriteriaSalesManAttr.IsActive = _isActive;
				daoPromtionCriteriaSalesManAttr.CanEdit = _canEdit;
				daoPromtionCriteriaSalesManAttr.CanDelete = _canDelete;
				daoPromtionCriteriaSalesManAttr.DisplayOrder = _displayOrder;
				daoPromtionCriteriaSalesManAttr.CBy = _cBy;
				daoPromtionCriteriaSalesManAttr.CDate = _cDate;
				daoPromtionCriteriaSalesManAttr.EBy = _eBy;
				daoPromtionCriteriaSalesManAttr.EDate = _eDate;
				daoPromtionCriteriaSalesManAttr.Insert();
				CommitTransaction();
				
				_salesManAttributeId = daoPromtionCriteriaSalesManAttr.SalesManAttributeId;
				_salesManAttributeCode = daoPromtionCriteriaSalesManAttr.SalesManAttributeCode;
				_salesManAttributeNameAr = daoPromtionCriteriaSalesManAttr.SalesManAttributeNameAr;
				_salesManAttributeNameEn = daoPromtionCriteriaSalesManAttr.SalesManAttributeNameEn;
				_salesManAttributeDesc = daoPromtionCriteriaSalesManAttr.SalesManAttributeDesc;
				_isCustom = daoPromtionCriteriaSalesManAttr.IsCustom;
				_isActive = daoPromtionCriteriaSalesManAttr.IsActive;
				_canEdit = daoPromtionCriteriaSalesManAttr.CanEdit;
				_canDelete = daoPromtionCriteriaSalesManAttr.CanDelete;
				_displayOrder = daoPromtionCriteriaSalesManAttr.DisplayOrder;
				_cBy = daoPromtionCriteriaSalesManAttr.CBy;
				_cDate = daoPromtionCriteriaSalesManAttr.CDate;
				_eBy = daoPromtionCriteriaSalesManAttr.EBy;
				_eDate = daoPromtionCriteriaSalesManAttr.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOPromtionCriteriaSal8491");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one PromtionCriteriaSalesManAttr record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOPromtionCriteriaSalesManAttr
		///</parameters>
		public virtual void Update()
		{
			DAOPromtionCriteriaSalesManAttr daoPromtionCriteriaSalesManAttr = new DAOPromtionCriteriaSalesManAttr();
			RegisterDataObject(daoPromtionCriteriaSalesManAttr);
			BeginTransaction("updateBOPromtionCriteriaSale8491");
			try
			{
				daoPromtionCriteriaSalesManAttr.SalesManAttributeId = _salesManAttributeId;
				daoPromtionCriteriaSalesManAttr.SalesManAttributeCode = _salesManAttributeCode;
				daoPromtionCriteriaSalesManAttr.SalesManAttributeNameAr = _salesManAttributeNameAr;
				daoPromtionCriteriaSalesManAttr.SalesManAttributeNameEn = _salesManAttributeNameEn;
				daoPromtionCriteriaSalesManAttr.SalesManAttributeDesc = _salesManAttributeDesc;
				daoPromtionCriteriaSalesManAttr.IsCustom = _isCustom;
				daoPromtionCriteriaSalesManAttr.IsActive = _isActive;
				daoPromtionCriteriaSalesManAttr.CanEdit = _canEdit;
				daoPromtionCriteriaSalesManAttr.CanDelete = _canDelete;
				daoPromtionCriteriaSalesManAttr.DisplayOrder = _displayOrder;
				daoPromtionCriteriaSalesManAttr.CBy = _cBy;
				daoPromtionCriteriaSalesManAttr.CDate = _cDate;
				daoPromtionCriteriaSalesManAttr.EBy = _eBy;
				daoPromtionCriteriaSalesManAttr.EDate = _eDate;
				daoPromtionCriteriaSalesManAttr.Update();
				CommitTransaction();
				
				_salesManAttributeId = daoPromtionCriteriaSalesManAttr.SalesManAttributeId;
				_salesManAttributeCode = daoPromtionCriteriaSalesManAttr.SalesManAttributeCode;
				_salesManAttributeNameAr = daoPromtionCriteriaSalesManAttr.SalesManAttributeNameAr;
				_salesManAttributeNameEn = daoPromtionCriteriaSalesManAttr.SalesManAttributeNameEn;
				_salesManAttributeDesc = daoPromtionCriteriaSalesManAttr.SalesManAttributeDesc;
				_isCustom = daoPromtionCriteriaSalesManAttr.IsCustom;
				_isActive = daoPromtionCriteriaSalesManAttr.IsActive;
				_canEdit = daoPromtionCriteriaSalesManAttr.CanEdit;
				_canDelete = daoPromtionCriteriaSalesManAttr.CanDelete;
				_displayOrder = daoPromtionCriteriaSalesManAttr.DisplayOrder;
				_cBy = daoPromtionCriteriaSalesManAttr.CBy;
				_cDate = daoPromtionCriteriaSalesManAttr.CDate;
				_eBy = daoPromtionCriteriaSalesManAttr.EBy;
				_eDate = daoPromtionCriteriaSalesManAttr.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOPromtionCriteriaSale8491");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one PromtionCriteriaSalesManAttr record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOPromtionCriteriaSalesManAttr daoPromtionCriteriaSalesManAttr = new DAOPromtionCriteriaSalesManAttr();
			RegisterDataObject(daoPromtionCriteriaSalesManAttr);
			BeginTransaction("deleteBOPromtionCriteriaSale3715");
			try
			{
				daoPromtionCriteriaSalesManAttr.SalesManAttributeId = _salesManAttributeId;
				daoPromtionCriteriaSalesManAttr.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOPromtionCriteriaSale3715");
				throw;
			}
		}
		
		///<Summary>
		///PromtionCriteriaSalesManAttrCollection
		///This method returns the collection of BOPromtionCriteriaSalesManAttr objects
		///</Summary>
		///<returns>
		///List[BOPromtionCriteriaSalesManAttr]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOPromtionCriteriaSalesManAttr> PromtionCriteriaSalesManAttrCollection()
		{
			try
			{
				IList<BOPromtionCriteriaSalesManAttr> boPromtionCriteriaSalesManAttrCollection = new List<BOPromtionCriteriaSalesManAttr>();
				IList<DAOPromtionCriteriaSalesManAttr> daoPromtionCriteriaSalesManAttrCollection = DAOPromtionCriteriaSalesManAttr.SelectAll();
			
				foreach(DAOPromtionCriteriaSalesManAttr daoPromtionCriteriaSalesManAttr in daoPromtionCriteriaSalesManAttrCollection)
					boPromtionCriteriaSalesManAttrCollection.Add(new BOPromtionCriteriaSalesManAttr(daoPromtionCriteriaSalesManAttr));
			
				return boPromtionCriteriaSalesManAttrCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromtionCriteriaSalesManAttrCollectionCount
		///This method returns the collection count of BOPromtionCriteriaSalesManAttr objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 PromtionCriteriaSalesManAttrCollectionCount()
		{
			try
			{
				Int32 objCount = DAOPromtionCriteriaSalesManAttr.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOPromtionCriteriaSalesManAttr>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOPromtionCriteriaSalesManAttr.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromtionCriteriaSalesManAttrCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOPromtionCriteriaSalesManAttr objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boPromtionCriteriaSalesManAttrCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOPromtionCriteriaSalesManAttr> daoPromtionCriteriaSalesManAttrCollection = DAOPromtionCriteriaSalesManAttr.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOPromtionCriteriaSalesManAttr resdaoPromtionCriteriaSalesManAttr in daoPromtionCriteriaSalesManAttrCollection)
					boPromtionCriteriaSalesManAttrCollection.Add((T)(object)new BOPromtionCriteriaSalesManAttr(resdaoPromtionCriteriaSalesManAttr));
			
				return boPromtionCriteriaSalesManAttrCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromtionCriteriaSalesManAttrCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOPromtionCriteriaSalesManAttr objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOPromtionCriteriaSalesManAttr.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? SalesManAttributeId
		{
			get
			{
				 return _salesManAttributeId;
			}
			set
			{
				_salesManAttributeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string SalesManAttributeCode
		{
			get
			{
				 return _salesManAttributeCode;
			}
			set
			{
				_salesManAttributeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string SalesManAttributeNameAr
		{
			get
			{
				 return _salesManAttributeNameAr;
			}
			set
			{
				_salesManAttributeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string SalesManAttributeNameEn
		{
			get
			{
				 return _salesManAttributeNameEn;
			}
			set
			{
				_salesManAttributeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string SalesManAttributeDesc
		{
			get
			{
				 return _salesManAttributeDesc;
			}
			set
			{
				_salesManAttributeDesc = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsCustom
		{
			get
			{
				 return _isCustom;
			}
			set
			{
				_isCustom = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanEdit
		{
			get
			{
				 return _canEdit;
			}
			set
			{
				_canEdit = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanDelete
		{
			get
			{
				 return _canDelete;
			}
			set
			{
				_canDelete = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? DisplayOrder
		{
			get
			{
				 return _displayOrder;
			}
			set
			{
				_displayOrder = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? CBy
		{
			get
			{
				 return _cBy;
			}
			set
			{
				_cBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CDate
		{
			get
			{
				 return _cDate;
			}
			set
			{
				_cDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? EBy
		{
			get
			{
				 return _eBy;
			}
			set
			{
				_eBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? EDate
		{
			get
			{
				 return _eDate;
			}
			set
			{
				_eDate = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
