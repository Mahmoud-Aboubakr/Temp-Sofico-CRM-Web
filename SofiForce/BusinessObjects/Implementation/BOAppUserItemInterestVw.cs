/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAppUserItemInterestVw.
	///</Summary>
	public partial class BOAppUserItemInterestVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _userId;
		protected Int32? _itemId;
		protected string _itemCode;
		protected string _itemNameEn;
		protected string _itemNameAr;
		protected Int64? _id;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAppUserItemInterestVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAppUserItemInterestVw
		///</parameters>
		protected internal BOAppUserItemInterestVw(DAOAppUserItemInterestVw daoAppUserItemInterestVw)
		{
			try
			{
				_userId = daoAppUserItemInterestVw.UserId;
				_itemId = daoAppUserItemInterestVw.ItemId;
				_itemCode = daoAppUserItemInterestVw.ItemCode;
				_itemNameEn = daoAppUserItemInterestVw.ItemNameEn;
				_itemNameAr = daoAppUserItemInterestVw.ItemNameAr;
				_id = daoAppUserItemInterestVw.Id;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///AppUserItemInterestVwCollection
		///This method returns the collection of BOAppUserItemInterestVw objects
		///</Summary>
		///<returns>
		///List[BOAppUserItemInterestVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOAppUserItemInterestVw> AppUserItemInterestVwCollection()
		{
			try
			{
				IList<BOAppUserItemInterestVw> boAppUserItemInterestVwCollection = new List<BOAppUserItemInterestVw>();
				IList<DAOAppUserItemInterestVw> daoAppUserItemInterestVwCollection = DAOAppUserItemInterestVw.SelectAll();
			
				foreach(DAOAppUserItemInterestVw daoAppUserItemInterestVw in daoAppUserItemInterestVwCollection)
					boAppUserItemInterestVwCollection.Add(new BOAppUserItemInterestVw(daoAppUserItemInterestVw));
			
				return boAppUserItemInterestVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserItemInterestVwCollectionCount
		///This method returns the collection count of BOAppUserItemInterestVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AppUserItemInterestVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOAppUserItemInterestVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOAppUserItemInterestVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOAppUserItemInterestVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserItemInterestVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOAppUserItemInterestVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boAppUserItemInterestVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOAppUserItemInterestVw> daoAppUserItemInterestVwCollection = DAOAppUserItemInterestVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOAppUserItemInterestVw resdaoAppUserItemInterestVw in daoAppUserItemInterestVwCollection)
					boAppUserItemInterestVwCollection.Add((T)(object)new BOAppUserItemInterestVw(resdaoAppUserItemInterestVw));
			
				return boAppUserItemInterestVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserItemInterestVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOAppUserItemInterestVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOAppUserItemInterestVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? UserId
		{
			get
			{
				 return _userId;
			}
			set
			{
				_userId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemId
		{
			get
			{
				 return _itemId;
			}
			set
			{
				_itemId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemCode
		{
			get
			{
				 return _itemCode;
			}
			set
			{
				_itemCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameEn
		{
			get
			{
				 return _itemNameEn;
			}
			set
			{
				_itemNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameAr
		{
			get
			{
				 return _itemNameAr;
			}
			set
			{
				_itemNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual Int64? Id
		{
			get
			{
				 return _id;
			}
			set
			{
				_id = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
