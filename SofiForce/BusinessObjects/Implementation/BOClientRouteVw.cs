/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOClientRouteVw.
	///</Summary>
	public partial class BOClientRouteVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _clientRouteId;
		protected Int32? _routeTypeId;
		protected Int32? _routeId;
		protected Int32? _clientId;
		protected bool? _day1;
		protected bool? _day2;
		protected bool? _day3;
		protected bool? _day4;
		protected bool? _day5;
		protected bool? _day6;
		protected bool? _day7;
		protected string _routeCode;
		protected string _routeNameEn;
		protected string _routeNameAr;
		protected string _routeTypeCode;
		protected string _routeTypeNameEn;
		protected string _routeTypeNameAr;
		protected string _clientCode;
		protected string _clientNameAr;
		protected string _clientNameEn;
		protected string _branchCode;
		protected string _branchNameAr;
		protected string _branchNameEn;
		protected Int32? _branchId;
		protected bool? _isActive;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOClientRouteVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOClientRouteVw
		///</parameters>
		protected internal BOClientRouteVw(DAOClientRouteVw daoClientRouteVw)
		{
			try
			{
				_clientRouteId = daoClientRouteVw.ClientRouteId;
				_routeTypeId = daoClientRouteVw.RouteTypeId;
				_routeId = daoClientRouteVw.RouteId;
				_clientId = daoClientRouteVw.ClientId;
				_day1 = daoClientRouteVw.Day1;
				_day2 = daoClientRouteVw.Day2;
				_day3 = daoClientRouteVw.Day3;
				_day4 = daoClientRouteVw.Day4;
				_day5 = daoClientRouteVw.Day5;
				_day6 = daoClientRouteVw.Day6;
				_day7 = daoClientRouteVw.Day7;
				_routeCode = daoClientRouteVw.RouteCode;
				_routeNameEn = daoClientRouteVw.RouteNameEn;
				_routeNameAr = daoClientRouteVw.RouteNameAr;
				_routeTypeCode = daoClientRouteVw.RouteTypeCode;
				_routeTypeNameEn = daoClientRouteVw.RouteTypeNameEn;
				_routeTypeNameAr = daoClientRouteVw.RouteTypeNameAr;
				_clientCode = daoClientRouteVw.ClientCode;
				_clientNameAr = daoClientRouteVw.ClientNameAr;
				_clientNameEn = daoClientRouteVw.ClientNameEn;
				_branchCode = daoClientRouteVw.BranchCode;
				_branchNameAr = daoClientRouteVw.BranchNameAr;
				_branchNameEn = daoClientRouteVw.BranchNameEn;
				_branchId = daoClientRouteVw.BranchId;
				_isActive = daoClientRouteVw.IsActive;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ClientRouteVwCollection
		///This method returns the collection of BOClientRouteVw objects
		///</Summary>
		///<returns>
		///List[BOClientRouteVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOClientRouteVw> ClientRouteVwCollection()
		{
			try
			{
				IList<BOClientRouteVw> boClientRouteVwCollection = new List<BOClientRouteVw>();
				IList<DAOClientRouteVw> daoClientRouteVwCollection = DAOClientRouteVw.SelectAll();
			
				foreach(DAOClientRouteVw daoClientRouteVw in daoClientRouteVwCollection)
					boClientRouteVwCollection.Add(new BOClientRouteVw(daoClientRouteVw));
			
				return boClientRouteVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientRouteVwCollectionCount
		///This method returns the collection count of BOClientRouteVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ClientRouteVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOClientRouteVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOClientRouteVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOClientRouteVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientRouteVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOClientRouteVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boClientRouteVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOClientRouteVw> daoClientRouteVwCollection = DAOClientRouteVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOClientRouteVw resdaoClientRouteVw in daoClientRouteVwCollection)
					boClientRouteVwCollection.Add((T)(object)new BOClientRouteVw(resdaoClientRouteVw));
			
				return boClientRouteVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientRouteVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOClientRouteVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOClientRouteVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? ClientRouteId
		{
			get
			{
				 return _clientRouteId;
			}
			set
			{
				_clientRouteId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RouteTypeId
		{
			get
			{
				 return _routeTypeId;
			}
			set
			{
				_routeTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RouteId
		{
			get
			{
				 return _routeId;
			}
			set
			{
				_routeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientId
		{
			get
			{
				 return _clientId;
			}
			set
			{
				_clientId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Day1
		{
			get
			{
				 return _day1;
			}
			set
			{
				_day1 = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Day2
		{
			get
			{
				 return _day2;
			}
			set
			{
				_day2 = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Day3
		{
			get
			{
				 return _day3;
			}
			set
			{
				_day3 = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Day4
		{
			get
			{
				 return _day4;
			}
			set
			{
				_day4 = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Day5
		{
			get
			{
				 return _day5;
			}
			set
			{
				_day5 = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Day6
		{
			get
			{
				 return _day6;
			}
			set
			{
				_day6 = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Day7
		{
			get
			{
				 return _day7;
			}
			set
			{
				_day7 = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteCode
		{
			get
			{
				 return _routeCode;
			}
			set
			{
				_routeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteNameEn
		{
			get
			{
				 return _routeNameEn;
			}
			set
			{
				_routeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteNameAr
		{
			get
			{
				 return _routeNameAr;
			}
			set
			{
				_routeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteTypeCode
		{
			get
			{
				 return _routeTypeCode;
			}
			set
			{
				_routeTypeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteTypeNameEn
		{
			get
			{
				 return _routeTypeNameEn;
			}
			set
			{
				_routeTypeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string RouteTypeNameAr
		{
			get
			{
				 return _routeTypeNameAr;
			}
			set
			{
				_routeTypeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientCode
		{
			get
			{
				 return _clientCode;
			}
			set
			{
				_clientCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameAr
		{
			get
			{
				 return _clientNameAr;
			}
			set
			{
				_clientNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameEn
		{
			get
			{
				 return _clientNameEn;
			}
			set
			{
				_clientNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
