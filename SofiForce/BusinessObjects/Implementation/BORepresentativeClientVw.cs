/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BORepresentativeClientVw.
	///</Summary>
	public partial class BORepresentativeClientVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _clientId;
		protected Int32? _representativeId;
		protected Int32? _representativeUserId;
		protected Int32? _supervisorUserId;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BORepresentativeClientVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAORepresentativeClientVw
		///</parameters>
		protected internal BORepresentativeClientVw(DAORepresentativeClientVw daoRepresentativeClientVw)
		{
			try
			{
				_clientId = daoRepresentativeClientVw.ClientId;
				_representativeId = daoRepresentativeClientVw.RepresentativeId;
				_representativeUserId = daoRepresentativeClientVw.RepresentativeUserId;
				_supervisorUserId = daoRepresentativeClientVw.SupervisorUserId;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///RepresentativeClientVwCollection
		///This method returns the collection of BORepresentativeClientVw objects
		///</Summary>
		///<returns>
		///List[BORepresentativeClientVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BORepresentativeClientVw> RepresentativeClientVwCollection()
		{
			try
			{
				IList<BORepresentativeClientVw> boRepresentativeClientVwCollection = new List<BORepresentativeClientVw>();
				IList<DAORepresentativeClientVw> daoRepresentativeClientVwCollection = DAORepresentativeClientVw.SelectAll();
			
				foreach(DAORepresentativeClientVw daoRepresentativeClientVw in daoRepresentativeClientVwCollection)
					boRepresentativeClientVwCollection.Add(new BORepresentativeClientVw(daoRepresentativeClientVw));
			
				return boRepresentativeClientVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///RepresentativeClientVwCollectionCount
		///This method returns the collection count of BORepresentativeClientVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 RepresentativeClientVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAORepresentativeClientVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BORepresentativeClientVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAORepresentativeClientVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///RepresentativeClientVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BORepresentativeClientVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boRepresentativeClientVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAORepresentativeClientVw> daoRepresentativeClientVwCollection = DAORepresentativeClientVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAORepresentativeClientVw resdaoRepresentativeClientVw in daoRepresentativeClientVwCollection)
					boRepresentativeClientVwCollection.Add((T)(object)new BORepresentativeClientVw(resdaoRepresentativeClientVw));
			
				return boRepresentativeClientVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///RepresentativeClientVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BORepresentativeClientVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAORepresentativeClientVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? ClientId
		{
			get
			{
				 return _clientId;
			}
			set
			{
				_clientId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RepresentativeId
		{
			get
			{
				 return _representativeId;
			}
			set
			{
				_representativeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RepresentativeUserId
		{
			get
			{
				 return _representativeUserId;
			}
			set
			{
				_representativeUserId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? SupervisorUserId
		{
			get
			{
				 return _supervisorUserId;
			}
			set
			{
				_supervisorUserId = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
