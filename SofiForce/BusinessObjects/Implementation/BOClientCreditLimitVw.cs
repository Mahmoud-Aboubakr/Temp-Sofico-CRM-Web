/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 8/19/2023 12:29:47 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOClientCreditLimitVw.
	///</Summary>
	public partial class BOClientCreditLimitVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int64? _limitId;
		protected Int32? _clientId;
		protected Int32? _limitYear;
		protected Int32? _limitMonth;
		protected decimal? _limitValue;
		protected string _clientCode;
		protected string _clientNameAr;
		protected string _clientNameEn;
		protected Int32? _branchId;
		protected string _branchNameEn;
		protected string _branchNameAr;
		protected string _branchCode;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOClientCreditLimitVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOClientCreditLimitVw
		///</parameters>
		protected internal BOClientCreditLimitVw(DAOClientCreditLimitVw daoClientCreditLimitVw)
		{
			try
			{
				_limitId = daoClientCreditLimitVw.LimitId;
				_clientId = daoClientCreditLimitVw.ClientId;
				_limitYear = daoClientCreditLimitVw.LimitYear;
				_limitMonth = daoClientCreditLimitVw.LimitMonth;
				_limitValue = daoClientCreditLimitVw.LimitValue;
				_clientCode = daoClientCreditLimitVw.ClientCode;
				_clientNameAr = daoClientCreditLimitVw.ClientNameAr;
				_clientNameEn = daoClientCreditLimitVw.ClientNameEn;
				_branchId = daoClientCreditLimitVw.BranchId;
				_branchNameEn = daoClientCreditLimitVw.BranchNameEn;
				_branchNameAr = daoClientCreditLimitVw.BranchNameAr;
				_branchCode = daoClientCreditLimitVw.BranchCode;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ClientCreditLimitVwCollection
		///This method returns the collection of BOClientCreditLimitVw objects
		///</Summary>
		///<returns>
		///List[BOClientCreditLimitVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOClientCreditLimitVw> ClientCreditLimitVwCollection()
		{
			try
			{
				IList<BOClientCreditLimitVw> boClientCreditLimitVwCollection = new List<BOClientCreditLimitVw>();
				IList<DAOClientCreditLimitVw> daoClientCreditLimitVwCollection = DAOClientCreditLimitVw.SelectAll();
			
				foreach(DAOClientCreditLimitVw daoClientCreditLimitVw in daoClientCreditLimitVwCollection)
					boClientCreditLimitVwCollection.Add(new BOClientCreditLimitVw(daoClientCreditLimitVw));
			
				return boClientCreditLimitVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientCreditLimitVwCollectionCount
		///This method returns the collection count of BOClientCreditLimitVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ClientCreditLimitVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOClientCreditLimitVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOClientCreditLimitVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOClientCreditLimitVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientCreditLimitVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOClientCreditLimitVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boClientCreditLimitVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOClientCreditLimitVw> daoClientCreditLimitVwCollection = DAOClientCreditLimitVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOClientCreditLimitVw resdaoClientCreditLimitVw in daoClientCreditLimitVwCollection)
					boClientCreditLimitVwCollection.Add((T)(object)new BOClientCreditLimitVw(resdaoClientCreditLimitVw));
			
				return boClientCreditLimitVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientCreditLimitVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOClientCreditLimitVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOClientCreditLimitVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int64? LimitId
		{
			get
			{
				 return _limitId;
			}
			set
			{
				_limitId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientId
		{
			get
			{
				 return _clientId;
			}
			set
			{
				_clientId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? LimitYear
		{
			get
			{
				 return _limitYear;
			}
			set
			{
				_limitYear = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? LimitMonth
		{
			get
			{
				 return _limitMonth;
			}
			set
			{
				_limitMonth = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? LimitValue
		{
			get
			{
				 return _limitValue;
			}
			set
			{
				_limitValue = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientCode
		{
			get
			{
				 return _clientCode;
			}
			set
			{
				_clientCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameAr
		{
			get
			{
				 return _clientNameAr;
			}
			set
			{
				_clientNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameEn
		{
			get
			{
				 return _clientNameEn;
			}
			set
			{
				_clientNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
