/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOItemTotalVw.
	///</Summary>
	public partial class BOItemTotalVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _itemId;
		protected Int32? _storeId;
		protected Int32? _quantity;
		protected Int32? _acceptDays;
		protected string _itemCode;
		protected string _itemNameEn;
		protected string _itemNameAr;
		protected string _vendorNameEn;
		protected string _vendorNameAr;
		protected Int32? _vendorId;
		protected Int32? _available;
		protected bool? _hasPromotion;
		protected bool? _isNewAdded;
		protected bool? _isNewStocked;
		protected Int32? _unitId;
		protected bool? _isTaxable;
		protected decimal? _publicPrice;
		protected decimal? _clientPrice;
		protected decimal? _discount;
		protected Int32? _itemGroupId;
		protected bool? _isLocal;
		protected bool? _isActive;
		protected Int32? _displayOrder;
		protected string _color;
		protected string _icon;
		protected Int32? _quota;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOItemTotalVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOItemTotalVw
		///</parameters>
		protected internal BOItemTotalVw(DAOItemTotalVw daoItemTotalVw)
		{
			try
			{
				_itemId = daoItemTotalVw.ItemId;
				_storeId = daoItemTotalVw.StoreId;
				_quantity = daoItemTotalVw.Quantity;
				_acceptDays = daoItemTotalVw.AcceptDays;
				_itemCode = daoItemTotalVw.ItemCode;
				_itemNameEn = daoItemTotalVw.ItemNameEn;
				_itemNameAr = daoItemTotalVw.ItemNameAr;
				_vendorNameEn = daoItemTotalVw.VendorNameEn;
				_vendorNameAr = daoItemTotalVw.VendorNameAr;
				_vendorId = daoItemTotalVw.VendorId;
				_available = daoItemTotalVw.Available;
				_hasPromotion = daoItemTotalVw.HasPromotion;
				_isNewAdded = daoItemTotalVw.IsNewAdded;
				_isNewStocked = daoItemTotalVw.IsNewStocked;
				_unitId = daoItemTotalVw.UnitId;
				_isTaxable = daoItemTotalVw.IsTaxable;
				_publicPrice = daoItemTotalVw.PublicPrice;
				_clientPrice = daoItemTotalVw.ClientPrice;
				_discount = daoItemTotalVw.Discount;
				_itemGroupId = daoItemTotalVw.ItemGroupId;
				_isLocal = daoItemTotalVw.IsLocal;
				_isActive = daoItemTotalVw.IsActive;
				_displayOrder = daoItemTotalVw.DisplayOrder;
				_color = daoItemTotalVw.Color;
				_icon = daoItemTotalVw.Icon;
				_quota = daoItemTotalVw.Quota;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ItemTotalVwCollection
		///This method returns the collection of BOItemTotalVw objects
		///</Summary>
		///<returns>
		///List[BOItemTotalVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOItemTotalVw> ItemTotalVwCollection()
		{
			try
			{
				IList<BOItemTotalVw> boItemTotalVwCollection = new List<BOItemTotalVw>();
				IList<DAOItemTotalVw> daoItemTotalVwCollection = DAOItemTotalVw.SelectAll();
			
				foreach(DAOItemTotalVw daoItemTotalVw in daoItemTotalVwCollection)
					boItemTotalVwCollection.Add(new BOItemTotalVw(daoItemTotalVw));
			
				return boItemTotalVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemTotalVwCollectionCount
		///This method returns the collection count of BOItemTotalVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ItemTotalVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOItemTotalVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOItemTotalVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOItemTotalVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemTotalVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOItemTotalVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boItemTotalVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOItemTotalVw> daoItemTotalVwCollection = DAOItemTotalVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOItemTotalVw resdaoItemTotalVw in daoItemTotalVwCollection)
					boItemTotalVwCollection.Add((T)(object)new BOItemTotalVw(resdaoItemTotalVw));
			
				return boItemTotalVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ItemTotalVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOItemTotalVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOItemTotalVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? ItemId
		{
			get
			{
				 return _itemId;
			}
			set
			{
				_itemId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? StoreId
		{
			get
			{
				 return _storeId;
			}
			set
			{
				_storeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Quantity
		{
			get
			{
				 return _quantity;
			}
			set
			{
				_quantity = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? AcceptDays
		{
			get
			{
				 return _acceptDays;
			}
			set
			{
				_acceptDays = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemCode
		{
			get
			{
				 return _itemCode;
			}
			set
			{
				_itemCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameEn
		{
			get
			{
				 return _itemNameEn;
			}
			set
			{
				_itemNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ItemNameAr
		{
			get
			{
				 return _itemNameAr;
			}
			set
			{
				_itemNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorNameEn
		{
			get
			{
				 return _vendorNameEn;
			}
			set
			{
				_vendorNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string VendorNameAr
		{
			get
			{
				 return _vendorNameAr;
			}
			set
			{
				_vendorNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? VendorId
		{
			get
			{
				 return _vendorId;
			}
			set
			{
				_vendorId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Available
		{
			get
			{
				 return _available;
			}
			set
			{
				_available = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? HasPromotion
		{
			get
			{
				 return _hasPromotion;
			}
			set
			{
				_hasPromotion = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsNewAdded
		{
			get
			{
				 return _isNewAdded;
			}
			set
			{
				_isNewAdded = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsNewStocked
		{
			get
			{
				 return _isNewStocked;
			}
			set
			{
				_isNewStocked = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UnitId
		{
			get
			{
				 return _unitId;
			}
			set
			{
				_unitId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsTaxable
		{
			get
			{
				 return _isTaxable;
			}
			set
			{
				_isTaxable = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? PublicPrice
		{
			get
			{
				 return _publicPrice;
			}
			set
			{
				_publicPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? ClientPrice
		{
			get
			{
				 return _clientPrice;
			}
			set
			{
				_clientPrice = value;
				_isDirty = true;
			}
		}
		
		public virtual decimal? Discount
		{
			get
			{
				 return _discount;
			}
			set
			{
				_discount = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemGroupId
		{
			get
			{
				 return _itemGroupId;
			}
			set
			{
				_itemGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsLocal
		{
			get
			{
				 return _isLocal;
			}
			set
			{
				_isLocal = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? DisplayOrder
		{
			get
			{
				 return _displayOrder;
			}
			set
			{
				_displayOrder = value;
				_isDirty = true;
			}
		}
		
		public virtual string Color
		{
			get
			{
				 return _color;
			}
			set
			{
				_color = value;
				_isDirty = true;
			}
		}
		
		public virtual string Icon
		{
			get
			{
				 return _icon;
			}
			set
			{
				_icon = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Quota
		{
			get
			{
				 return _quota;
			}
			set
			{
				_quota = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
