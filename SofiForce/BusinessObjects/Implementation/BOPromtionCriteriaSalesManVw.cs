/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOPromtionCriteriaSalesManVw.
	///</Summary>
	public partial class BOPromtionCriteriaSalesManVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _salesManCriteriaId;
		protected Int32? _promotionId;
		protected Int32? _salesManAttributeId;
		protected string _valueFrom;
		protected bool? _excluded;
		protected string _salesManAttributeNameEn;
		protected string _salesManAttributeNameAr;
		protected string _salesManAttributeCode;
		protected DateTime? _validFrom;
		protected DateTime? _validTo;
		protected bool? _expr1;
		protected Int32? _promotionTypeId;
		protected Int32? _priority;
		protected Int32? _repeatTypeId;
		protected Int32? _promotionCategoryId;
		protected bool? _isApproved;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOPromtionCriteriaSalesManVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOPromtionCriteriaSalesManVw
		///</parameters>
		protected internal BOPromtionCriteriaSalesManVw(DAOPromtionCriteriaSalesManVw daoPromtionCriteriaSalesManVw)
		{
			try
			{
				_salesManCriteriaId = daoPromtionCriteriaSalesManVw.SalesManCriteriaId;
				_promotionId = daoPromtionCriteriaSalesManVw.PromotionId;
				_salesManAttributeId = daoPromtionCriteriaSalesManVw.SalesManAttributeId;
				_valueFrom = daoPromtionCriteriaSalesManVw.ValueFrom;
				_excluded = daoPromtionCriteriaSalesManVw.Excluded;
				_salesManAttributeNameEn = daoPromtionCriteriaSalesManVw.SalesManAttributeNameEn;
				_salesManAttributeNameAr = daoPromtionCriteriaSalesManVw.SalesManAttributeNameAr;
				_salesManAttributeCode = daoPromtionCriteriaSalesManVw.SalesManAttributeCode;
				_validFrom = daoPromtionCriteriaSalesManVw.ValidFrom;
				_validTo = daoPromtionCriteriaSalesManVw.ValidTo;
				_expr1 = daoPromtionCriteriaSalesManVw.Expr1;
				_promotionTypeId = daoPromtionCriteriaSalesManVw.PromotionTypeId;
				_priority = daoPromtionCriteriaSalesManVw.Priority;
				_repeatTypeId = daoPromtionCriteriaSalesManVw.RepeatTypeId;
				_promotionCategoryId = daoPromtionCriteriaSalesManVw.PromotionCategoryId;
				_isApproved = daoPromtionCriteriaSalesManVw.IsApproved;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///PromtionCriteriaSalesManVwCollection
		///This method returns the collection of BOPromtionCriteriaSalesManVw objects
		///</Summary>
		///<returns>
		///List[BOPromtionCriteriaSalesManVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOPromtionCriteriaSalesManVw> PromtionCriteriaSalesManVwCollection()
		{
			try
			{
				IList<BOPromtionCriteriaSalesManVw> boPromtionCriteriaSalesManVwCollection = new List<BOPromtionCriteriaSalesManVw>();
				IList<DAOPromtionCriteriaSalesManVw> daoPromtionCriteriaSalesManVwCollection = DAOPromtionCriteriaSalesManVw.SelectAll();
			
				foreach(DAOPromtionCriteriaSalesManVw daoPromtionCriteriaSalesManVw in daoPromtionCriteriaSalesManVwCollection)
					boPromtionCriteriaSalesManVwCollection.Add(new BOPromtionCriteriaSalesManVw(daoPromtionCriteriaSalesManVw));
			
				return boPromtionCriteriaSalesManVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromtionCriteriaSalesManVwCollectionCount
		///This method returns the collection count of BOPromtionCriteriaSalesManVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 PromtionCriteriaSalesManVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOPromtionCriteriaSalesManVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOPromtionCriteriaSalesManVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOPromtionCriteriaSalesManVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromtionCriteriaSalesManVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOPromtionCriteriaSalesManVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boPromtionCriteriaSalesManVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOPromtionCriteriaSalesManVw> daoPromtionCriteriaSalesManVwCollection = DAOPromtionCriteriaSalesManVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOPromtionCriteriaSalesManVw resdaoPromtionCriteriaSalesManVw in daoPromtionCriteriaSalesManVwCollection)
					boPromtionCriteriaSalesManVwCollection.Add((T)(object)new BOPromtionCriteriaSalesManVw(resdaoPromtionCriteriaSalesManVw));
			
				return boPromtionCriteriaSalesManVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromtionCriteriaSalesManVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOPromtionCriteriaSalesManVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOPromtionCriteriaSalesManVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? SalesManCriteriaId
		{
			get
			{
				 return _salesManCriteriaId;
			}
			set
			{
				_salesManCriteriaId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PromotionId
		{
			get
			{
				 return _promotionId;
			}
			set
			{
				_promotionId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? SalesManAttributeId
		{
			get
			{
				 return _salesManAttributeId;
			}
			set
			{
				_salesManAttributeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ValueFrom
		{
			get
			{
				 return _valueFrom;
			}
			set
			{
				_valueFrom = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Excluded
		{
			get
			{
				 return _excluded;
			}
			set
			{
				_excluded = value;
				_isDirty = true;
			}
		}
		
		public virtual string SalesManAttributeNameEn
		{
			get
			{
				 return _salesManAttributeNameEn;
			}
			set
			{
				_salesManAttributeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string SalesManAttributeNameAr
		{
			get
			{
				 return _salesManAttributeNameAr;
			}
			set
			{
				_salesManAttributeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string SalesManAttributeCode
		{
			get
			{
				 return _salesManAttributeCode;
			}
			set
			{
				_salesManAttributeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? ValidFrom
		{
			get
			{
				 return _validFrom;
			}
			set
			{
				_validFrom = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? ValidTo
		{
			get
			{
				 return _validTo;
			}
			set
			{
				_validTo = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Expr1
		{
			get
			{
				 return _expr1;
			}
			set
			{
				_expr1 = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PromotionTypeId
		{
			get
			{
				 return _promotionTypeId;
			}
			set
			{
				_promotionTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Priority
		{
			get
			{
				 return _priority;
			}
			set
			{
				_priority = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RepeatTypeId
		{
			get
			{
				 return _repeatTypeId;
			}
			set
			{
				_repeatTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PromotionCategoryId
		{
			get
			{
				 return _promotionCategoryId;
			}
			set
			{
				_promotionCategoryId = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsApproved
		{
			get
			{
				 return _isApproved;
			}
			set
			{
				_isApproved = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
