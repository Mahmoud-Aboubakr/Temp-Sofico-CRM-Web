/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOPromtionCriteriaClient.
	///</Summary>
	public partial class BOPromtionCriteriaClient : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _clientCriteriaId;
		protected Int32? _promotionId;
		protected Int32? _clientAttributeId;
		protected string _valueFrom;
		protected bool? _excluded;
		protected bool? _isActive;
		protected Int32? _cBy;
		protected DateTime? _cDate;
		protected Int32? _eBy;
		protected DateTime? _eDate;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOPromtionCriteriaClient()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 clientCriteriaId
		///</parameters>
		public BOPromtionCriteriaClient(Int32 clientCriteriaId)
		{
			try
			{
				DAOPromtionCriteriaClient daoPromtionCriteriaClient = DAOPromtionCriteriaClient.SelectOne(clientCriteriaId);
				_clientCriteriaId = daoPromtionCriteriaClient.ClientCriteriaId;
				_promotionId = daoPromtionCriteriaClient.PromotionId;
				_clientAttributeId = daoPromtionCriteriaClient.ClientAttributeId;
				_valueFrom = daoPromtionCriteriaClient.ValueFrom;
				_excluded = daoPromtionCriteriaClient.Excluded;
				_isActive = daoPromtionCriteriaClient.IsActive;
				_cBy = daoPromtionCriteriaClient.CBy;
				_cDate = daoPromtionCriteriaClient.CDate;
				_eBy = daoPromtionCriteriaClient.EBy;
				_eDate = daoPromtionCriteriaClient.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///Constructor using unique field(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///ValueFrom
		///</parameters>
		public BOPromtionCriteriaClient(Int32 promotionId, Int32 clientAttributeId, string valueFrom)
		{
			try
			{
				DAOPromtionCriteriaClient daoPromtionCriteriaClient = DAOPromtionCriteriaClient.SelectOneByUniqueFields(promotionId, clientAttributeId, valueFrom);
				_clientCriteriaId = daoPromtionCriteriaClient.ClientCriteriaId;
				_promotionId = daoPromtionCriteriaClient.PromotionId;
				_clientAttributeId = daoPromtionCriteriaClient.ClientAttributeId;
				_valueFrom = daoPromtionCriteriaClient.ValueFrom;
				_excluded = daoPromtionCriteriaClient.Excluded;
				_isActive = daoPromtionCriteriaClient.IsActive;
				_cBy = daoPromtionCriteriaClient.CBy;
				_cDate = daoPromtionCriteriaClient.CDate;
				_eBy = daoPromtionCriteriaClient.EBy;
				_eDate = daoPromtionCriteriaClient.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOPromtionCriteriaClient
		///</parameters>
		protected internal BOPromtionCriteriaClient(DAOPromtionCriteriaClient daoPromtionCriteriaClient)
		{
			try
			{
				_clientCriteriaId = daoPromtionCriteriaClient.ClientCriteriaId;
				_promotionId = daoPromtionCriteriaClient.PromotionId;
				_clientAttributeId = daoPromtionCriteriaClient.ClientAttributeId;
				_valueFrom = daoPromtionCriteriaClient.ValueFrom;
				_excluded = daoPromtionCriteriaClient.Excluded;
				_isActive = daoPromtionCriteriaClient.IsActive;
				_cBy = daoPromtionCriteriaClient.CBy;
				_cDate = daoPromtionCriteriaClient.CDate;
				_eBy = daoPromtionCriteriaClient.EBy;
				_eDate = daoPromtionCriteriaClient.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new PromtionCriteriaClient record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOPromtionCriteriaClient daoPromtionCriteriaClient = new DAOPromtionCriteriaClient();
			RegisterDataObject(daoPromtionCriteriaClient);
			BeginTransaction("savenewBOPromtionCriteriaClient");
			try
			{
				daoPromtionCriteriaClient.PromotionId = _promotionId;
				daoPromtionCriteriaClient.ClientAttributeId = _clientAttributeId;
				daoPromtionCriteriaClient.ValueFrom = _valueFrom;
				daoPromtionCriteriaClient.Excluded = _excluded;
				daoPromtionCriteriaClient.IsActive = _isActive;
				daoPromtionCriteriaClient.CBy = _cBy;
				daoPromtionCriteriaClient.CDate = _cDate;
				daoPromtionCriteriaClient.EBy = _eBy;
				daoPromtionCriteriaClient.EDate = _eDate;
				daoPromtionCriteriaClient.Insert();
				CommitTransaction();
				
				_clientCriteriaId = daoPromtionCriteriaClient.ClientCriteriaId;
				_promotionId = daoPromtionCriteriaClient.PromotionId;
				_clientAttributeId = daoPromtionCriteriaClient.ClientAttributeId;
				_valueFrom = daoPromtionCriteriaClient.ValueFrom;
				_excluded = daoPromtionCriteriaClient.Excluded;
				_isActive = daoPromtionCriteriaClient.IsActive;
				_cBy = daoPromtionCriteriaClient.CBy;
				_cDate = daoPromtionCriteriaClient.CDate;
				_eBy = daoPromtionCriteriaClient.EBy;
				_eDate = daoPromtionCriteriaClient.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOPromtionCriteriaClient");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one PromtionCriteriaClient record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOPromtionCriteriaClient
		///</parameters>
		public virtual void Update()
		{
			DAOPromtionCriteriaClient daoPromtionCriteriaClient = new DAOPromtionCriteriaClient();
			RegisterDataObject(daoPromtionCriteriaClient);
			BeginTransaction("updateBOPromtionCriteriaClient");
			try
			{
				daoPromtionCriteriaClient.ClientCriteriaId = _clientCriteriaId;
				daoPromtionCriteriaClient.PromotionId = _promotionId;
				daoPromtionCriteriaClient.ClientAttributeId = _clientAttributeId;
				daoPromtionCriteriaClient.ValueFrom = _valueFrom;
				daoPromtionCriteriaClient.Excluded = _excluded;
				daoPromtionCriteriaClient.IsActive = _isActive;
				daoPromtionCriteriaClient.CBy = _cBy;
				daoPromtionCriteriaClient.CDate = _cDate;
				daoPromtionCriteriaClient.EBy = _eBy;
				daoPromtionCriteriaClient.EDate = _eDate;
				daoPromtionCriteriaClient.Update();
				CommitTransaction();
				
				_clientCriteriaId = daoPromtionCriteriaClient.ClientCriteriaId;
				_promotionId = daoPromtionCriteriaClient.PromotionId;
				_clientAttributeId = daoPromtionCriteriaClient.ClientAttributeId;
				_valueFrom = daoPromtionCriteriaClient.ValueFrom;
				_excluded = daoPromtionCriteriaClient.Excluded;
				_isActive = daoPromtionCriteriaClient.IsActive;
				_cBy = daoPromtionCriteriaClient.CBy;
				_cDate = daoPromtionCriteriaClient.CDate;
				_eBy = daoPromtionCriteriaClient.EBy;
				_eDate = daoPromtionCriteriaClient.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOPromtionCriteriaClient");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one PromtionCriteriaClient record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOPromtionCriteriaClient daoPromtionCriteriaClient = new DAOPromtionCriteriaClient();
			RegisterDataObject(daoPromtionCriteriaClient);
			BeginTransaction("deleteBOPromtionCriteriaClient");
			try
			{
				daoPromtionCriteriaClient.ClientCriteriaId = _clientCriteriaId;
				daoPromtionCriteriaClient.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOPromtionCriteriaClient");
				throw;
			}
		}
		
		///<Summary>
		///PromtionCriteriaClientCollection
		///This method returns the collection of BOPromtionCriteriaClient objects
		///</Summary>
		///<returns>
		///List[BOPromtionCriteriaClient]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOPromtionCriteriaClient> PromtionCriteriaClientCollection()
		{
			try
			{
				IList<BOPromtionCriteriaClient> boPromtionCriteriaClientCollection = new List<BOPromtionCriteriaClient>();
				IList<DAOPromtionCriteriaClient> daoPromtionCriteriaClientCollection = DAOPromtionCriteriaClient.SelectAll();
			
				foreach(DAOPromtionCriteriaClient daoPromtionCriteriaClient in daoPromtionCriteriaClientCollection)
					boPromtionCriteriaClientCollection.Add(new BOPromtionCriteriaClient(daoPromtionCriteriaClient));
			
				return boPromtionCriteriaClientCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromtionCriteriaClientCollectionCount
		///This method returns the collection count of BOPromtionCriteriaClient objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 PromtionCriteriaClientCollectionCount()
		{
			try
			{
				Int32 objCount = DAOPromtionCriteriaClient.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOPromtionCriteriaClient>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOPromtionCriteriaClient.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromtionCriteriaClientCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOPromtionCriteriaClient objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boPromtionCriteriaClientCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOPromtionCriteriaClient> daoPromtionCriteriaClientCollection = DAOPromtionCriteriaClient.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOPromtionCriteriaClient resdaoPromtionCriteriaClient in daoPromtionCriteriaClientCollection)
					boPromtionCriteriaClientCollection.Add((T)(object)new BOPromtionCriteriaClient(resdaoPromtionCriteriaClient));
			
				return boPromtionCriteriaClientCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromtionCriteriaClientCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOPromtionCriteriaClient objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOPromtionCriteriaClient.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? ClientCriteriaId
		{
			get
			{
				 return _clientCriteriaId;
			}
			set
			{
				_clientCriteriaId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PromotionId
		{
			get
			{
				 return _promotionId;
			}
			set
			{
				_promotionId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientAttributeId
		{
			get
			{
				 return _clientAttributeId;
			}
			set
			{
				_clientAttributeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ValueFrom
		{
			get
			{
				 return _valueFrom;
			}
			set
			{
				_valueFrom = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Excluded
		{
			get
			{
				 return _excluded;
			}
			set
			{
				_excluded = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? CBy
		{
			get
			{
				 return _cBy;
			}
			set
			{
				_cBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CDate
		{
			get
			{
				 return _cDate;
			}
			set
			{
				_cDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? EBy
		{
			get
			{
				 return _eBy;
			}
			set
			{
				_eBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? EDate
		{
			get
			{
				 return _eDate;
			}
			set
			{
				_eDate = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
