/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:10:24 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOPromotionOutput.
	///It maintains a collection of BOPromotionType objects.
	///</Summary>
	public partial class BOPromotionOutput : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _promotionOutputId;
		protected string _promotionOutputCode;
		protected string _promotionOutputNameEn;
		protected string _promotionOutputNameAr;
		protected string _icon;
		protected string _color;
		protected Int32? _displayOrder;
		protected bool? _isActive;
		protected bool? _canEdit;
		protected bool? _canDelete;
		protected Int32? _cBy;
		protected DateTime? _cDate;
		protected Int32? _eBy;
		protected DateTime? _eDate;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		List<BOPromotionType> _boPromotionTypeCollection;
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOPromotionOutput()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 promotionOutputId
		///</parameters>
		public BOPromotionOutput(Int32 promotionOutputId)
		{
			try
			{
				DAOPromotionOutput daoPromotionOutput = DAOPromotionOutput.SelectOne(promotionOutputId);
				_promotionOutputId = daoPromotionOutput.PromotionOutputId;
				_promotionOutputCode = daoPromotionOutput.PromotionOutputCode;
				_promotionOutputNameEn = daoPromotionOutput.PromotionOutputNameEn;
				_promotionOutputNameAr = daoPromotionOutput.PromotionOutputNameAr;
				_icon = daoPromotionOutput.Icon;
				_color = daoPromotionOutput.Color;
				_displayOrder = daoPromotionOutput.DisplayOrder;
				_isActive = daoPromotionOutput.IsActive;
				_canEdit = daoPromotionOutput.CanEdit;
				_canDelete = daoPromotionOutput.CanDelete;
				_cBy = daoPromotionOutput.CBy;
				_cDate = daoPromotionOutput.CDate;
				_eBy = daoPromotionOutput.EBy;
				_eDate = daoPromotionOutput.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOPromotionOutput
		///</parameters>
		protected internal BOPromotionOutput(DAOPromotionOutput daoPromotionOutput)
		{
			try
			{
				_promotionOutputId = daoPromotionOutput.PromotionOutputId;
				_promotionOutputCode = daoPromotionOutput.PromotionOutputCode;
				_promotionOutputNameEn = daoPromotionOutput.PromotionOutputNameEn;
				_promotionOutputNameAr = daoPromotionOutput.PromotionOutputNameAr;
				_icon = daoPromotionOutput.Icon;
				_color = daoPromotionOutput.Color;
				_displayOrder = daoPromotionOutput.DisplayOrder;
				_isActive = daoPromotionOutput.IsActive;
				_canEdit = daoPromotionOutput.CanEdit;
				_canDelete = daoPromotionOutput.CanDelete;
				_cBy = daoPromotionOutput.CBy;
				_cDate = daoPromotionOutput.CDate;
				_eBy = daoPromotionOutput.EBy;
				_eDate = daoPromotionOutput.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new PromotionOutput record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOPromotionOutput daoPromotionOutput = new DAOPromotionOutput();
			RegisterDataObject(daoPromotionOutput);
			BeginTransaction("savenewBOPromotionOutput");
			try
			{
				daoPromotionOutput.PromotionOutputId = _promotionOutputId;
				daoPromotionOutput.PromotionOutputCode = _promotionOutputCode;
				daoPromotionOutput.PromotionOutputNameEn = _promotionOutputNameEn;
				daoPromotionOutput.PromotionOutputNameAr = _promotionOutputNameAr;
				daoPromotionOutput.Icon = _icon;
				daoPromotionOutput.Color = _color;
				daoPromotionOutput.DisplayOrder = _displayOrder;
				daoPromotionOutput.IsActive = _isActive;
				daoPromotionOutput.CanEdit = _canEdit;
				daoPromotionOutput.CanDelete = _canDelete;
				daoPromotionOutput.CBy = _cBy;
				daoPromotionOutput.CDate = _cDate;
				daoPromotionOutput.EBy = _eBy;
				daoPromotionOutput.EDate = _eDate;
				daoPromotionOutput.Insert();
				CommitTransaction();
				
				_promotionOutputId = daoPromotionOutput.PromotionOutputId;
				_promotionOutputCode = daoPromotionOutput.PromotionOutputCode;
				_promotionOutputNameEn = daoPromotionOutput.PromotionOutputNameEn;
				_promotionOutputNameAr = daoPromotionOutput.PromotionOutputNameAr;
				_icon = daoPromotionOutput.Icon;
				_color = daoPromotionOutput.Color;
				_displayOrder = daoPromotionOutput.DisplayOrder;
				_isActive = daoPromotionOutput.IsActive;
				_canEdit = daoPromotionOutput.CanEdit;
				_canDelete = daoPromotionOutput.CanDelete;
				_cBy = daoPromotionOutput.CBy;
				_cDate = daoPromotionOutput.CDate;
				_eBy = daoPromotionOutput.EBy;
				_eDate = daoPromotionOutput.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOPromotionOutput");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one PromotionOutput record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOPromotionOutput
		///</parameters>
		public virtual void Update()
		{
			DAOPromotionOutput daoPromotionOutput = new DAOPromotionOutput();
			RegisterDataObject(daoPromotionOutput);
			BeginTransaction("updateBOPromotionOutput");
			try
			{
				daoPromotionOutput.PromotionOutputId = _promotionOutputId;
				daoPromotionOutput.PromotionOutputCode = _promotionOutputCode;
				daoPromotionOutput.PromotionOutputNameEn = _promotionOutputNameEn;
				daoPromotionOutput.PromotionOutputNameAr = _promotionOutputNameAr;
				daoPromotionOutput.Icon = _icon;
				daoPromotionOutput.Color = _color;
				daoPromotionOutput.DisplayOrder = _displayOrder;
				daoPromotionOutput.IsActive = _isActive;
				daoPromotionOutput.CanEdit = _canEdit;
				daoPromotionOutput.CanDelete = _canDelete;
				daoPromotionOutput.CBy = _cBy;
				daoPromotionOutput.CDate = _cDate;
				daoPromotionOutput.EBy = _eBy;
				daoPromotionOutput.EDate = _eDate;
				daoPromotionOutput.Update();
				CommitTransaction();
				
				_promotionOutputId = daoPromotionOutput.PromotionOutputId;
				_promotionOutputCode = daoPromotionOutput.PromotionOutputCode;
				_promotionOutputNameEn = daoPromotionOutput.PromotionOutputNameEn;
				_promotionOutputNameAr = daoPromotionOutput.PromotionOutputNameAr;
				_icon = daoPromotionOutput.Icon;
				_color = daoPromotionOutput.Color;
				_displayOrder = daoPromotionOutput.DisplayOrder;
				_isActive = daoPromotionOutput.IsActive;
				_canEdit = daoPromotionOutput.CanEdit;
				_canDelete = daoPromotionOutput.CanDelete;
				_cBy = daoPromotionOutput.CBy;
				_cDate = daoPromotionOutput.CDate;
				_eBy = daoPromotionOutput.EBy;
				_eDate = daoPromotionOutput.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOPromotionOutput");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one PromotionOutput record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOPromotionOutput daoPromotionOutput = new DAOPromotionOutput();
			RegisterDataObject(daoPromotionOutput);
			BeginTransaction("deleteBOPromotionOutput");
			try
			{
				daoPromotionOutput.PromotionOutputId = _promotionOutputId;
				daoPromotionOutput.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOPromotionOutput");
				throw;
			}
		}
		
		///<Summary>
		///PromotionOutputCollection
		///This method returns the collection of BOPromotionOutput objects
		///</Summary>
		///<returns>
		///List[BOPromotionOutput]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOPromotionOutput> PromotionOutputCollection()
		{
			try
			{
				IList<BOPromotionOutput> boPromotionOutputCollection = new List<BOPromotionOutput>();
				IList<DAOPromotionOutput> daoPromotionOutputCollection = DAOPromotionOutput.SelectAll();
			
				foreach(DAOPromotionOutput daoPromotionOutput in daoPromotionOutputCollection)
					boPromotionOutputCollection.Add(new BOPromotionOutput(daoPromotionOutput));
			
				return boPromotionOutputCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromotionOutputCollectionCount
		///This method returns the collection count of BOPromotionOutput objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 PromotionOutputCollectionCount()
		{
			try
			{
				Int32 objCount = DAOPromotionOutput.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///PromotionTypeCollection
		///This method returns its collection of BOPromotionType objects
		///</Summary>
		///<returns>
		///IList[BOPromotionType]
		///</returns>
		///<parameters>
		///BOPromotionOutput
		///</parameters>
		public virtual IList<BOPromotionType> PromotionTypeCollection()
		{
			try
			{
				if(_boPromotionTypeCollection == null)
					LoadPromotionTypeCollection();
				
				return _boPromotionTypeCollection.AsReadOnly();
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOPromotionOutput>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOPromotionOutput.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromotionOutputCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOPromotionOutput objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boPromotionOutputCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOPromotionOutput> daoPromotionOutputCollection = DAOPromotionOutput.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOPromotionOutput resdaoPromotionOutput in daoPromotionOutputCollection)
					boPromotionOutputCollection.Add((T)(object)new BOPromotionOutput(resdaoPromotionOutput));
			
				return boPromotionOutputCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromotionOutputCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOPromotionOutput objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOPromotionOutput.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///LoadPromotionTypeCollection
		///This method loads the internal collection of BOPromotionType objects from storage. 
		///Call this if you need to ensure the collection is up-to-date (concurrency)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void LoadPromotionTypeCollection()
		{
			try
			{
				_boPromotionTypeCollection = new List<BOPromotionType>();
				IList<DAOPromotionType> daoPromotionTypeCollection = DAOPromotionType.SelectAllByPromotionOutputId(_promotionOutputId.Value);
				
				foreach(DAOPromotionType daoPromotionType in daoPromotionTypeCollection)
					_boPromotionTypeCollection.Add(new BOPromotionType(daoPromotionType));
			}
			catch
			{
				throw;
			}
		}
		
		///<Summary>
		///AddPromotionType
		///This method persists a BOPromotionType object to the database collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOPromotionType
		///</parameters>
		public virtual void AddPromotionType(BOPromotionType boPromotionType)
		{
			DAOPromotionType daoPromotionType = new DAOPromotionType();
			RegisterDataObject(daoPromotionType);
			BeginTransaction("addPromotionType");
			try
			{
				daoPromotionType.PromotionTypeId = boPromotionType.PromotionTypeId;
				daoPromotionType.PromotionTypeCode = boPromotionType.PromotionTypeCode;
				daoPromotionType.PromotionTypeNameAr = boPromotionType.PromotionTypeNameAr;
				daoPromotionType.PromotionTypeNameEn = boPromotionType.PromotionTypeNameEn;
				daoPromotionType.PromotionTypeDesc = boPromotionType.PromotionTypeDesc;
				daoPromotionType.PromotionInputId = boPromotionType.PromotionInputId;
				daoPromotionType.IsActive = boPromotionType.IsActive;
				daoPromotionType.CanEdit = boPromotionType.CanEdit;
				daoPromotionType.CanDelete = boPromotionType.CanDelete;
				daoPromotionType.DisplayOrder = boPromotionType.DisplayOrder;
				daoPromotionType.CBy = boPromotionType.CBy;
				daoPromotionType.CDate = boPromotionType.CDate;
				daoPromotionType.EBy = boPromotionType.EBy;
				daoPromotionType.EDate = boPromotionType.EDate;
				daoPromotionType.PromotionOutputId = _promotionOutputId.Value;
				daoPromotionType.Insert();
				CommitTransaction();
				
				/*pick up any primary keys, computed values etc*/
				boPromotionType = new BOPromotionType(daoPromotionType);
				if(_boPromotionTypeCollection != null)
					_boPromotionTypeCollection.Add(boPromotionType);
			}
			catch
			{
				RollbackTransaction("addPromotionType");
				throw;
			}
		}
		
		///<Summary>
		///DeleteAllPromotionType
		///This method deletes all BOPromotionType objects from its collection
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void DeleteAllPromotionType()
		{
			RegisterDataObject(null);
			BeginTransaction("deleteAllPromotionType");
			try
			{
				DAOPromotionType.DeleteAllByPromotionOutputId(ConnectionProvider, _promotionOutputId.Value);
				CommitTransaction();
				if(_boPromotionTypeCollection != null)
				{
					_boPromotionTypeCollection.Clear();
					_boPromotionTypeCollection = null;
				}
			}
			catch
			{
				RollbackTransaction("deleteAllPromotionType");
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? PromotionOutputId
		{
			get
			{
				 return _promotionOutputId;
			}
			set
			{
				_promotionOutputId = value;
				_isDirty = true;
			}
		}
		
		public virtual string PromotionOutputCode
		{
			get
			{
				 return _promotionOutputCode;
			}
			set
			{
				_promotionOutputCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string PromotionOutputNameEn
		{
			get
			{
				 return _promotionOutputNameEn;
			}
			set
			{
				_promotionOutputNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string PromotionOutputNameAr
		{
			get
			{
				 return _promotionOutputNameAr;
			}
			set
			{
				_promotionOutputNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string Icon
		{
			get
			{
				 return _icon;
			}
			set
			{
				_icon = value;
				_isDirty = true;
			}
		}
		
		public virtual string Color
		{
			get
			{
				 return _color;
			}
			set
			{
				_color = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? DisplayOrder
		{
			get
			{
				 return _displayOrder;
			}
			set
			{
				_displayOrder = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanEdit
		{
			get
			{
				 return _canEdit;
			}
			set
			{
				_canEdit = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? CanDelete
		{
			get
			{
				 return _canDelete;
			}
			set
			{
				_canDelete = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? CBy
		{
			get
			{
				 return _cBy;
			}
			set
			{
				_cBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CDate
		{
			get
			{
				 return _cDate;
			}
			set
			{
				_cDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? EBy
		{
			get
			{
				 return _eBy;
			}
			set
			{
				_eBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? EDate
		{
			get
			{
				 return _eDate;
			}
			set
			{
				_eDate = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
