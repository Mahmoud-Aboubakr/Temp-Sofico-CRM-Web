/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 9/9/2023 5:10:24 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOAppUserCart.
	///</Summary>
	public partial class BOAppUserCart : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int64? _cartId;
		protected Int32? _userId;
		protected Int32? _itemId;
		protected Int32? _quantity;
		protected DateTime? _createDate;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOAppUserCart()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int64 cartId
		///</parameters>
		public BOAppUserCart(Int64 cartId)
		{
			try
			{
				DAOAppUserCart daoAppUserCart = DAOAppUserCart.SelectOne(cartId);
				_cartId = daoAppUserCart.CartId;
				_userId = daoAppUserCart.UserId;
				_itemId = daoAppUserCart.ItemId;
				_quantity = daoAppUserCart.Quantity;
				_createDate = daoAppUserCart.CreateDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOAppUserCart
		///</parameters>
		protected internal BOAppUserCart(DAOAppUserCart daoAppUserCart)
		{
			try
			{
				_cartId = daoAppUserCart.CartId;
				_userId = daoAppUserCart.UserId;
				_itemId = daoAppUserCart.ItemId;
				_quantity = daoAppUserCart.Quantity;
				_createDate = daoAppUserCart.CreateDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new AppUserCart record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOAppUserCart daoAppUserCart = new DAOAppUserCart();
			RegisterDataObject(daoAppUserCart);
			BeginTransaction("savenewBOAppUserCart");
			try
			{
				daoAppUserCart.UserId = _userId;
				daoAppUserCart.ItemId = _itemId;
				daoAppUserCart.Quantity = _quantity;
				daoAppUserCart.CreateDate = _createDate;
				daoAppUserCart.Insert();
				CommitTransaction();
				
				_cartId = daoAppUserCart.CartId;
				_userId = daoAppUserCart.UserId;
				_itemId = daoAppUserCart.ItemId;
				_quantity = daoAppUserCart.Quantity;
				_createDate = daoAppUserCart.CreateDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOAppUserCart");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one AppUserCart record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOAppUserCart
		///</parameters>
		public virtual void Update()
		{
			DAOAppUserCart daoAppUserCart = new DAOAppUserCart();
			RegisterDataObject(daoAppUserCart);
			BeginTransaction("updateBOAppUserCart");
			try
			{
				daoAppUserCart.CartId = _cartId;
				daoAppUserCart.UserId = _userId;
				daoAppUserCart.ItemId = _itemId;
				daoAppUserCart.Quantity = _quantity;
				daoAppUserCart.CreateDate = _createDate;
				daoAppUserCart.Update();
				CommitTransaction();
				
				_cartId = daoAppUserCart.CartId;
				_userId = daoAppUserCart.UserId;
				_itemId = daoAppUserCart.ItemId;
				_quantity = daoAppUserCart.Quantity;
				_createDate = daoAppUserCart.CreateDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOAppUserCart");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one AppUserCart record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOAppUserCart daoAppUserCart = new DAOAppUserCart();
			RegisterDataObject(daoAppUserCart);
			BeginTransaction("deleteBOAppUserCart");
			try
			{
				daoAppUserCart.CartId = _cartId;
				daoAppUserCart.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOAppUserCart");
				throw;
			}
		}
		
		///<Summary>
		///AppUserCartCollection
		///This method returns the collection of BOAppUserCart objects
		///</Summary>
		///<returns>
		///List[BOAppUserCart]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOAppUserCart> AppUserCartCollection()
		{
			try
			{
				IList<BOAppUserCart> boAppUserCartCollection = new List<BOAppUserCart>();
				IList<DAOAppUserCart> daoAppUserCartCollection = DAOAppUserCart.SelectAll();
			
				foreach(DAOAppUserCart daoAppUserCart in daoAppUserCartCollection)
					boAppUserCartCollection.Add(new BOAppUserCart(daoAppUserCart));
			
				return boAppUserCartCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserCartCollectionCount
		///This method returns the collection count of BOAppUserCart objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 AppUserCartCollectionCount()
		{
			try
			{
				Int32 objCount = DAOAppUserCart.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOAppUserCart>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOAppUserCart.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserCartCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOAppUserCart objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boAppUserCartCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOAppUserCart> daoAppUserCartCollection = DAOAppUserCart.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOAppUserCart resdaoAppUserCart in daoAppUserCartCollection)
					boAppUserCartCollection.Add((T)(object)new BOAppUserCart(resdaoAppUserCart));
			
				return boAppUserCartCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///AppUserCartCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOAppUserCart objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOAppUserCart.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int64? CartId
		{
			get
			{
				 return _cartId;
			}
			set
			{
				_cartId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? UserId
		{
			get
			{
				 return _userId;
			}
			set
			{
				_userId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ItemId
		{
			get
			{
				 return _itemId;
			}
			set
			{
				_itemId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Quantity
		{
			get
			{
				 return _quantity;
			}
			set
			{
				_quantity = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CreateDate
		{
			get
			{
				 return _createDate;
			}
			set
			{
				_createDate = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
