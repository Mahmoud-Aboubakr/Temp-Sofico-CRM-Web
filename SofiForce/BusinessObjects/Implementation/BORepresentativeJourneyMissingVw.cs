/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BORepresentativeJourneyMissingVw.
	///</Summary>
	public partial class BORepresentativeJourneyMissingVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _representativeId;
		protected string _representativeCode;
		protected string _representativeNameAr;
		protected string _representativeNameEn;
		protected string _branchCode;
		protected string _branchNameAr;
		protected string _branchNameEn;
		protected Int32? _branchId;
		protected Int32? _kindId;
		protected string _kindCode;
		protected string _kindNameAr;
		protected string _kindNameEn;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BORepresentativeJourneyMissingVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAORepresentativeJourneyMissingVw
		///</parameters>
		protected internal BORepresentativeJourneyMissingVw(DAORepresentativeJourneyMissingVw daoRepresentativeJourneyMissingVw)
		{
			try
			{
				_representativeId = daoRepresentativeJourneyMissingVw.RepresentativeId;
				_representativeCode = daoRepresentativeJourneyMissingVw.RepresentativeCode;
				_representativeNameAr = daoRepresentativeJourneyMissingVw.RepresentativeNameAr;
				_representativeNameEn = daoRepresentativeJourneyMissingVw.RepresentativeNameEn;
				_branchCode = daoRepresentativeJourneyMissingVw.BranchCode;
				_branchNameAr = daoRepresentativeJourneyMissingVw.BranchNameAr;
				_branchNameEn = daoRepresentativeJourneyMissingVw.BranchNameEn;
				_branchId = daoRepresentativeJourneyMissingVw.BranchId;
				_kindId = daoRepresentativeJourneyMissingVw.KindId;
				_kindCode = daoRepresentativeJourneyMissingVw.KindCode;
				_kindNameAr = daoRepresentativeJourneyMissingVw.KindNameAr;
				_kindNameEn = daoRepresentativeJourneyMissingVw.KindNameEn;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///RepresentativeJourneyMissingVwCollection
		///This method returns the collection of BORepresentativeJourneyMissingVw objects
		///</Summary>
		///<returns>
		///List[BORepresentativeJourneyMissingVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BORepresentativeJourneyMissingVw> RepresentativeJourneyMissingVwCollection()
		{
			try
			{
				IList<BORepresentativeJourneyMissingVw> boRepresentativeJourneyMissingVwCollection = new List<BORepresentativeJourneyMissingVw>();
				IList<DAORepresentativeJourneyMissingVw> daoRepresentativeJourneyMissingVwCollection = DAORepresentativeJourneyMissingVw.SelectAll();
			
				foreach(DAORepresentativeJourneyMissingVw daoRepresentativeJourneyMissingVw in daoRepresentativeJourneyMissingVwCollection)
					boRepresentativeJourneyMissingVwCollection.Add(new BORepresentativeJourneyMissingVw(daoRepresentativeJourneyMissingVw));
			
				return boRepresentativeJourneyMissingVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///RepresentativeJourneyMissingVwCollectionCount
		///This method returns the collection count of BORepresentativeJourneyMissingVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 RepresentativeJourneyMissingVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAORepresentativeJourneyMissingVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BORepresentativeJourneyMissingVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAORepresentativeJourneyMissingVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///RepresentativeJourneyMissingVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BORepresentativeJourneyMissingVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boRepresentativeJourneyMissingVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAORepresentativeJourneyMissingVw> daoRepresentativeJourneyMissingVwCollection = DAORepresentativeJourneyMissingVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAORepresentativeJourneyMissingVw resdaoRepresentativeJourneyMissingVw in daoRepresentativeJourneyMissingVwCollection)
					boRepresentativeJourneyMissingVwCollection.Add((T)(object)new BORepresentativeJourneyMissingVw(resdaoRepresentativeJourneyMissingVw));
			
				return boRepresentativeJourneyMissingVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///RepresentativeJourneyMissingVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BORepresentativeJourneyMissingVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAORepresentativeJourneyMissingVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? RepresentativeId
		{
			get
			{
				 return _representativeId;
			}
			set
			{
				_representativeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeCode
		{
			get
			{
				 return _representativeCode;
			}
			set
			{
				_representativeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameAr
		{
			get
			{
				 return _representativeNameAr;
			}
			set
			{
				_representativeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameEn
		{
			get
			{
				 return _representativeNameEn;
			}
			set
			{
				_representativeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? KindId
		{
			get
			{
				 return _kindId;
			}
			set
			{
				_kindId = value;
				_isDirty = true;
			}
		}
		
		public virtual string KindCode
		{
			get
			{
				 return _kindCode;
			}
			set
			{
				_kindCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string KindNameAr
		{
			get
			{
				 return _kindNameAr;
			}
			set
			{
				_kindNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string KindNameEn
		{
			get
			{
				 return _kindNameEn;
			}
			set
			{
				_kindNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
