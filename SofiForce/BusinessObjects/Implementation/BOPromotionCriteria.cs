/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOPromotionCriteria.
	///</Summary>
	public partial class BOPromotionCriteria : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _criteriaId;
		protected Int32? _promotionId;
		protected Int32? _groupId;
		protected Int32? _attributeId;
		protected string _valueFrom;
		protected bool? _isActive;
		protected bool? _excluded;
		protected Int32? _cBy;
		protected DateTime? _cDate;
		protected Int32? _eBy;
		protected DateTime? _eDate;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOPromotionCriteria()
		{
		}

		///<Summary>
		///Constructor
		///Constructor using primary key(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///Int32 criteriaId
		///</parameters>
		public BOPromotionCriteria(Int32 criteriaId)
		{
			try
			{
				DAOPromotionCriteria daoPromotionCriteria = DAOPromotionCriteria.SelectOne(criteriaId);
				_criteriaId = daoPromotionCriteria.CriteriaId;
				_promotionId = daoPromotionCriteria.PromotionId;
				_groupId = daoPromotionCriteria.GroupId;
				_attributeId = daoPromotionCriteria.AttributeId;
				_valueFrom = daoPromotionCriteria.ValueFrom;
				_isActive = daoPromotionCriteria.IsActive;
				_excluded = daoPromotionCriteria.Excluded;
				_cBy = daoPromotionCriteria.CBy;
				_cDate = daoPromotionCriteria.CDate;
				_eBy = daoPromotionCriteria.EBy;
				_eDate = daoPromotionCriteria.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///Constructor using unique field(s)
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///ValueFrom
		///</parameters>
		public BOPromotionCriteria(Int32 promotionId, Int32 groupId, Int32 attributeId, string valueFrom)
		{
			try
			{
				DAOPromotionCriteria daoPromotionCriteria = DAOPromotionCriteria.SelectOneByUniqueFields(promotionId, groupId, attributeId, valueFrom);
				_criteriaId = daoPromotionCriteria.CriteriaId;
				_promotionId = daoPromotionCriteria.PromotionId;
				_groupId = daoPromotionCriteria.GroupId;
				_attributeId = daoPromotionCriteria.AttributeId;
				_valueFrom = daoPromotionCriteria.ValueFrom;
				_isActive = daoPromotionCriteria.IsActive;
				_excluded = daoPromotionCriteria.Excluded;
				_cBy = daoPromotionCriteria.CBy;
				_cDate = daoPromotionCriteria.CDate;
				_eBy = daoPromotionCriteria.EBy;
				_eDate = daoPromotionCriteria.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOPromotionCriteria
		///</parameters>
		protected internal BOPromotionCriteria(DAOPromotionCriteria daoPromotionCriteria)
		{
			try
			{
				_criteriaId = daoPromotionCriteria.CriteriaId;
				_promotionId = daoPromotionCriteria.PromotionId;
				_groupId = daoPromotionCriteria.GroupId;
				_attributeId = daoPromotionCriteria.AttributeId;
				_valueFrom = daoPromotionCriteria.ValueFrom;
				_isActive = daoPromotionCriteria.IsActive;
				_excluded = daoPromotionCriteria.Excluded;
				_cBy = daoPromotionCriteria.CBy;
				_cDate = daoPromotionCriteria.CDate;
				_eBy = daoPromotionCriteria.EBy;
				_eDate = daoPromotionCriteria.EDate;
			}
			catch
			{
				throw;
			}
		}

		///<Summary>
		///SaveNew
		///This method persists a new PromotionCriteria record to the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void SaveNew()
		{
			DAOPromotionCriteria daoPromotionCriteria = new DAOPromotionCriteria();
			RegisterDataObject(daoPromotionCriteria);
			BeginTransaction("savenewBOPromotionCriteria");
			try
			{
				daoPromotionCriteria.PromotionId = _promotionId;
				daoPromotionCriteria.GroupId = _groupId;
				daoPromotionCriteria.AttributeId = _attributeId;
				daoPromotionCriteria.ValueFrom = _valueFrom;
				daoPromotionCriteria.IsActive = _isActive;
				daoPromotionCriteria.Excluded = _excluded;
				daoPromotionCriteria.CBy = _cBy;
				daoPromotionCriteria.CDate = _cDate;
				daoPromotionCriteria.EBy = _eBy;
				daoPromotionCriteria.EDate = _eDate;
				daoPromotionCriteria.Insert();
				CommitTransaction();
				
				_criteriaId = daoPromotionCriteria.CriteriaId;
				_promotionId = daoPromotionCriteria.PromotionId;
				_groupId = daoPromotionCriteria.GroupId;
				_attributeId = daoPromotionCriteria.AttributeId;
				_valueFrom = daoPromotionCriteria.ValueFrom;
				_isActive = daoPromotionCriteria.IsActive;
				_excluded = daoPromotionCriteria.Excluded;
				_cBy = daoPromotionCriteria.CBy;
				_cDate = daoPromotionCriteria.CDate;
				_eBy = daoPromotionCriteria.EBy;
				_eDate = daoPromotionCriteria.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("savenewBOPromotionCriteria");
				throw;
			}
		}
		
		///<Summary>
		///Update
		///This method updates one PromotionCriteria record in the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///BOPromotionCriteria
		///</parameters>
		public virtual void Update()
		{
			DAOPromotionCriteria daoPromotionCriteria = new DAOPromotionCriteria();
			RegisterDataObject(daoPromotionCriteria);
			BeginTransaction("updateBOPromotionCriteria");
			try
			{
				daoPromotionCriteria.CriteriaId = _criteriaId;
				daoPromotionCriteria.PromotionId = _promotionId;
				daoPromotionCriteria.GroupId = _groupId;
				daoPromotionCriteria.AttributeId = _attributeId;
				daoPromotionCriteria.ValueFrom = _valueFrom;
				daoPromotionCriteria.IsActive = _isActive;
				daoPromotionCriteria.Excluded = _excluded;
				daoPromotionCriteria.CBy = _cBy;
				daoPromotionCriteria.CDate = _cDate;
				daoPromotionCriteria.EBy = _eBy;
				daoPromotionCriteria.EDate = _eDate;
				daoPromotionCriteria.Update();
				CommitTransaction();
				
				_criteriaId = daoPromotionCriteria.CriteriaId;
				_promotionId = daoPromotionCriteria.PromotionId;
				_groupId = daoPromotionCriteria.GroupId;
				_attributeId = daoPromotionCriteria.AttributeId;
				_valueFrom = daoPromotionCriteria.ValueFrom;
				_isActive = daoPromotionCriteria.IsActive;
				_excluded = daoPromotionCriteria.Excluded;
				_cBy = daoPromotionCriteria.CBy;
				_cDate = daoPromotionCriteria.CDate;
				_eBy = daoPromotionCriteria.EBy;
				_eDate = daoPromotionCriteria.EDate;
				_isDirty = false;
			}
			catch
			{
				RollbackTransaction("updateBOPromotionCriteria");
				throw;
			}
		}
		///<Summary>
		///Delete
		///This method deletes one PromotionCriteria record from the store
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public virtual void Delete()
		{
			DAOPromotionCriteria daoPromotionCriteria = new DAOPromotionCriteria();
			RegisterDataObject(daoPromotionCriteria);
			BeginTransaction("deleteBOPromotionCriteria");
			try
			{
				daoPromotionCriteria.CriteriaId = _criteriaId;
				daoPromotionCriteria.Delete();
				CommitTransaction();
			}
			catch
			{
				RollbackTransaction("deleteBOPromotionCriteria");
				throw;
			}
		}
		
		///<Summary>
		///PromotionCriteriaCollection
		///This method returns the collection of BOPromotionCriteria objects
		///</Summary>
		///<returns>
		///List[BOPromotionCriteria]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOPromotionCriteria> PromotionCriteriaCollection()
		{
			try
			{
				IList<BOPromotionCriteria> boPromotionCriteriaCollection = new List<BOPromotionCriteria>();
				IList<DAOPromotionCriteria> daoPromotionCriteriaCollection = DAOPromotionCriteria.SelectAll();
			
				foreach(DAOPromotionCriteria daoPromotionCriteria in daoPromotionCriteriaCollection)
					boPromotionCriteriaCollection.Add(new BOPromotionCriteria(daoPromotionCriteria));
			
				return boPromotionCriteriaCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromotionCriteriaCollectionCount
		///This method returns the collection count of BOPromotionCriteria objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 PromotionCriteriaCollectionCount()
		{
			try
			{
				Int32 objCount = DAOPromotionCriteria.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOPromotionCriteria>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOPromotionCriteria.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromotionCriteriaCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOPromotionCriteria objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boPromotionCriteriaCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOPromotionCriteria> daoPromotionCriteriaCollection = DAOPromotionCriteria.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOPromotionCriteria resdaoPromotionCriteria in daoPromotionCriteriaCollection)
					boPromotionCriteriaCollection.Add((T)(object)new BOPromotionCriteria(resdaoPromotionCriteria));
			
				return boPromotionCriteriaCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///PromotionCriteriaCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOPromotionCriteria objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOPromotionCriteria.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? CriteriaId
		{
			get
			{
				 return _criteriaId;
			}
			set
			{
				_criteriaId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? PromotionId
		{
			get
			{
				 return _promotionId;
			}
			set
			{
				_promotionId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? GroupId
		{
			get
			{
				 return _groupId;
			}
			set
			{
				_groupId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? AttributeId
		{
			get
			{
				 return _attributeId;
			}
			set
			{
				_attributeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ValueFrom
		{
			get
			{
				 return _valueFrom;
			}
			set
			{
				_valueFrom = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsActive
		{
			get
			{
				 return _isActive;
			}
			set
			{
				_isActive = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? Excluded
		{
			get
			{
				 return _excluded;
			}
			set
			{
				_excluded = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? CBy
		{
			get
			{
				 return _cBy;
			}
			set
			{
				_cBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CDate
		{
			get
			{
				 return _cDate;
			}
			set
			{
				_cDate = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? EBy
		{
			get
			{
				 return _eBy;
			}
			set
			{
				_eBy = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? EDate
		{
			get
			{
				 return _eDate;
			}
			set
			{
				_eDate = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
