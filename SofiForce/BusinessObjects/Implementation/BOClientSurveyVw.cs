/*************************************************************
** Class generated by CodeTrigger, Version 6.1.0.7
** This class was generated on 3/23/2023 3:30:39 PM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using SofiForce.DataObjects;
using SofiForce.DataObjects.Interfaces;
using SofiForce.BusinessObjects.Interfaces;

namespace SofiForce.BusinessObjects
{
	///<Summary>
	///Class definition
	///This is the definition of the class BOClientSurveyVw.
	///</Summary>
	public partial class BOClientSurveyVw : zSofiForceConn_BaseBusiness, IQueryableCollection
	{
		#region member variables
		protected Int32? _clientTypeId;
		protected Int64? _clientServeyId;
		protected Int32? _surveyId;
		protected Int32? _serveyStatusId;
		protected Int32? _clientId;
		protected DateTime? _createDate;
		protected DateTime? _createTime;
		protected DateTime? _startDate;
		protected DateTime? _startTime;
		protected string _surveyNameEn;
		protected string _surveyNameAr;
		protected string _serveyStatusNameEn;
		protected string _serveyStatusNameAr;
		protected Int32? _serveyGroupId;
		protected string _serveyGroupNameEn;
		protected string _serveyGroupNameAr;
		protected Int32? _representativeId;
		protected string _representativeCode;
		protected string _representativeNameAr;
		protected string _representativeNameEn;
		protected bool? _isClosed;
		protected string _clientCode;
		protected string _clientNameAr;
		protected string _clientNameEn;
		protected Int32? _expr1;
		protected string _branchCode;
		protected string _branchNameAr;
		protected string _branchNameEn;
		protected Int32? _branchId;
		protected string _serveyStatusColor;
		protected double? _latitude;
		protected double? _longitude;
		protected bool? _inZone;
		protected double? _distance;
		protected bool _isDirty = false;
		/*collection member objects*******************/
		/*********************************************/
		#endregion

		#region class methods
		///<Summary>
		///Constructor
		///This is the default constructor
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///
		///</parameters>
		public BOClientSurveyVw()
		{
		}

		///<Summary>
		///Constructor
		///This constructor initializes the business object from its respective data object
		///</Summary>
		///<returns>
		///void
		///</returns>
		///<parameters>
		///DAOClientSurveyVw
		///</parameters>
		protected internal BOClientSurveyVw(DAOClientSurveyVw daoClientSurveyVw)
		{
			try
			{
				_clientTypeId = daoClientSurveyVw.ClientTypeId;
				_clientServeyId = daoClientSurveyVw.ClientServeyId;
				_surveyId = daoClientSurveyVw.SurveyId;
				_serveyStatusId = daoClientSurveyVw.ServeyStatusId;
				_clientId = daoClientSurveyVw.ClientId;
				_createDate = daoClientSurveyVw.CreateDate;
				_createTime = daoClientSurveyVw.CreateTime;
				_startDate = daoClientSurveyVw.StartDate;
				_startTime = daoClientSurveyVw.StartTime;
				_surveyNameEn = daoClientSurveyVw.SurveyNameEn;
				_surveyNameAr = daoClientSurveyVw.SurveyNameAr;
				_serveyStatusNameEn = daoClientSurveyVw.ServeyStatusNameEn;
				_serveyStatusNameAr = daoClientSurveyVw.ServeyStatusNameAr;
				_serveyGroupId = daoClientSurveyVw.ServeyGroupId;
				_serveyGroupNameEn = daoClientSurveyVw.ServeyGroupNameEn;
				_serveyGroupNameAr = daoClientSurveyVw.ServeyGroupNameAr;
				_representativeId = daoClientSurveyVw.RepresentativeId;
				_representativeCode = daoClientSurveyVw.RepresentativeCode;
				_representativeNameAr = daoClientSurveyVw.RepresentativeNameAr;
				_representativeNameEn = daoClientSurveyVw.RepresentativeNameEn;
				_isClosed = daoClientSurveyVw.IsClosed;
				_clientCode = daoClientSurveyVw.ClientCode;
				_clientNameAr = daoClientSurveyVw.ClientNameAr;
				_clientNameEn = daoClientSurveyVw.ClientNameEn;
				_expr1 = daoClientSurveyVw.Expr1;
				_branchCode = daoClientSurveyVw.BranchCode;
				_branchNameAr = daoClientSurveyVw.BranchNameAr;
				_branchNameEn = daoClientSurveyVw.BranchNameEn;
				_branchId = daoClientSurveyVw.BranchId;
				_serveyStatusColor = daoClientSurveyVw.ServeyStatusColor;
				_latitude = daoClientSurveyVw.Latitude;
				_longitude = daoClientSurveyVw.Longitude;
				_inZone = daoClientSurveyVw.InZone;
				_distance = daoClientSurveyVw.Distance;
			}
			catch
			{
				throw;
			}
		}

		
		///<Summary>
		///ClientSurveyVwCollection
		///This method returns the collection of BOClientSurveyVw objects
		///</Summary>
		///<returns>
		///List[BOClientSurveyVw]
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static IList<BOClientSurveyVw> ClientSurveyVwCollection()
		{
			try
			{
				IList<BOClientSurveyVw> boClientSurveyVwCollection = new List<BOClientSurveyVw>();
				IList<DAOClientSurveyVw> daoClientSurveyVwCollection = DAOClientSurveyVw.SelectAll();
			
				foreach(DAOClientSurveyVw daoClientSurveyVw in daoClientSurveyVwCollection)
					boClientSurveyVwCollection.Add(new BOClientSurveyVw(daoClientSurveyVw));
			
				return boClientSurveyVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientSurveyVwCollectionCount
		///This method returns the collection count of BOClientSurveyVw objects
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///
		///</parameters>
		public static Int32 ClientSurveyVwCollectionCount()
		{
			try
			{
				Int32 objCount = DAOClientSurveyVw.SelectAllCount();
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///Projections
		///This method returns the collection of projections, ordered and filtered by optional criteria
		///</Summary>
		///<returns>
		///List<BOClientSurveyVw>
		///</returns>
		///<parameters>
		///ICriteria icriteria
		///</parameters>
		public virtual IDictionary<string, IList<object>> Projections(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataProjection> lstDataProjection = (icriteria == null) ? null : icriteria.ListDataProjection();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IDictionary<string, IList<object>> retObj = DAOClientSurveyVw.SelectAllByCriteriaProjection(lstDataProjection, lstDataCriteria, lstDataOrder, dataSkip, dataTake);
				return retObj;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientSurveyVwCollection<T>
		///This method implements the IQueryable Collection<T> method, returning a collection of BOClientSurveyVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///IList<T>
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual IList<T> Collection<T>(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<T> boClientSurveyVwCollection = new List<T>();
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				IList<IDataOrderBy> lstDataOrder = (icriteria == null) ? null : icriteria.ListDataOrder();
				IDataTake dataTake = (icriteria == null) ? null : icriteria.DataTake();
				IDataSkip dataSkip = (icriteria == null) ? null : icriteria.DataSkip();
				IList<DAOClientSurveyVw> daoClientSurveyVwCollection = DAOClientSurveyVw.SelectAllByCriteria(lstDataCriteria, lstDataOrder, dataSkip, dataTake);
			
				foreach(DAOClientSurveyVw resdaoClientSurveyVw in daoClientSurveyVwCollection)
					boClientSurveyVwCollection.Add((T)(object)new BOClientSurveyVw(resdaoClientSurveyVw));
			
				return boClientSurveyVwCollection;
			}
			catch
			{
				throw;
			}
		}
		
		
		///<Summary>
		///ClientSurveyVwCollectionCount
		///This method implements the IQueryable CollectionCount method, returning a collection count of BOClientSurveyVw objects, filtered by optional criteria
		///</Summary>
		///<returns>
		///Int32
		///</returns>
		///<parameters>
		///object o
		///</parameters>
		public virtual Int32 CollectionCount(object o)
		{
			try
			{
				ICriteria icriteria = (ICriteria)o;
				IList<IDataCriterion> lstDataCriteria = (icriteria == null) ? null : icriteria.ListDataCriteria();
				Int32 objCount = DAOClientSurveyVw.SelectAllByCriteriaCount(lstDataCriteria);
				return objCount;
			}
			catch
			{
				throw;
			}
		}
		
		#endregion

		#region member properties
		
		public virtual Int32? ClientTypeId
		{
			get
			{
				 return _clientTypeId;
			}
			set
			{
				_clientTypeId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int64? ClientServeyId
		{
			get
			{
				 return _clientServeyId;
			}
			set
			{
				_clientServeyId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? SurveyId
		{
			get
			{
				 return _surveyId;
			}
			set
			{
				_surveyId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ServeyStatusId
		{
			get
			{
				 return _serveyStatusId;
			}
			set
			{
				_serveyStatusId = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ClientId
		{
			get
			{
				 return _clientId;
			}
			set
			{
				_clientId = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CreateDate
		{
			get
			{
				 return _createDate;
			}
			set
			{
				_createDate = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? CreateTime
		{
			get
			{
				 return _createTime;
			}
			set
			{
				_createTime = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? StartDate
		{
			get
			{
				 return _startDate;
			}
			set
			{
				_startDate = value;
				_isDirty = true;
			}
		}
		
		public virtual DateTime? StartTime
		{
			get
			{
				 return _startTime;
			}
			set
			{
				_startTime = value;
				_isDirty = true;
			}
		}
		
		public virtual string SurveyNameEn
		{
			get
			{
				 return _surveyNameEn;
			}
			set
			{
				_surveyNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string SurveyNameAr
		{
			get
			{
				 return _surveyNameAr;
			}
			set
			{
				_surveyNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ServeyStatusNameEn
		{
			get
			{
				 return _serveyStatusNameEn;
			}
			set
			{
				_serveyStatusNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ServeyStatusNameAr
		{
			get
			{
				 return _serveyStatusNameAr;
			}
			set
			{
				_serveyStatusNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? ServeyGroupId
		{
			get
			{
				 return _serveyGroupId;
			}
			set
			{
				_serveyGroupId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ServeyGroupNameEn
		{
			get
			{
				 return _serveyGroupNameEn;
			}
			set
			{
				_serveyGroupNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual string ServeyGroupNameAr
		{
			get
			{
				 return _serveyGroupNameAr;
			}
			set
			{
				_serveyGroupNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? RepresentativeId
		{
			get
			{
				 return _representativeId;
			}
			set
			{
				_representativeId = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeCode
		{
			get
			{
				 return _representativeCode;
			}
			set
			{
				_representativeCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameAr
		{
			get
			{
				 return _representativeNameAr;
			}
			set
			{
				_representativeNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string RepresentativeNameEn
		{
			get
			{
				 return _representativeNameEn;
			}
			set
			{
				_representativeNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? IsClosed
		{
			get
			{
				 return _isClosed;
			}
			set
			{
				_isClosed = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientCode
		{
			get
			{
				 return _clientCode;
			}
			set
			{
				_clientCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameAr
		{
			get
			{
				 return _clientNameAr;
			}
			set
			{
				_clientNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string ClientNameEn
		{
			get
			{
				 return _clientNameEn;
			}
			set
			{
				_clientNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? Expr1
		{
			get
			{
				 return _expr1;
			}
			set
			{
				_expr1 = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchCode
		{
			get
			{
				 return _branchCode;
			}
			set
			{
				_branchCode = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameAr
		{
			get
			{
				 return _branchNameAr;
			}
			set
			{
				_branchNameAr = value;
				_isDirty = true;
			}
		}
		
		public virtual string BranchNameEn
		{
			get
			{
				 return _branchNameEn;
			}
			set
			{
				_branchNameEn = value;
				_isDirty = true;
			}
		}
		
		public virtual Int32? BranchId
		{
			get
			{
				 return _branchId;
			}
			set
			{
				_branchId = value;
				_isDirty = true;
			}
		}
		
		public virtual string ServeyStatusColor
		{
			get
			{
				 return _serveyStatusColor;
			}
			set
			{
				_serveyStatusColor = value;
				_isDirty = true;
			}
		}
		
		public virtual double? Latitude
		{
			get
			{
				 return _latitude;
			}
			set
			{
				_latitude = value;
				_isDirty = true;
			}
		}
		
		public virtual double? Longitude
		{
			get
			{
				 return _longitude;
			}
			set
			{
				_longitude = value;
				_isDirty = true;
			}
		}
		
		public virtual bool? InZone
		{
			get
			{
				 return _inZone;
			}
			set
			{
				_inZone = value;
				_isDirty = true;
			}
		}
		
		public virtual double? Distance
		{
			get
			{
				 return _distance;
			}
			set
			{
				_distance = value;
				_isDirty = true;
			}
		}
		
		public virtual object Repository
		{
			get {	return null;	}
			set	{	}
		}
		
		public virtual bool IsDirty
		{
			get
			{
				 return _isDirty;
			}
			set
			{
				_isDirty = value;
			}
		}
		#endregion
	}
}
